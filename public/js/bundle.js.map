{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/actions/DevicesListActions.js","app/actions/FooterActions.js","app/actions/HomePageActions.js","app/actions/NavbarActions.js","app/actions/ProjectActions.js","app/actions/ResourceActions.js","app/actions/ServiceActions.js","app/actions/TeamActions.js","app/alt.js","app/components/App.js","app/components/Carousel.js","app/components/Device.js","app/components/DevicesList.js","app/components/Footer.js","app/components/HomeModuleTitle.js","app/components/HomePage.js","app/components/Intention.js","app/components/Navbar.js","app/components/NewServiceBlock.js","app/components/News.js","app/components/Project.js","app/components/Resource.js","app/components/ResourceData.js","app/components/ResourceDataBlock.js","app/components/ResourceDes.js","app/components/ResourceDesBlock.js","app/components/ResourceTools.js","app/components/Services.js","app/components/ServicesList.js","app/components/Team.js","app/components/Topology.js","app/main.js","app/routes.js","app/stores/DevicesListStores.js","app/stores/FooterStore.js","app/stores/HomePageStore.js","app/stores/NavbarStore.js","app/stores/ProjectStore.js","app/stores/ResourceStore.js","app/stores/ServiceStore.js","app/stores/TeamStore.js","node_modules/chain-function/index.js","node_modules/deep-equal/index.js","node_modules/deep-equal/lib/is_arguments.js","node_modules/deep-equal/lib/keys.js","node_modules/history/lib/Actions.js","node_modules/history/lib/AsyncUtils.js","node_modules/history/lib/DOMStateStorage.js","node_modules/history/lib/DOMUtils.js","node_modules/history/lib/ExecutionEnvironment.js","node_modules/history/lib/createBrowserHistory.js","node_modules/history/lib/createDOMHistory.js","node_modules/history/lib/createHistory.js","node_modules/history/lib/createLocation.js","node_modules/history/lib/deprecate.js","node_modules/history/lib/extractPath.js","node_modules/history/lib/parsePath.js","node_modules/history/lib/runTransitionHook.js","node_modules/invariant/browser.js","node_modules/process/browser.js","node_modules/prop-types/checkPropTypes.js","node_modules/prop-types/factoryWithThrowingShims.js","node_modules/prop-types/factoryWithTypeCheckers.js","node_modules/prop-types/index.js","node_modules/prop-types/lib/ReactPropTypesSecret.js","node_modules/prop-types/node_modules/fbjs/lib/emptyFunction.js","node_modules/prop-types/node_modules/fbjs/lib/invariant.js","node_modules/prop-types/node_modules/fbjs/lib/warning.js","node_modules/prop-types/node_modules/object-assign/index.js","node_modules/react-transition-group/TransitionGroup.js","node_modules/react-transition-group/node_modules/warning/browser.js","node_modules/react-transition-group/utils/ChildMapping.js","node_modules/warning/browser.js"],"names":[],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACpfile":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import alt from '../alt';\n\nclass DevicesListActions {\n    constructor() {\n        this.generateActions(\n            'getDevicesListFail',\n            'getDevicesListSucess',\n        );\n    }\n\n    getDefaultMessage() {\n\n    }\n}\n\nexport default alt.createActions(DevicesListActions);","import alt from '../alt';\n\nclass FooterActions {\n  constructor() {\n    this.generateActions(\n      'getTopCharactersSuccess',\n      'getTopCharactersFail'\n    );\n  }\n\n  getTopCharacters() {\n    $.ajax({ url: '/api/characters/top' })\n      .done((data) => {\n        this.actions.getTopCharactersSuccess(data)\n      })\n      .fail((jqXhr) => {\n        this.actions.getTopCharactersFail(jqXhr)\n      });\n  }\n}\n\nexport default alt.createActions(FooterActions);","import alt from '../alt';\n\nclass HomePageActions {\n    constructor() {\n        this.generateActions(\n            'getDefaultMessage'\n        );\n    }\n\n}\n\nexport default alt.createActions(HomePageActions);","import alt from '../alt';\nimport {\n  assign\n} from 'underscore';\n\nclass NavbarActions {\n  constructor() {\n    this.generateActions(\n      'updateOnlineUsers',\n      'updateAjaxAnimation',\n      'updateSearchQuery',\n      'getCharacterCountSuccess',\n      'getCharacterCountFail',\n      'findCharacterSuccess',\n      'findCharacterFail'\n    );\n  }\n\n  findCharacter(payload) {\n    $.ajax({\n        url: '/api/characters/search',\n        data: {\n          name: payload.searchQuery\n        }\n      })\n      .done((data) => {\n        assign(payload, data);\n        this.actions.findCharacterSuccess(payload);\n      })\n      .fail(() => {\n        this.actions.findCharacterFail(payload);\n      });\n  }\n\n  getCharacterCount() {\n    $.ajax({\n        url: '/api/characters/count'\n      })\n      .done((data) => {\n        this.actions.getCharacterCountSuccess(data)\n      })\n      .fail((jqXhr) => {\n        this.actions.getCharacterCountFail(jqXhr)\n      });\n  }\n}\n\nexport default alt.createActions(NavbarActions);","import alt from '../alt';\n\nclass ProjectActions {\n    constructor() {\n        this.generateActions(\n            'getDefaultMessgae'\n        );\n    }\n}\n\nexport default alt.createActions(ProjectActions);","import alt from '../alt'\n\nclass ResourceActions {\n    constructor() {\n        this.generateActions([\n            'getResourcesSuccess',\n            'getResourcesFail',\n            'getResource'\n        ]);\n    }\n}\n\nexport default alt.createActions(ResourceActions);","import alt from '../alt'\nimport {\n\tassign\n} from 'underscore';\n\nclass ServiceActions {\n\tconstructor() {\n\t\tthis.generateActions(\n\t\t\t'setMessageSuccess',\n\t\t\t'setMessageFail',\n\t\t\t'getMessageSuccess',\n\t\t\t'getMessageFail'\n\t\t);\n\t}\n\n\tgetDefaultMessage() {\n\t\t$.ajax({\n\t\t\turl: 'api/services',\n\t\t\tdata: {}\n\t\t}).done((data) => {\n\t\t\tthis.actions.getMessageSuccess(data);\n\t\t}).fail(() => {\n\t\t\tthis.actions.getMessageFail(data);\n\t\t});\n\t}\n\n\tsetMessage() {\n\t\tconsole.log('setMessage');\n\t\t$.ajax({\n\t\t\turl: 'api/setService',\n\t\t\tdata: {}\n\t\t}).done((data) => {\n\t\t\tconsole.log('setMessage', data);\n\t\t\tthis.actions.setMessageSuccess(data);\n\t\t}).fail((err) => {\n\t\t\tconsole.log('setMessageFail', err);\n\t\t\tthis.actions.setMessageFail(err);\n\t\t});\n\t}\n}\n\nexport default alt.createActions(ServiceActions);","import alt from '../alt';\n\nclass TeamActions {\n    constructor() {\n        this.generateActions(\n            'getDefaultMessage'\n        );\n    }\n}\n\nexport default alt.createActions(TeamActions);","import Alt from 'alt';\n\nexport default new Alt();","import React from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                <Navbar history={this.props.history} />\n                {this.props.children}\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\n\nclass Carousel extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div id=\"myCarousel\" className=\"carousel slide\">\n                <ol className=\"carousel-indicators\">\n                    <li data-target=\"#myCarousel\" data-slide-to=\"0\" className=\"active\"></li>\n                    <li data-target=\"#myCarousel\" data-slide-to=\"1\"></li>\n                    <li data-target=\"#myCarousel\" data-slide-to=\"2\"></li>\n                </ol>   \n                <div className=\"carousel-inner\">\n                    <div className=\"item active\">\n                        <img src=\"/img/1.jpg\" alt=\"First slide\" />\n                    </div>\n                    <div className=\"item\">\n                        <img src=\"/img/2.jpg\" alt=\"Second slide\" />\n                    </div>\n                    <div className=\"item\">\n                        <img src=\"/img/3.jpg\" alt=\"Third slide\" />\n                    </div>\n                </div>\n                <a className=\"carousel-control right\" href=\"#myCarousel\" \n                   data-slide=\"prev\"></a>\n                <a className=\"carousel-control left\" href=\"#myCarousel\" \n                   data-slide=\"next\"></a>\n            </div>\n        )\n    }\n}\n\nexport default Carousel;","import React from 'react';\nimport HomeModuleTitle from './HomeModuleTitle';\nimport {\n    Link\n} from 'react-router';\n\nclass Device extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let contents = [{\n            img: '/img/ruijie_sw.jpg',\n            subTitle: '锐捷交换机',\n            content: '划分vlan，接入局域网主机'\n\n        }, {\n            img: '/img/cisco.jpeg',\n            subTitle: '思科交换机',\n            content: '接入DMZ，提供web等对外服务'\n\n        }, {\n            img: '/img/tianrongxin.png',\n            subTitle: '天融信防火墙',\n            content: '网络入口设备，隔离网络攻击'\n\n        }, {\n            img: '/img/tianrongxin_ids.jpg',\n            subTitle: '天融信入侵检测系统',\n            content: '检测网络攻击，及时预警，做出安全响应'\n\n        }];\n\n        let contentList = contents.map((item, index) => {\n            let device = '/devicesList';\n            return (\n                <div className=\"col-xs-3\" style={{textAlign:'center'}} key={index}>\n                    <Link to='/devicesList'>\n                        <img className=\"img-responsive\" style={{width:'262px', height: '104px'}}  src={item.img} alt=\"\"/>\n                        <p style={{marginTop:'10px'}}>{item.subTitle}</p>\n                    </Link>\n                    <hr/>\n                    <p style={{textAlign:'center'}}>{item.content}</p>\n                </div>\n            )\n        })\n        return (\n            <div className=\"device\">\n                <HomeModuleTitle title= {{cn: '设备', en: '——  DEVICE  ——'}} />\n                <div className=\"device-content container\">\n                    <div className=\"row clearfix\">\n                    {contentList}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Device;","import React from 'react';\nimport DevicesListActions from '../actions/DevicesListActions';\nimport DevicesListStores from '../stores/DevicesListStores';\n\nclass DevicesList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.state = DevicesListActions.getDefaultMessage();\n    }\n\n    componentDidMount() {\n        DevicesListStores.listen(this.onChange);\n        let _top = $('.dev-list').offset().top;\n\n    }\n\n    componentWillUnmount() {\n        DevicesListStores.unlisten(this.Onchange);\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n\n    render() {\n        let deviceNames = ['锐捷交换机', '锐捷防火墙', '思科交换机', '天镜漏洞扫描系统', '天融信防火墙', '天融信入侵检测系统', '天融信入侵防御系统', '网闸'].map((item, index) => {\n            let anchor = '#' + index;\n            return (\n                <li className=\"devices\" key={index}><a style={{display:'block'}} href={anchor}>{item}</a></li>\n            );\n        });\n\n        let devicesList = [{\n            name: '锐捷交换机',\n            pic: '/img/ruijie_sw_1.png',\n            outline: {\n                name: '锐捷交换机',\n                version: 'RG-1600i',\n                date: '2017-3-3',\n                corporation: '锐捷'\n            },\n            detail: 'asdfasdfasdfasdasdfasdfasdfhasdfasdfasdf'\n        }, {\n            name: '锐捷防火墙',\n            pic: '/img/ruijie_sw_1.png',\n            outline: {\n                name: '锐捷防火墙',\n                version: 'RG-1600i',\n                date: '2017-3-3',\n                corporation: '锐捷'\n            },\n            detail: 'asdfasdfasdfasdasdfasdfasdfhasdfasdfasdf'\n        }, {\n            name: '思科交换机',\n            pic: '/img/ruijie_sw_1.png',\n            outline: {\n                name: '思科交换机',\n                version: 'RG-1600i',\n                date: '2017-3-3',\n                corp: '锐捷'\n            },\n            detail: 'asdfasdfasdfasdasdfasdfasdfhasdfasdfasdf'\n        }, {\n            name: '天镜漏洞扫描系统',\n            pic: '/img/ruijie_sw_1.png',\n            outline: {\n                name: '天镜漏洞扫描系统',\n                version: 'RG-1600i',\n                date: '2017-3-3',\n                corporation: '锐捷'\n            },\n            detail: 'asdfasdfasdfasdasdfasdfasdfhasdfasdfasdf'\n        }, {\n            name: '天融信防火墙',\n            pic: '/img/ruijie_sw_1.png',\n            outline: {\n                name: '天融信防火墙',\n                version: 'RG-1600i',\n                date: '2017-3-3',\n                corporation: '锐捷'\n            },\n            detail: 'asdfasdfasdfasdasdfasdfasdfhasdfasdfasdf'\n        }, {\n            name: '天融信入侵检测系统',\n            pic: '/img/ruijie_sw_1.png',\n            outline: {\n                name: '天融信入侵检测系统',\n                version: 'RG-1600i',\n                date: '2017-3-3',\n                corp: '锐捷'\n            },\n            detail: 'asdfasdfasdfasdasdfasdfasdfhasdfasdfasdf'\n        }, {\n            name: '天融信入侵防御系统',\n            pic: '/img/ruijie_sw_1.png',\n            outline: {\n                name: '天融信入侵防御系统',\n                version: 'RG-1600i',\n                date: '2017-3-3',\n                corp: '锐捷'\n            },\n            detail: 'asdfasdfasdfasdasdfasdfasdfhasdfasdfasdf'\n        }, {\n            name: '网闸',\n            pic: '/img/ruijie_sw_1.png',\n            outline: {\n                name: '网闸',\n                version: 'RG-1600i',\n                date: '2017-3-3',\n                corp: '锐捷'\n            },\n            detail: 'asdfasdfasdfasdasdfasdfasdfhasdfasdfasdf'\n        }].map((item, index) => {\n            return (\n                <li key={index} id={index} className=\"devices clearfix\">\n                    <div className=\"title\" >\n                        <div className=\"dev-name\">设备名称：{item.name}</div>\n                        <div className=\"detail\">设备图片：</div>\n                        <img className=\"img-responsive\" src={item.pic} alt=\"\"  />\n                    </div>\n\n                    <div className=\"dev-content\">\n                        <div className=\"detail\">设备总纲：</div>\n                        <table className=\"table table-bordered\">\n                        <tbody>\n                            <tr>\n                                <td>设备名称</td>\n                                <td>{item.outline.name}</td>\n                            </tr>\n                            <tr>\n                                <td>设备型号</td>\n                                <td>{item.outline.version}</td>\n                            </tr>\n                            <tr>\n                                <td>生产日期</td>\n                                <td>{item.outline.date}</td>\n                            </tr>\n                            <tr>\n                                <td>生产公司</td>\n                                <td>{item.outline.corp}</td>\n                            </tr>\n                        </tbody>\n                        </table>\n                        <div className=\"detail\">详细简介：</div>\n                        <p style={{padding: '10px'}}>\n                        {item.detail}\n                        </p>\n                    </div>\n                </li>\n            )\n        });\n\n        return (\n            <div className = \"devices-list container\" style={{borderTop: '1px solid #eee'}}>\n                <div style={{textAlign: 'center', fontSize:'32px', color:'#4ab344', fontWeight: 'bold'}}>设备清单</div>\n                <div className=\"main\" style = {{marginTop: '50px', backgroundColor:'#fff'}}>\n                    <div className=\"row clearfix\">\n                        <div className=\"left col-xs-3\">\n                            <ul className=\"dev-list\">{deviceNames}</ul>\n                        </div>\n\n                        <div className = \"right col-xs-9\" style={{marginLeft: '-15px'}}>\n                            <ul>{devicesList}</ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DevicesList;","import React from 'react';\nimport {\n  Link\n} from 'react-router';\nimport FooterStore from '../stores/FooterStore'\nimport FooterActions from '../actions/FooterActions';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = FooterStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    FooterStore.listen(this.onChange);\n\n    //回到顶点功能\n    $(function() {\n      $(window).scroll(function() {\n        if ($(window).scrollTop() > 100) {\n          $(\".top\").fadeIn(800);\n        } else {\n          $(\".top\").fadeOut(800);\n        }\n      });\n\n      $(\".top\").click(function() {\n        $('body,html').animate({\n          scrollTop: 0\n        }, 400);\n        return false;\n      });\n    });\n\n\n  }\n\n  componentWillUnmount() {\n    FooterStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <footer>\n        <div className='container'>\n          \n          <div className='row clearfix'>\n            <div className=\"row clearfix\">\n              <div className='col-sm-12'>\n                <h3 className='lead'><strong>智能化网络信息安全实验平台</strong></h3>\n                <p>联系地址:&nbsp;&nbsp;&nbsp;北京市海淀区上元村3号院北京交通大学&nbsp;&nbsp;&nbsp;九教北304</p>\n                <p>联系电话:&nbsp;&nbsp;&nbsp;51684609</p>\n              </div>\n            </div>\n            <div className=\"divider\"></div>\n            <div className=\"row\">\n              <div className='col-sm-12' style={{paddingTop: '50px'}}>\n                <p>&copy;2017-BJTU</p>\n              </div>\n            </div>\n          \n          </div>\n         \n        </div>\n        <div className=\"top\">\n          回到顶部\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;","import React from 'react';\n\nclass HomeModuleTitle extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        let title = this.props.title;\n\n        return (\n            <div className=\"clearfix\" style={{marginBottom: '50px'}}>\n                <div style={{textAlign: 'center'}}>\n                    <span style={{backgroundColor: 'transparent'}}>\n                        <span style={{fontSize: '24px'}}>\n                            <font style={{color: 'rgb(76, 76, 76)'}} color=\"#4c4c4c\">{title.cn}</font>\n                        </span>\n                    </span>\n                </div>\n                <div style={{textAlign: 'center'}}>\n                    <span style={{fontSize: '14px'}}><font style={{color: 'rgb(166, 166, 166)'}} color=\"#a6a6a6\">——  {title.en}  ——</font></span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomeModuleTitle;","import React from 'react';\nimport HomePageStore from '../stores/HomePageStore';\nimport HomePageActions from '../actions/HomePageActions';\nimport Carousel from './Carousel';\nimport Intention from './Intention';\nimport Device from './Device';\nimport Topology from './Topology';\nimport News from './News';\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.state = HomePageStore.getState();\n    }\n\n    componentDidMount() {\n        HomePageStore.listen(this.onChange);\n        HomePageActions.getDefaultMessage();\n    }\n\n    componentWillUnmount() {\n        HomePageStore.unlisten(this.onChange);\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n\n    render() {\n        return (\n            <div className=\"home-page\">\n                <div className=\"home-carousel\"><Carousel /></div>\n                <div className=\"container before-intention\">\n                    <div className=\"be-title\">{this.state.title}</div>\n                    <div className=\"be-content\">{this.state.content}</div>\n                </div>\n                <div className=\"home-intention\"  style={{padding: '50px 0', backgroundColor: '#e0e0e0'}} ><Intention /></div>\n                <div className=\"home-topology\" style={{backgroundColor: '#fff', padding:'50px 0'}}><Topology /></div>\n                <div className=\"home-device\" style={{backgroundColor:'#f0f3f4', padding: '50px 0'}}><Device /></div>\n                <div className=\"home-news\" style={{backgroundColor:'#fff', padding:'50px 0'}}><News /></div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport HomeModuleTitle from './HomeModuleTitle';\n\nclass Intention extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let contents = [{\n            img: '/img/os.png',\n            subTitle: '攻防实验平台',\n            content: '攻击防御实验，模拟真实网络运行状态，感知网络态势'\n\n        }, {\n            img: '/img/bigdata.png',\n            subTitle: '大数据分析',\n            content: 'hadoop分布式数据存储计算平台，海量数据融合分析处理'\n\n        }, {\n            img: '/img/cloud.png',\n            subTitle: '数据开放服务',\n            content: '论文算法，公开数据集，实验室内部数据集开放下载服务'\n\n        }];\n\n        let contentList = contents.map((item, index) => {\n            return (\n                <div className=\"col-xs-4\" style={{textAlign:'center'}} key={index}>\n                    <img src={item.img} alt=\"\"/>\n                    <p>{item.subTitle}</p>\n                    <img src=\"/img/line.png\" alt=\"\"/>\n                    <p style={{textAlign:'left'}}>{item.content}</p>\n                </div>\n            )\n        })\n        return (\n            <div className=\"intent\">\n                <HomeModuleTitle title= {{cn: '目标', en: '——  SERVICE  ——'}} />\n                <div className=\"intent-content container\">\n                    <div className=\"row clearfix\">\n                    {contentList}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Intention;\n","import React from 'react';\nimport {\n  Link,\n  IndexLink\n} from 'react-router';\nimport NavbarStore from '../stores/NavbarStore';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = NavbarStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    NavbarStore.listen(this.onChange);\n\n    let socket = io.connect();\n\n    socket.on('onlineUsers', (data) => {\n      NavbarActions.updateOnlineUsers(data);\n    });\n\n    $(document).ajaxStart(() => {\n      NavbarActions.updateAjaxAnimation('fadeIn');\n    });\n\n    $(document).ajaxComplete(() => {\n      setTimeout(() => {\n        NavbarActions.updateAjaxAnimation('fadeOut');\n      }, 750);\n    });\n  }\n\n  componentWillUnmount() {\n    NavbarStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    let searchQuery = this.state.searchQuery.trim();\n\n    if (searchQuery) {\n      NavbarActions.findCharacter({\n        searchQuery: searchQuery,\n        searchForm: this.refs.searchForm,\n        history: this.props.history\n      });\n    }\n  }\n\n  render() {\n    let form = `\n      <form ref='searchForm' className='navbar-form navbar-left animated' onSubmit={this.handleSubmit.bind(this)}>\n            <div className='input-group'>\n              <input type='text' className='form-control' placeholder={this.state.totalCharacters + ' characters'} value={this.state.searchQuery} onChange={NavbarActions.updateSearchQuery} />\n              <span className='input-group-btn'>\n                <button className='btn btn-default' onClick={this.handleSubmit.bind(this)}><span className='glyphicon glyphicon-search'></span></button>\n              </span>\n            </div>\n          </form>`;\n\n    return (\n      <nav className='navbar navbar-default navbar-static-top'>\n        \n        <div id='navbar' className='navbar-collapse collapse'>\n          <div className='navbar-header'>\n            <button type='button' className='navbar-toggle collapsed' data-toggle='collapse' data-target='#navbar'>\n              <span className='sr-only'>Toggle navigation</span>\n              <span className='icon-bar'></span>\n              <span className='icon-bar'></span>\n              <span className='icon-bar'></span>\n            </button>\n            <Link to='/' className='navbar-brand'>\n              <span className={'triangles animated ' + this.state.ajaxAnimationClass}>\n                <div className='tri invert'></div>\n                <div className='tri invert'></div>\n                <div className='tri'></div>\n                <div className='tri invert'></div>\n                <div className='tri invert'></div>\n                <div className='tri'></div>\n                <div className='tri invert'></div>\n                <div className='tri'></div>\n                <div className='tri invert'></div>\n              </span>\n              <sapn className=\"cn-logo\">智能化网络信息安全实验平台</sapn>\n              <span style={{fontSize: '32px', marginLeft: '70px', marginRight: '5px'}}>\n              Information&nbsp;&nbsp;<font style={{color: '#788994'}}>Security</font>\n              </span> \n              <span className='badge badge-up badge-danger'>{this.state.onlineUsers}</span>\n            </Link>\n          </div>\n          \n          <ul className='nav navbar-nav nav-right'>\n            <li><IndexLink to='/'>首页</IndexLink></li>\n            <li><Link to='/services'>服务</Link></li>\n            <li><Link to='/resources'>资源</Link></li>\n            <li><Link to='/projects'>项目</Link></li>\n            <li><Link to='/team'>团队</Link></li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","import React from 'react'\nimport {\n    Link,\n    hashHistory\n} from 'react-router'\n\nclass NewServiceBlock extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let service = this.props.service;\n        let type = service.type;\n        let content = service.content;\n        let servicesList = content.map((item, index) => {\n            let blank = item.appendix ? true : false;\n            if (!blank) {\n                return (<li className=\"services-list\" key={index}><a href={item.url} target=\"_blank\">{item.name}</a></li>)\n            } else {\n                let path = {\n                    pathname: item.url,\n                    state: item.appendix\n                };\n                return (<li className=\"services-list\" key={index}><Link to={path}>{item.name}</Link></li>)\n            }\n\n        });\n\n        return (\n            <div className=\"ns-block clearfix\">\n                <div className=\"img-wrap col-xs-2\"><img src='' alt=\"\"/></div>\n                <div className=\"service-info col-xs-10\">\n                    <div className=\"clearfix\">\n                        <div className=\"ns-title col-xs-10\">{type}</div>\n                        <div className=\"more col-xs-2\">更多</div>\n                    </div>\n                    <div className=\"ns-content\" style={{display: 'none'}}>dsf</div>\n                    <div className=\"services\">\n                        <ul>\n                            {servicesList}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NewServiceBlock;","import React from 'react';\nimport HomeModuleTitle from './HomeModuleTitle';\n\nclass News extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        let dataList = [1, 2, 3, 4].map((item, index) => {\n            if (index % 2) {\n                var classname = 'col-xs-5  news clearfix col-xs-offset-2';\n            } else {\n                var classname = 'col-xs-5  news clearfix';\n            }\n            return (\n                <div className={classname} key={index} style={{marginTop: '10px'}}>\n                    <div className=\"title row clearfix\">\n                        <div className=\"col-xs-8\">实验室内部举办第三次内部讨论会议</div>\n                        <div className=\"col-xs-4\" style={{textAlign: 'right'}}>2017-11-19</div>\n                    </div>\n                    <div className=\"content\">\n                    关于网站建设方面的问题作出了认真而详细的分析，并与员学生做深入的探讨，得出满意的结果...</div>\n                </div>\n            )\n        })\n        return (\n            <div className=\"device\">\n                <HomeModuleTitle title= {{cn: '最新资讯', en: '——  NEWS  ——'}} />\n                <div className=\"device-content container\">\n                    <div className=\"row clearfix\">\n                        {dataList}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default News;","import React from 'react';\nimport ProjectActions from '../actions/ProjectActions';\nimport ProjectStore from '../stores/ProjectStore';\n\nclass Project extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ProjectStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        $(document).ready(function() {\n            $(\"span.div\").hide();\n            $(\".sis-li li\").hover(function() {\n                $(\"span.div\", this).slideToggle(500);\n            });\n        });\n\n        ProjectStore.listen(this.onChange);\n\n    }\n\n    componentWillUnmount() {\n        ProjectStore.unlisten(this.onChange);\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n\n    render() {\n\n        let projects = [{\n            title: '在研项目',\n            projects: [{\n                img: '/img/1.jpg',\n                info: '文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明'\n            }, {\n                img: '/img/2.jpg',\n                info: '文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明'\n            }, {\n                img: '/img/3.jpg',\n                info: '文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明'\n            }]\n        }, {\n            title: '完结项目',\n            projects: [{\n                img: '/img/1.jpg',\n                info: '文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明'\n            }, {\n                img: '/img/2.jpg',\n                info: '文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明'\n            }, {\n                img: '/img/3.jpg',\n                info: '文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明文字说明'\n            }]\n        }];\n\n        let projectList = projects.map((project, index) => {\n            let blockList = project.projects.map((pro, index) => {\n                let imgstyle = {\n                    height: '250px',\n                    width: '320px',\n                    overflow: 'hidden',\n                    background: `url(${pro.img})`,\n                    backgroundSize: 'cover'\n                };\n\n                return (\n                    <li className=\"col-xs-4\" key={index}>\n                        <span className=\"v1\">\n                            <a href=\"#\">\n                                <div syle={imgstyle}>\n                                    <img style={{height: 'auto', width: '320px'}} src={pro.img} />\n                                </div>\n                            </a>\n                            <span className=\"div\">\n                             <h3> 信息简介：</h3> \n                                <span className=\"txt\">\n                                    {pro.info}\n                                </span>\n                            </span>\n                        </span>\n                    </li>\n                )\n            });\n            return (\n                <div className=\"outline clearfix\" key={index}>\n                    <h1 className=\"titon\">{project.title}</h1>\n                    <ul className=\"sis-li\">\n                      {blockList}  \n                    </ul>\n                </div>\n            )\n        });\n        return (\n            <div className=\"project\">\n                <div className=\"pic\">\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {projectList}\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Project;","import React from 'react';\nimport ResourceStore from '../stores/ResourceStore';\nimport ResourceAction from '../actions/ResourceActions';\nimport ResourceDes from './ResourceDes';\nimport ResourceData from './ResourceData';\nimport ResourceTools from './ResourceTools';\nimport HomeModuleTitle from './HomeModuleTitle';\n\nclass Resource extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.state = ResourceStore.getState();\n    }\n\n    componentDidMount() {\n        ResourceStore.listen(this.onChange);\n    }\n\n    componentWillUnmount() {\n        ResourceStore.unlisten(this.onChange);\n    }\n\n    onChange(state) {\n        ResourceStore.setState(state);\n    }\n\n    render() {\n\n        let Resources = [{\n            title: '期刊',\n            journal: [{\n                name: 'semantic method to just the page.',\n                url: 'http://baidu.com'\n            }, {\n                name: 'semantic method to just the page.',\n                url: 'http://baidu.com'\n            }, {\n                name: 'semantic method to just the page.',\n                url: '/'\n            }]\n        }, {\n            title: '标准',\n            journal: [{\n                name: 'semantic method to just the page.',\n                url: 'http://baidu.com'\n            }, {\n                name: 'semantic method to just the page.',\n                url: 'http://baidu.com'\n            }, {\n                name: 'semantic method to just the page.',\n                url: '/'\n            }]\n        }, {\n            title: '专利',\n            journal: [{\n                name: 'semantic method to just the page.',\n                url: 'http://baidu.com'\n            }, {\n                name: 'semantic method to just the page.',\n                url: 'http://baidu.com'\n            }, {\n                name: 'semantic method to just the page.',\n                url: '/'\n            }]\n        }];\n\n        let resourceData = [{\n            title: '公开的数据集',\n            collections: [{\n                name: 'kdd cup99',\n                url: 'https://baidu.com'\n            }, {\n                name: 'ADFA',\n                url: 'https://v.qq.com'\n            }]\n        }, {\n            title: '实验室内部数据集',\n            collections: [{\n                name: 'kdd cup99',\n                url: 'https://baidu.com'\n            }, {\n                name: 'ADFA',\n                url: 'https://v.qq.com'\n            }]\n        }];\n\n        let resourceTools = [{\n            title: '公开的工具',\n            collections: [{\n                name: 'svn',\n                url: 'https://baidu.com'\n            }, {\n                name: 'snort',\n                url: 'https://v.qq.com'\n            }]\n        }, {\n            title: '实验室内部工具',\n            collections: [{\n                name: 'ftp',\n                url: 'https://baidu.com'\n            }, {\n                name: 'git',\n                url: 'https://v.qq.com'\n            }]\n        }];\n\n        return (\n            <div className=\"resource clearfix\">\n                <div className=\"pic\">\n                </div>\n                <div className=\"resource-des\" style={{marginTop: '20px'}}>\n                    <HomeModuleTitle  title={{cn: '论文', en: 'PAPER'}} />\n                    <div className=\"container\">\n                        <ResourceDes  resourceDes={Resources} />\n                    </div>\n                </div>\n                <div className=\"resource-data\" style={{backgroundColor: '#fff',paddingBottom:'50px', marginTop:'50px'}}>\n                    <ResourceData resourceData={resourceData} />\n                </div>\n                <div className=\"resource-tools\">\n                    <ResourceTools resourceTools={resourceTools} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Resource;","import React from 'react';\nimport ResourceDataBlock from './ResourceDataBlock';\nimport HomeModuleTitle from './HomeModuleTitle';\n\nclass ResourceData extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        let datas = this.props.resourceData;\n        let dataList = datas.map((data, index) => {\n            let classstyle = index % 2 == 0 ? 'col-xs-5' : 'col-xs-5 col-xs-offset-2';\n            return (\n                <div className={classstyle} key={index}>\n                    <ResourceDataBlock resourceData={data} usefor=\"dataset\" />\n                </div>\n            );\n        })\n\n        return (\n            <div className=\"container\">\n                <div style={{marginTop: '20px'}}><HomeModuleTitle title= {{cn: '数据集', en: 'DATASET'}} /></div>\n                <div className=\"row clearfix\">\n                    {dataList}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ResourceData;","import React from 'react';\n\nclass ResourceDataBlock extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let data = this.props.resourceData;\n        let usefor = this.props.usefor;\n        let title = usefor == 'dataset' ? '数据集' : '工具';\n        let rows = data.collections.map((item, index) => {\n            return (\n                <div key={index}>\n                    <span>{item.name}</span>\n                    <a href={item.url} target=\"_blank\">使用方式和下载</a>    \n                </div>\n            )\n        });\n        return (\n            <div className=\"data-block\">\n                <div className=\"data-title\">\n                    <div>{data.title}</div>\n                    <div className=\"con\">INNER DATASET</div>\n                    <div className=\"bor\"></div>\n                </div>\n                <div className=\"data-info\">实验室的内部数据集是在我们搭建的智能化信息安全实验平台上完成的一个实验过程中采集的各种攻击数据。</div>\n                <div className=\"collections\">\n                    {rows}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ResourceDataBlock;","import React from 'react';\nimport ResourceDesBlock from './ResourceDesBlock';\nimport {\n    Link\n} from 'react-router';\n\nclass ResourceDes extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let resourceDes = this.props.resourceDes;\n        let resourceList = resourceDes.map((resource, index) => {\n            return (\n                <div className=\"col-xs-12\" style={{marginBottom: '100px'}} key={index}>\n                    <ResourceDesBlock resource={resource} />\n                    <div className=\"more col-xs-2 col-xs-offset-5\">more</div>\n                </div>\n            )\n        });\n\n        return (\n            <div className=\"resource-des clearfix\" >\n                {resourceList}\n            </div>\n        )\n    }\n}\n\nexport default ResourceDes;","import React from 'react';\nimport {\n    Link\n} from 'react-router';\n\nclass ResourceDesBlock extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let des = this.props.resource;\n        let journalList = des.journal.map((journal, index) => {\n            return (\n                <div className=\"paper-item clearfix\" key={index}>\n                    <div className=\"col-xs-10\"><Link to={journal.url}>{journal.name}</Link></div>\n                    <div className=\"col-xs-2 \">详细</div>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"des-block\">\n                <div className=\"des-title\">\n                    {des.title}\n                </div>\n                <div className=\"des-content\">\n                    <div className=\"papers\">\n                    {journalList}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ResourceDesBlock;","import React from 'react';\nimport ResourceDataBlock from './ResourceDataBlock';\nimport HomeModuleTitle from './HomeModuleTitle';\n\nclass ResourceTools extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let datas = this.props.resourceTools;\n        let dataList = datas.map((data, index) => {\n            let classstyle = index % 2 == 0 ? 'col-xs-5' : 'col-xs-5 col-xs-offset-2';\n            return (\n                <div className={classstyle} key={index}>\n                    <ResourceDataBlock resourceData={data} usefor=\"tools\" />\n                </div>\n            );\n        })\n\n        return (\n            <div className=\"container\">\n                <div className=\"tools-title clearfix\">\n                    <div style={{marginTop: '20px'}}><HomeModuleTitle title= {{cn: '工具', en: 'TOOLS'}} /></div>\n                </div>\n                <div className=\"row clearfix\">\n                    {dataList}\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default ResourceTools;","import React from 'react';\nimport ServiceAction from '../actions/ServiceActions';\nimport ServiceStore from '../stores/ServiceStore';\nimport NewServiceBlock from './NewServiceBlock';\nimport ReactCSSTransitionGroup from 'react-transition-group/TransitionGroup';\nimport HomeModuleTitle from './HomeModuleTitle';\n\n\nclass Service extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = ServiceStore.getState();\n\t\tthis.onChange = this.onChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tServiceStore.listen(this.onChange);\n\t\t// ServiceAction.getDefaultMessage();\n\t\t// ServiceAction.setMessage();\n\t}\n\n\tcomponentDidUpdate() {\n\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconsole.log('componentWillUnmount');\n\t\tServiceStore.unlisten(this.onChange);\n\t}\n\n\tonChange(state) {\n\t\tconsole.log('state', state)\n\t\tthis.setState(state);\n\t}\n\n\trender() {\n\t\tlet message = this.state.message;\n\t\tlet services = this.state.services;\n\t\tlet ServiceBlocks = services.map((obj, index) => {\n\t\t\treturn (\n\t\t\t\t<div key={index} className=\"col-xs-12\" style={{marginBottom:'100px'}}>\n\t\t\t\t\t<NewServiceBlock service={obj} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t});\n\t\treturn (\n\t\t\t<div className=\"service\">\n\t\t\t\t<div className=\"pic\">\n\t\t\t\t</div>\n\t\t\t\t<HomeModuleTitle  title={{cn: '服务', en: 'SERVICE'}} />\n\t\t\t\t<div className=\"container\" style={{marginTop: '20px'}}>\n\t\t\t\t\t<div className=\"row clearfix\">\n\t\t\t\t\t\t{ServiceBlocks}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\n}\n\nexport default Service;","import React from 'react';\n\nclass ServicesList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let props = this.props.location.state || '';\n        let serviceName = this.props.params.name;\n\n        return (\n            <div className=\"container\">\n                <div style={{fontSize:'32px',textAlign:'center', marginBottom:'15px'}}>服务列表页面</div>\n\n                <div className=\"main\" style={{minHeight: '500px'}}>\n                    <table className=\"table table-bordered\">\n                        <tbody>\n                            <tr>\n                                <td>服务名称：</td>\n                                <td>{serviceName}</td>\n                            </tr>\n                            <tr>\n                                <td>服务地址：</td>\n                                <td>{props.url}</td>\n                            </tr>\n                            <tr>\n                                <td>服务端口：</td>\n                                <td>{props.port}</td>\n                            </tr>\n                            <tr>\n                                <td>登录账户：</td>\n                                <td>{props.username}</td>\n                            </tr>\n                            <tr>\n                                <td>登录密码：</td>\n                                <td>{props.password}</td>\n                            </tr>\n                            <tr>\n                                <td>登录方式：</td>\n                                <td>{props.des}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default ServicesList;","import React from 'react';\nimport TeamStore from '../stores/TeamStore';\nimport TeamActions from '../actions/TeamActions';\nimport HomeModuleTitle from './HomeModuleTitle';\n\nclass Team extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.state = TeamStore.getState();\n    }\n\n    componentDidMount() {\n        TeamStore.listen(this.onChange);\n    }\n\n    componentWillUnmount() {\n        TeamStore.unlisten(this.onChange);\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n\n    render() {\n\n        let teams = [{\n            category: '老师',\n            names: ['xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx']\n        }, {\n            category: '博士',\n            names: ['xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx']\n        }, {\n            category: '硕士',\n            names: ['xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx']\n        }, {\n            category: '本科生',\n            names: ['xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx']\n        }, {\n            category: '毕业生',\n            names: ['xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx', 'xxx']\n        }];\n\n        let teamList = teams.map((team, index) => {\n            let nameList = team.names.map((name, index) => {\n                return (\n                    <div className=\" col-xs-offset-1 col-md-1\" key={index}>\n                        <a href=\"#\">\n                            <img src=\"img/u18.png\" />\n                            <div className=\"name\">{name}</div>\n                        </a>\n                    </div>\n                );\n            });\n\n            return (\n                <div className=\"onepeo_outline clearfix col-xs-12\" key={index}>\n                    <div className=\"col-xs-1 oneclassName\">{team.category}</div>\n                    <div className=\"col-xs-10\">\n                        {nameList}\n                    </div>\n                </div>\n            )\n        });\n\n        return (\n            <div className=\"team\">\n                <div className=\"outline row clearfix\" style={{backgroundColor: '#f0f4f5'}}>\n                    <div className=\"container\">\n                        <div style={{marginTop: '50px'}}><HomeModuleTitle title={{cn: '我们的团队', en:'OUR TEAM'}} /></div>\n                        <div className=\"row\" style={{marginBottom: '50px'}}>\n                            <div className=\"col-md-7\">\n                                <img className=\"img-responsive\" src=\"img/1.jpg\" />\n                            </div>\n                            <div className=\"col-xs-5\">\n                                <p>整体介绍团队特点，包括研究方向，老师学生人数等</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"line\">\n                        <span className=\"people_tit\">TEACHERS&nbsp;&nbsp;STUDENTS</span>\n                    </div>\n                    <div className=\"row\">{teamList}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Team;","import React from 'react';\nimport HomeModuleTitle from './HomeModuleTitle';\n\nclass Topology extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"device\">\n                <HomeModuleTitle title= {{cn: '拓扑', en: '——  TOPOLOGY  ——'}} />\n                <div className=\"device-content container\">\n                    <div className=\"row clearfix\">\n                        <div className=\"col-xs-4\" style={{marginTop: '-30px'}}>\n                            <h4 style={{textAlign: 'center'}}>经典网络拓扑图</h4>\n                            <p style={{marginTop: '30px',lineHeight:'40px'}}>平台在入口防火墙和核心交换机下共分为四个域\n                            ：DMZTrust&nbsp;&nbsp;Untrust&nbsp;&nbsp;User&nbsp;&nbsp;Management。其中DMZ域中包括对外服务的服务器集群，\n                            Trust域中包括证书服务器和云服务平台，Untrust域中包含一个VPN通道，\n                            User域中是内网的用户终端，Management域中包含一台集中日志服务器和SFTP服务器，\n                            每个区域中都有一套安全服务组，包含APT、IDS、漏洞扫描和终端防护等安全设备。</p>\n                        </div>\n                        <div className=\"col-xs-8\"><img className=\"imqg-responsive\" style={{width:'100%',height:'100%'}} src=\"/img/topology.jpg\" alt=\"\"/></div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Topology;","import React from 'react';\nimport Router from 'react-router';\nimport ReactDOM from 'react-dom';\nimport createBrowserHistory from 'history/lib/createBrowserHistory';\nimport routes from './routes';\n\nlet history = createBrowserHistory();\n\nReactDOM.render(<Router history={history}>{routes}</Router>, document.getElementById('app'));","import React from 'react';\nimport {\n  Route,\n  IndexRoute\n} from 'react-router';\nimport App from './components/App';\nimport Services from './components/Services';\nimport Resources from './components/Resource';\nimport HomePage from './components/HomePage';\nimport Team from './components/Team';\nimport Project from './components/Project';\nimport DevicesList from './components/DevicesList';\nimport ServicesList from './components/ServicesList';\n\nexport default (\n  <Route component={App}>\n    <IndexRoute component={HomePage} />\n    <Route path='/' component={HomePage} />\n    <Route path='/services' component={Services} />\n    <Route path='/resources' component={Resources} />\n    <Route path='/team' component={Team} />\n    <Route path='/projects' component={Project} />\n    <Route path='/devicesList' component={DevicesList} />\n    <Route path='/services/detail/:name' component={ServicesList} />\n  </Route>\n);","import alt from '../alt';\nimport DevicesListActions from '../actions/DevicesListActions';\n\nclass DevicesListStores {\n    constructor() {\n        this.bindActions(DevicesListActions);\n    }\n\n    onGetDevicesListFail() {\n\n    }\n\n    onGetDevicesListSuccess() {\n\n    }\n}\n\nexport default alt.createStore(DevicesListStores);","import alt from '../alt';\nimport FooterActions from '../actions/FooterActions';\n\nclass FooterStore {\n  constructor() {\n    this.bindActions(FooterActions);\n    this.characters = [];\n  }\n\n  onGetTopCharactersSuccess(data) {\n    this.characters = data.slice(0, 5);\n  }\n\n  onGetTopCharactersFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\n  }\n}\n\nexport default alt.createStore(FooterStore);","import alt from '../alt';\nimport HomePageActions from '../actions/HomePageActions';\n\nclass HomePageStore {\n    constructor() {\n        this.bindActions(HomePageActions);\n        this.message = '';\n        this.title = '平台建设目标';\n        this.content = `实验平台是以硬件环境（网络、服务设备、安全设备等）、软件环境（协议、服务、开发、研究等）为基础了一个网络数据智能分析与可视\n                    化分析的研、产、学的综合平台。`;\n    }\n\n    onGetDefaultMessage() {\n        this.message = 'cnmd';\n    }\n}\n\nexport default alt.createStore(HomePageStore);","import alt from '../alt';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass NavbarStore {\n  constructor() {\n    this.bindActions(NavbarActions);\n    this.totalCharacters = 0;\n    this.onlineUsers = 0;\n    this.searchQuery = '';\n    this.ajaxAnimationClass = '';\n  }\n\n  onFindCharacterSuccess(payload) {\n    payload.history.pushState(null, '/characters/' + payload.characterId);\n  }\n\n  onFindCharacterFail(payload) {\n    payload.searchForm.classList.add('shake');\n    setTimeout(() => {\n      payload.searchForm.classList.remove('shake');\n    }, 1000);\n  }\n\n  onUpdateOnlineUsers(data) {\n    this.onlineUsers = data.onlineUsers;\n  }\n\n  onUpdateAjaxAnimation(className) {\n    this.ajaxAnimationClass = className; //fadein or fadeout\n  }\n\n  onUpdateSearchQuery(event) {\n    this.searchQuery = event.target.value;\n  }\n\n  onGetCharacterCountSuccess(data) {\n    this.totalCharacters = data.count;\n  }\n\n  onGetCharacterCountFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(NavbarStore);","import alt from '../alt';\nimport ProjectActions from '../actions/ProjectActions';\n\n\nclass ProjectStore {\n    constructor() {\n        this.bindActions(ProjectActions);\n    }\n\n    onGetDefaultMessage() {\n\n    }\n}\n\nexport default alt.createStore(ProjectStore);","import alt from '../alt'\nimport ResourceActions from '../actions/ResourceActions'\n\nclass ResourceStore {\n    constructor() {\n        this.bindActions(ResourceActions);\n        this.resource = [];\n    }\n\n    onGetResource() {\n        this.resource.push('resource');\n    }\n\n    onGetResourceSuccess() {\n\n    }\n\n    onGetResourceFail() {\n\n    }\n}\n\nexport default alt.createStore(ResourceStore);","import alt from '../alt'\nimport ServiceActions from '../actions/ServiceActions'\n\nclass ServiceStore {\n\tconstructor() {\n\t\tthis.bindActions(ServiceActions);\n\t\tthis.message = '';\n\t\tthis.services = [{\n\t\t\ttype: 'WEB服务',\n\t\t\tcontent: [{\n\t\t\t\tname: '本站',\n\t\t\t\turl: 'http://192.168.10.70',\n\t\t\t\t'detail': '智能化信息安全实验平台介绍网站'\n\t\t\t}, {\n\t\t\t\tname: '资源共享网站',\n\t\t\t\turl: 'http://192.168.10.200',\n\t\t\t\t'detail': '资源共享平台'\n\t\t\t}, {\n\t\t\t\tname: '众创云平台',\n\t\t\t\turl: 'http://192.168.10.100:8080',\n\t\t\t\t'detail': '多角色工作流控制平台&虚拟资源共享和管理平台'\n\t\t\t}, {\n\t\t\t\tname: '资源共享网站-apache1',\n\t\t\t\turl: 'http://192.168.10.203',\n\t\t\t\t'detail': '资源共享平台服务器一'\n\t\t\t}, {\n\t\t\t\tname: '资源共享网站-apache2',\n\t\t\t\turl: 'http://192.168.10.204',\n\t\t\t\t'detail': '资源共享平台服务器二'\n\t\t\t}, {\n\t\t\t\tname: '资源共享平台-tomcat1',\n\t\t\t\turl: 'http://192.168.10.103:8080',\n\t\t\t\t'detail': '重创云平台服务器一'\n\t\t\t}, {\n\t\t\t\tname: '资源共享平台-tomcat2',\n\t\t\t\turl: 'http://192.168.10.104:8080',\n\t\t\t\t'detail': '重创云平台服务器二'\n\t\t\t}]\n\t\t}, {\n\t\t\ttype: '数据库服务',\n\t\t\tcontent: [{\n\t\t\t\tname: 'Mysql',\n\t\t\t\turl: '/services/detail/mysql',\n\t\t\t\t'detail': 'mysql数据库服务',\n\t\t\t\tappendix: {\n\t\t\t\t\turl: '192.168.10.205',\n\t\t\t\t\tport: '3306',\n\t\t\t\t\tusername: 'root',\n\t\t\t\t\tpassword: '联系管理员',\n\t\t\t\t\tdes: '登录方式，使用mysql客户端远程链接，navcat等等。'\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tname: 'MongoDB',\n\t\t\t\turl: '/services/detail/mongodb',\n\t\t\t\t'detail': 'mongodb数据库服务',\n\t\t\t\tappendix: {\n\t\t\t\t\turl: '192.168.10.105',\n\t\t\t\t\tport: '60000',\n\t\t\t\t\tusername: 'root',\n\t\t\t\t\tpassword: '联系管理员',\n\t\t\t\t\tdes: '登录方式，使用mongo客户端远程链接，如robot等等。'\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tname: 'GridFS',\n\t\t\t\turl: '/services/detail/gridfs',\n\t\t\t\t'detail': 'GridFS文件系统',\n\t\t\t\tappendix: {\n\t\t\t\t\turl: '192.168.10.106',\n\t\t\t\t\tport: '60000',\n\t\t\t\t\tusername: 'root',\n\t\t\t\t\tpassword: '联系管理员',\n\t\t\t\t\tdes: '登录方式，使用mongodb客户端远程链接，robot等等。'\n\t\t\t\t}\n\t\t\t}]\n\t\t}, {\n\t\t\ttype: '存储服务',\n\t\t\tcontent: [{\n\t\t\t\tname: '资源共享网站网络文件系统',\n\t\t\t\turl: '/services/detail/NFS',\n\t\t\t\t'detail': '资源共享网站网络文件系统',\n\t\t\t\tappendix: {\n\t\t\t\t\turl: '192.168.10.206',\n\t\t\t\t\tport: '22',\n\t\t\t\t\tusername: 'root',\n\t\t\t\t\tpassword: '联系管理员',\n\t\t\t\t\tdes: '资源共享网站网络文件系统,SSH远程登陆'\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tname: 'QNAP存储箱',\n\t\t\t\turl: 'http://192.168.10.139',\n\t\t\t\t'detail': 'QNAP存储箱，云存储系统文件上传下载，备份分享等功能'\n\t\t\t}, {\n\t\t\t\tname: 'FTP从服务器',\n\t\t\t\turl: 'ftp://192.168.10.81',\n\t\t\t\t'detail': '文件下载服务器，下载文件，工具，图片，视频等功能'\n\t\t\t}, {\n\t\t\t\tname: 'GITLAB服务器',\n\t\t\t\turl: 'http://192.168.10.80',\n\t\t\t\t'detail': 'GitLab代码托管服务器，代码提交，下载，版本控制，团队合作等功能'\n\t\t\t}, {\n\t\t\t\tname: '日志监控',\n\t\t\t\turl: 'http://192.168.10.82',\n\t\t\t\t'detail': '日志监控服务器，提供日志监控，数据采集，性能检测等功能'\n\t\t\t}]\n\t\t}, {\n\t\t\ttype: '安全监控服务',\n\t\t\tcontent: [{\n\t\t\t\tname: '入侵检测系统SNORT',\n\t\t\t\turl: '/services/detail/snort',\n\t\t\t\t'detail': '入侵检测系统snort',\n\t\t\t\tappendix: {\n\t\t\t\t\turl: '192.168.10.90',\n\t\t\t\t\tport: '22',\n\t\t\t\t\tusername: 'root',\n\t\t\t\t\tpassword: '联系管理员',\n\t\t\t\t\tdes: '入侵检测系统， SSH远程登录'\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tname: '漏洞扫描NESSUS',\n\t\t\t\turl: 'https://192.168.10.91:8834',\n\t\t\t\t'detail': '漏洞扫描系统，扫描系统漏洞，'\n\t\t\t}, {\n\t\t\t\tname: '流量抓取工具TCPDUMP',\n\t\t\t\turl: '/services/detail/tcpdump',\n\t\t\t\t'detail': '抓取网络链接流量，分析流量特征',\n\t\t\t\tappendix: {\n\t\t\t\t\turl: '192.168.10.60',\n\t\t\t\t\tport: '22',\n\t\t\t\t\tusername: 'root',\n\t\t\t\t\tpassword: '联系管理员',\n\t\t\t\t\tdes: '流量抓取工具TCPDUMP， 提供网络链接流量抓取功能，采集网络攻击数据'\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tname: '性能监控NAGIOS',\n\t\t\t\turl: 'http://192.168.10.63',\n\t\t\t\t'detail': '性能监控NAGIOS，监控系统性能，评估系统状态'\n\t\t\t}]\n\t\t}, {\n\t\t\ttype: '系统管理服务',\n\t\t\tcontent: [{\n\t\t\t\tname: '虚拟化管理FunsionCompute',\n\t\t\t\turl: 'http://192.168.10.51',\n\t\t\t\t'detail': '虚拟化管理FunsionCompute，管理分配虚拟资源'\n\t\t\t}, {\n\t\t\t\tname: '硬件服务器IBM',\n\t\t\t\turl: '/services/detail/ibm',\n\t\t\t\t'detail': '硬件服务器IDM,提供USER域虚拟机分发服务。',\n\t\t\t\tappendix: {\n\t\t\t\t\turl: '192.168.20.2',\n\t\t\t\t\tport: '22',\n\t\t\t\t\tusername: 'root',\n\t\t\t\t\tpassword: '联系管理员',\n\t\t\t\t\tdes: '硬件服务器IDM,提供USER域虚拟机分发服务, SSH远程登录'\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tname: '硬件服务器HP',\n\t\t\t\turl: '/services/detail/hp',\n\t\t\t\t'detail': '硬件服务器HP,提供DMZ域虚拟机分发服务。',\n\t\t\t\tappendix: {\n\t\t\t\t\turl: '192.168.10.2',\n\t\t\t\t\tport: '22',\n\t\t\t\t\tusername: 'root',\n\t\t\t\t\tpassword: '联系管理员',\n\t\t\t\t\tdes: '硬件服务器HP,提供DMZ域虚拟机分发服务, SSH远程登录'\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tname: '台式服务器',\n\t\t\t\turl: '/services/detail/desktop',\n\t\t\t\t'detail': '态势服务器,提供数据分析域虚拟机分发服务。',\n\t\t\t\tappendix: {\n\t\t\t\t\turl: '192.168.1.2',\n\t\t\t\t\tport: '22',\n\t\t\t\t\tusername: 'root',\n\t\t\t\t\tpassword: '联系管理员',\n\t\t\t\t\tdes: '台式服务器,提供数据分析域虚拟机分发服务, SSH远程登录'\n\t\t\t\t}\n\t\t\t}]\n\t\t}];\n\t}\n\n\tonSetMessageSuccess(payload) {\n\t\tthis.message = payload.message;\n\t}\n\n\tonSetMessageFail(errorMessage) {\n\t\ttoastr.error(errorMessage);\n\t}\n\n\tonGetMessageSuccess(payload) {\n\t\tthis.services = payload\n\t}\n\n\tonGetMessageFail(errorMessage) {\n\t\ttoastr.error(errorMessage);\n\t}\n\n\tonGetDefaultMessage() {\n\t\tthis.message = ''\n\t}\n\n}\n\nexport default alt.createStore(ServiceStore);","import alt from '../alt';\nimport TeamActions from '../actions/TeamActions';\n\nclass TeamStore {\n    constructor() {\n        this.bindActions(TeamActions);\n    }\n\n    onGetDefaultMessage() {\n\n    }\n\n}\n\nexport default alt.createStore(TeamStore);","\r\nmodule.exports = function chain(){\r\n  var len = arguments.length\r\n  var args = [];\r\n\r\n  for (var i = 0; i < len; i++)\r\n    args[i] = arguments[i]\r\n\r\n  args = args.filter(function(fn){ return fn != null })\r\n\r\n  if (args.length === 0) return undefined\r\n  if (args.length === 1) return args[0]\r\n\r\n  return args.reduce(function(current, next){\r\n    return function chainedFunction() {\r\n      current.apply(this, arguments);\r\n      next.apply(this, arguments);\r\n    };\r\n  })\r\n}\r\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","/**\n * Indicates that navigation was caused by a call to history.push.\n */\n'use strict';\n\nexports.__esModule = true;\nvar PUSH = 'PUSH';\n\nexports.PUSH = PUSH;\n/**\n * Indicates that navigation was caused by a call to history.replace.\n */\nvar REPLACE = 'REPLACE';\n\nexports.REPLACE = REPLACE;\n/**\n * Indicates that navigation was caused by some other action such\n * as using a browser's back/forward buttons and/or manually manipulating\n * the URL in a browser's location bar. This is the default.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\n * for more information.\n */\nvar POP = 'POP';\n\nexports.POP = POP;\nexports['default'] = {\n  PUSH: PUSH,\n  REPLACE: REPLACE,\n  POP: POP\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0;\n  var isDone = false;\n\n  function done() {\n    isDone = true;\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) return;\n\n    if (currentTurn < turns) {\n      work.call(this, currentTurn++, next, done);\n    } else {\n      done.apply(this, arguments);\n    }\n  }\n\n  next();\n}","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  // FIXME: Work around our browser history not working correctly on Chrome\n  // iOS: https://github.com/rackt/react-router/issues/2565\n  if (ua.indexOf('CriOS') !== -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _parsePath2['default'](path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      //warning(\n      //  false,\n      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +\n      //  'location descriptor instead'\n      //)\n\n      if (typeof location === 'string') location = _parsePath2['default'](location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _Actions = require('./Actions');\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _parsePath2['default'](location);\n\n  if (typeof action === 'object') {\n    //warning(\n    //  false,\n    //  'The state (2nd) argument to createLocation is deprecated; use a ' +\n    //  'location descriptor instead'\n    //)\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","//import warning from 'warning'\n\n\"use strict\";\n\nexports.__esModule = true;\nfunction deprecate(fn) {\n  return fn;\n  //return function () {\n  //  warning(false, '[history] ' + message)\n  //  return fn.apply(this, arguments)\n  //}\n}\n\nexports[\"default\"] = deprecate;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nexports[\"default\"] = extractPath;\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _extractPath = require('./extractPath');\n\nvar _extractPath2 = _interopRequireDefault(_extractPath);\n\nfunction parsePath(path) {\n  var pathname = _extractPath2['default'](path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}\n\nexports['default'] = parsePath;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _chainFunction = require('chain-function');\n\nvar _chainFunction2 = _interopRequireDefault(_chainFunction);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _ChildMapping = require('./utils/ChildMapping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  component: _propTypes2.default.any,\n  childFactory: _propTypes2.default.func,\n  children: _propTypes2.default.node\n};\n\nvar defaultProps = {\n  component: 'span',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n\nvar TransitionGroup = function (_React$Component) {\n  _inherits(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    _classCallCheck(this, TransitionGroup);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.performAppear = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillAppear) {\n        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));\n      } else {\n        _this._handleDoneAppearing(key, component);\n      }\n    };\n\n    _this._handleDoneAppearing = function (key, component) {\n      if (component.componentDidAppear) {\n        component.componentDidAppear();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully appeared. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performEnter = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillEnter) {\n        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));\n      } else {\n        _this._handleDoneEntering(key, component);\n      }\n    };\n\n    _this._handleDoneEntering = function (key, component) {\n      if (component.componentDidEnter) {\n        component.componentDidEnter();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully entered. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performLeave = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillLeave) {\n        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));\n      } else {\n        // Note that this is somewhat dangerous b/c it calls setState()\n        // again, effectively mutating the component before all the work\n        // is done.\n        _this._handleDoneLeaving(key, component);\n      }\n    };\n\n    _this._handleDoneLeaving = function (key, component) {\n      if (component.componentDidLeave) {\n        component.componentDidLeave();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n        // This entered again before it fully left. Add it again.\n        _this.keysToEnter.push(key);\n      } else {\n        _this.setState(function (state) {\n          var newChildren = _extends({}, state.children);\n          delete newChildren[key];\n          return { children: newChildren };\n        });\n      }\n    };\n\n    _this.childRefs = Object.create(null);\n\n    _this.state = {\n      children: (0, _ChildMapping.getChildMapping)(props.children)\n    };\n    return _this;\n  }\n\n  TransitionGroup.prototype.componentWillMount = function componentWillMount() {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  };\n\n  TransitionGroup.prototype.componentDidMount = function componentDidMount() {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key, this.childRefs[key]);\n      }\n    }\n  };\n\n  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)\n    });\n\n    for (var key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (var _key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);\n      if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {\n        this.keysToLeave.push(_key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  };\n\n  TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {\n    var _this2 = this;\n\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(function (key) {\n      return _this2.performEnter(key, _this2.childRefs[key]);\n    });\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(function (key) {\n      return _this2.performLeave(key, _this2.childRefs[key]);\n    });\n  };\n\n  TransitionGroup.prototype.render = function render() {\n    var _this3 = this;\n\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n\n    var _loop = function _loop(key) {\n      var child = _this3.state.children[key];\n      if (child) {\n        var isCallbackRef = typeof child.ref !== 'string';\n        var factoryChild = _this3.props.childFactory(child);\n        var ref = function ref(r) {\n          _this3.childRefs[key] = r;\n        };\n\n        process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(isCallbackRef, 'string refs are not supported on children of TransitionGroup and will be ignored. ' + 'Please use a callback ref instead: https://facebook.github.io/react/docs/refs-and-the-dom.html#the-ref-callback-attribute') : void 0;\n\n        // Always chaining the refs leads to problems when the childFactory\n        // wraps the child. The child ref callback gets called twice with the\n        // wrapper and the child. So we only need to chain the ref if the\n        // factoryChild is not different from child.\n        if (factoryChild === child && isCallbackRef) {\n          ref = (0, _chainFunction2.default)(child.ref, ref);\n        }\n\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(_react2.default.cloneElement(factoryChild, {\n          key: key,\n          ref: ref\n        }));\n      }\n    };\n\n    for (var key in this.state.children) {\n      _loop(key);\n    }\n\n    // Do not forward TransitionGroup props to primitive DOM nodes\n    var props = _extends({}, this.props);\n    delete props.transitionLeave;\n    delete props.transitionName;\n    delete props.transitionAppear;\n    delete props.transitionEnter;\n    delete props.childFactory;\n    delete props.transitionLeaveTimeout;\n    delete props.transitionEnterTimeout;\n    delete props.transitionAppearTimeout;\n    delete props.component;\n\n    return _react2.default.createElement(this.props.component, props, childrenToRender);\n  };\n\n  return TransitionGroup;\n}(_react2.default.Component);\n\nTransitionGroup.displayName = 'TransitionGroup';\n\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTransitionGroup.defaultProps = defaultProps;\n\nexports.default = TransitionGroup;\nmodule.exports = exports['default'];","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","'use strict';\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\n\nvar _react = require('react');\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\nfunction getChildMapping(children) {\n  if (!children) {\n    return children;\n  }\n  var result = {};\n  _react.Children.map(children, function (child) {\n    return child;\n  }).forEach(function (child) {\n    result[child.key] = child;\n  });\n  return result;\n}\n\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    if (next.hasOwnProperty(key)) {\n      return next[key];\n    }\n\n    return prev[key];\n  }\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  var nextKeysPending = {};\n\n  var pendingKeys = [];\n  for (var prevKey in prev) {\n    if (next.hasOwnProperty(prevKey)) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i = void 0;\n  var childMapping = {};\n  for (var nextKey in next) {\n    if (nextKeysPending.hasOwnProperty(nextKey)) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n    childMapping[nextKey] = getValueForKey(nextKey);\n  }\n\n  // Finally, add the keys which didn't appear before any key in `next`\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhcHAvYWN0aW9ucy9EZXZpY2VzTGlzdEFjdGlvbnMuanMiLCJhcHAvYWN0aW9ucy9Gb290ZXJBY3Rpb25zLmpzIiwiYXBwL2FjdGlvbnMvSG9tZVBhZ2VBY3Rpb25zLmpzIiwiYXBwL2FjdGlvbnMvTmF2YmFyQWN0aW9ucy5qcyIsImFwcC9hY3Rpb25zL1Byb2plY3RBY3Rpb25zLmpzIiwiYXBwL2FjdGlvbnMvUmVzb3VyY2VBY3Rpb25zLmpzIiwiYXBwL2FjdGlvbnMvU2VydmljZUFjdGlvbnMuanMiLCJhcHAvYWN0aW9ucy9UZWFtQWN0aW9ucy5qcyIsImFwcC9hbHQuanMiLCJhcHAvY29tcG9uZW50cy9BcHAuanMiLCJhcHAvY29tcG9uZW50cy9DYXJvdXNlbC5qcyIsImFwcC9jb21wb25lbnRzL0RldmljZS5qcyIsImFwcC9jb21wb25lbnRzL0RldmljZXNMaXN0LmpzIiwiYXBwL2NvbXBvbmVudHMvRm9vdGVyLmpzIiwiYXBwL2NvbXBvbmVudHMvSG9tZU1vZHVsZVRpdGxlLmpzIiwiYXBwL2NvbXBvbmVudHMvSG9tZVBhZ2UuanMiLCJhcHAvY29tcG9uZW50cy9JbnRlbnRpb24uanMiLCJhcHAvY29tcG9uZW50cy9OYXZiYXIuanMiLCJhcHAvY29tcG9uZW50cy9OZXdTZXJ2aWNlQmxvY2suanMiLCJhcHAvY29tcG9uZW50cy9OZXdzLmpzIiwiYXBwL2NvbXBvbmVudHMvUHJvamVjdC5qcyIsImFwcC9jb21wb25lbnRzL1Jlc291cmNlLmpzIiwiYXBwL2NvbXBvbmVudHMvUmVzb3VyY2VEYXRhLmpzIiwiYXBwL2NvbXBvbmVudHMvUmVzb3VyY2VEYXRhQmxvY2suanMiLCJhcHAvY29tcG9uZW50cy9SZXNvdXJjZURlcy5qcyIsImFwcC9jb21wb25lbnRzL1Jlc291cmNlRGVzQmxvY2suanMiLCJhcHAvY29tcG9uZW50cy9SZXNvdXJjZVRvb2xzLmpzIiwiYXBwL2NvbXBvbmVudHMvU2VydmljZXMuanMiLCJhcHAvY29tcG9uZW50cy9TZXJ2aWNlc0xpc3QuanMiLCJhcHAvY29tcG9uZW50cy9UZWFtLmpzIiwiYXBwL2NvbXBvbmVudHMvVG9wb2xvZ3kuanMiLCJhcHAvbWFpbi5qcyIsImFwcC9yb3V0ZXMuanMiLCJhcHAvc3RvcmVzL0RldmljZXNMaXN0U3RvcmVzLmpzIiwiYXBwL3N0b3Jlcy9Gb290ZXJTdG9yZS5qcyIsImFwcC9zdG9yZXMvSG9tZVBhZ2VTdG9yZS5qcyIsImFwcC9zdG9yZXMvTmF2YmFyU3RvcmUuanMiLCJhcHAvc3RvcmVzL1Byb2plY3RTdG9yZS5qcyIsImFwcC9zdG9yZXMvUmVzb3VyY2VTdG9yZS5qcyIsImFwcC9zdG9yZXMvU2VydmljZVN0b3JlLmpzIiwiYXBwL3N0b3Jlcy9UZWFtU3RvcmUuanMiLCJub2RlX21vZHVsZXMvY2hhaW4tZnVuY3Rpb24vaW5kZXguanMiLCJub2RlX21vZHVsZXMvZGVlcC1lcXVhbC9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9kZWVwLWVxdWFsL2xpYi9pc19hcmd1bWVudHMuanMiLCJub2RlX21vZHVsZXMvZGVlcC1lcXVhbC9saWIva2V5cy5qcyIsIm5vZGVfbW9kdWxlcy9oaXN0b3J5L2xpYi9BY3Rpb25zLmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL0FzeW5jVXRpbHMuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvRE9NU3RhdGVTdG9yYWdlLmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL0RPTVV0aWxzLmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50LmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL2NyZWF0ZUJyb3dzZXJIaXN0b3J5LmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL2NyZWF0ZURPTUhpc3RvcnkuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvY3JlYXRlSGlzdG9yeS5qcyIsIm5vZGVfbW9kdWxlcy9oaXN0b3J5L2xpYi9jcmVhdGVMb2NhdGlvbi5qcyIsIm5vZGVfbW9kdWxlcy9oaXN0b3J5L2xpYi9kZXByZWNhdGUuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvZXh0cmFjdFBhdGguanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvcGFyc2VQYXRoLmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL3J1blRyYW5zaXRpb25Ib29rLmpzIiwibm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzIiwibm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwibm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanMiLCJub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIm5vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzIiwibm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qcyIsIm5vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL25vZGVfbW9kdWxlcy9mYmpzL2xpYi93YXJuaW5nLmpzIiwibm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9UcmFuc2l0aW9uR3JvdXAuanMiLCJub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9ub2RlX21vZHVsZXMvd2FybmluZy9icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvdXRpbHMvQ2hpbGRNYXBwaW5nLmpzIiwibm9kZV9tb2R1bGVzL3dhcm5pbmcvYnJvd3Nlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0FDQUE7Ozs7Ozs7O0lBRU0sa0I7QUFDRixrQ0FBYztBQUFBOztBQUNWLGFBQUssZUFBTCxDQUNJLG9CQURKLEVBRUksc0JBRko7QUFJSDs7Ozs0Q0FFbUIsQ0FFbkI7Ozs7OztrQkFHVSxjQUFJLGFBQUosQ0FBa0Isa0JBQWxCLEM7Ozs7Ozs7Ozs7O0FDZmY7Ozs7Ozs7O0lBRU0sYTtBQUNKLDJCQUFjO0FBQUE7O0FBQ1osU0FBSyxlQUFMLENBQ0UseUJBREYsRUFFRSxzQkFGRjtBQUlEOzs7O3VDQUVrQjtBQUFBOztBQUNqQixRQUFFLElBQUYsQ0FBTyxFQUFFLEtBQUsscUJBQVAsRUFBUCxFQUNHLElBREgsQ0FDUSxVQUFDLElBQUQsRUFBVTtBQUNkLGNBQUssT0FBTCxDQUFhLHVCQUFiLENBQXFDLElBQXJDO0FBQ0QsT0FISCxFQUlHLElBSkgsQ0FJUSxVQUFDLEtBQUQsRUFBVztBQUNmLGNBQUssT0FBTCxDQUFhLG9CQUFiLENBQWtDLEtBQWxDO0FBQ0QsT0FOSDtBQU9EOzs7Ozs7a0JBR1ksY0FBSSxhQUFKLENBQWtCLGFBQWxCLEM7Ozs7Ozs7OztBQ3JCZjs7Ozs7Ozs7SUFFTSxlLEdBQ0YsMkJBQWM7QUFBQTs7QUFDVixTQUFLLGVBQUwsQ0FDSSxtQkFESjtBQUdILEM7O2tCQUlVLGNBQUksYUFBSixDQUFrQixlQUFsQixDOzs7Ozs7Ozs7OztBQ1hmOzs7O0FBQ0E7Ozs7OztJQUlNLGE7QUFDSiwyQkFBYztBQUFBOztBQUNaLFNBQUssZUFBTCxDQUNFLG1CQURGLEVBRUUscUJBRkYsRUFHRSxtQkFIRixFQUlFLDBCQUpGLEVBS0UsdUJBTEYsRUFNRSxzQkFORixFQU9FLG1CQVBGO0FBU0Q7Ozs7a0NBRWEsTyxFQUFTO0FBQUE7O0FBQ3JCLFFBQUUsSUFBRixDQUFPO0FBQ0gsYUFBSyx3QkFE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Q1YsYUFBSyxXQUFMO0FBQ0g7Ozs7OENBRXFCLENBRXJCOzs7Ozs7a0JBSVUsY0FBSSxXQUFKLENBQWdCLFNBQWhCLEM7OztBQ2RmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM5RkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM5QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDekJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUNuRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMvRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FDakxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDdkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FDM0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUN2QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUNuREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDeExBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQzNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMxREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQzloQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQzVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNaQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ25DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ3BEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDN0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMxRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUM1UUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUM1REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzFGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5cbmNsYXNzIERldmljZXNMaXN0QWN0aW9ucyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZ2VuZXJhdGVBY3Rpb25zKFxuICAgICAgICAgICAgJ2dldERldmljZXNMaXN0RmFpbCcsXG4gICAgICAgICAgICAnZ2V0RGV2aWNlc0xpc3RTdWNlc3MnLFxuICAgICAgICApO1xuICAgIH1cblxuICAgIGdldERlZmF1bHRNZXNzYWdlKCkge1xuXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlQWN0aW9ucyhEZXZpY2VzTGlzdEFjdGlvbnMpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcblxuY2xhc3MgRm9vdGVyQWN0aW9ucyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZ2VuZXJhdGVBY3Rpb25zKFxuICAgICAgJ2dldFRvcENoYXJhY3RlcnNTdWNjZXNzJyxcbiAgICAgICdnZXRUb3BDaGFyYWN0ZXJzRmFpbCdcbiAgICApO1xuICB9XG5cbiAgZ2V0VG9wQ2hhcmFjdGVycygpIHtcbiAgICAkLmFqYXgoeyB1cmw6ICcvYXBpL2NoYXJhY3RlcnMvdG9wJyB9KVxuICAgICAgLmRvbmUoKGRhdGEpID0+IHtcbiAgICAgICAgdGhpcy5hY3Rpb25zLmdldFRvcENoYXJhY3RlcnNTdWNjZXNzKGRhdGEpXG4gICAgICB9KVxuICAgICAgLmZhaWwoKGpxWGhyKSA9PiB7XG4gICAgICAgIHRoaXMuYWN0aW9ucy5nZXRUb3BDaGFyYWN0ZXJzRmFpbChqcVhocilcbiAgICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVBY3Rpb25zKEZvb3RlckFjdGlvbnMpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcblxuY2xhc3MgSG9tZVBhZ2VBY3Rpb25zIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUFjdGlvbnMoXG4gICAgICAgICAgICAnZ2V0RGVmYXVsdE1lc3NhZ2UnXG4gICAgICAgICk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVBY3Rpb25zKEhvbWVQYWdlQWN0aW9ucyk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuaW1wb3J0IHtcbiAgYXNzaWduXG59IGZyb20gJ3VuZGVyc2NvcmUnO1xuXG5jbGFzcyBOYXZiYXJBY3Rpb25zIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5nZW5lcmF0ZUFjdGlvbnMoXG4gICAgICAndXBkYXRlT25saW5lVXNlcnMnLFxuICAgICAgJ3VwZGF0ZUFqYXhBbmltYXRpb24nLFxuICAgICAgJ3VwZGF0ZVNlYXJjaFF1ZXJ5JyxcbiAgICAgICdnZXRDaGFyYWN0ZXJDb3VudFN1Y2Nlc3MnLFxuICAgICAgJ2dldENoYXJhY3RlckNvdW50RmFpbCcsXG4gICAgICAnZmluZENoYXJhY3RlclN1Y2Nlc3MnLFxuICAgICAgJ2ZpbmRDaGFyYWN0ZXJGYWlsJ1xuICAgICk7XG4gIH1cblxuICBmaW5kQ2hhcmFjdGVyKHBheWxvYWQpIHtcbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6ICcvYXBpL2NoYXJhY3RlcnMvc2VhcmNoJyxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIG5hbWU6IHBheWxvYWQuc2VhcmNoUXVlcnlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5kb25lKChkYXRhKSA9PiB7XG4gICAgICAgIGFzc2lnbihwYXlsb2FkLCBkYXRhKTtcbiAgICAgICAgdGhpcy5hY3Rpb25zLmZpbmRDaGFyYWN0ZXJTdWNjZXNzKHBheWxvYWQpO1xuICAgICAgfSlcbiAgICAgIC5mYWlsKCgpID0+IHtcbiAgICAgICAgdGhpcy5hY3Rpb25zLmZpbmRDaGFyYWN0ZXJGYWlsKHBheWxvYWQpO1xuICAgICAgfSk7XG4gIH1cblxuICBnZXRDaGFyYWN0ZXJDb3VudCgpIHtcbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6ICcvYXBpL2NoYXJhY3RlcnMvY291bnQnXG4gICAgICB9KVxuICAgICAgLmRvbmUoKGRhdGEpID0+IHtcbiAgICAgICAgdGhpcy5hY3Rpb25zLmdldENoYXJhY3RlckNvdW50U3VjY2VzcyhkYXRhKVxuICAgICAgfSlcbiAgICAgIC5mYWlsKChqcVhocikgPT4ge1xuICAgICAgICB0aGlzLmFjdGlvbnMuZ2V0Q2hhcmFjdGVyQ291bnRGYWlsKGpxWGhyKVxuICAgICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZUFjdGlvbnMoTmF2YmFyQWN0aW9ucyk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuXG5jbGFzcyBQcm9qZWN0QWN0aW9ucyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZ2VuZXJhdGVBY3Rpb25zKFxuICAgICAgICAgICAgJ2dldERlZmF1bHRNZXNzZ2FlJ1xuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZUFjdGlvbnMoUHJvamVjdEFjdGlvbnMpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0J1xuXG5jbGFzcyBSZXNvdXJjZUFjdGlvbnMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmdlbmVyYXRlQWN0aW9ucyhbXG4gICAgICAgICAgICAnZ2V0UmVzb3VyY2VzU3VjY2VzcycsXG4gICAgICAgICAgICAnZ2V0UmVzb3VyY2VzRmFpbCcsXG4gICAgICAgICAgICAnZ2V0UmVzb3VyY2UnXG4gICAgICAgIF0pO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZUFjdGlvbnMoUmVzb3VyY2VBY3Rpb25zKTsiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCdcbmltcG9ydCB7XG5cdGFzc2lnblxufSBmcm9tICd1bmRlcnNjb3JlJztcblxuY2xhc3MgU2VydmljZUFjdGlvbnMge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmdlbmVyYXRlQWN0aW9ucyhcblx0XHRcdCdzZXRNZXNzYWdlU3VjY2VzcycsXG5cdFx0XHQnc2V0TWVzc2FnZUZhaWwnLFxuXHRcdFx0J2dldE1lc3NhZ2VTdWNjZXNzJyxcblx0XHRcdCdnZXRNZXNzYWdlRmFpbCdcblx0XHQpO1xuXHR9XG5cblx0Z2V0RGVmYXVsdE1lc3NhZ2UoKSB7XG5cdFx0JC5hamF4KHtcblx0XHRcdHVybDogJ2FwaS9zZXJ2aWNlcycsXG5cdFx0XHRkYXRhOiB7fVxuXHRcdH0pLmRvbmUoKGRhdGEpID0+IHtcblx0XHRcdHRoaXMuYWN0aW9ucy5nZXRNZXNzYWdlU3VjY2VzcyhkYXRhKTtcblx0XHR9KS5mYWlsKCgpID0+IHtcblx0XHRcdHRoaXMuYWN0aW9ucy5nZXRNZXNzYWdlRmFpbChkYXRhKTtcblx0XHR9KTtcblx0fVxuXG5cdHNldE1lc3NhZ2UoKSB7XG5cdFx0Y29uc29sZS5sb2coJ3NldE1lc3NhZ2UnKTtcblx0XHQkLmFqYXgoe1xuXHRcdFx0dXJsOiAnYXBpL3NldFNlcnZpY2UnLFxuXHRcdFx0ZGF0YToge31cblx0XHR9KS5kb25lKChkYXRhKSA9PiB7XG5cdFx0XHRjb25zb2xlLmxvZygnc2V0TWVzc2FnZScsIGRhdGEpO1xuXHRcdFx0dGhpcy5hY3Rpb25zLnNldE1lc3NhZ2VTdWNjZXNzKGRhdGEpO1xuXHRcdH0pLmZhaWwoKGVycikgPT4ge1xuXHRcdFx0Y29uc29sZS5sb2coJ3NldE1lc3NhZ2VGYWlsJywgZXJyKTtcblx0XHRcdHRoaXMuYWN0aW9ucy5zZXRNZXNzYWdlRmFpbChlcnIpO1xuXHRcdH0pO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVBY3Rpb25zKFNlcnZpY2VBY3Rpb25zKTsiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5cbmNsYXNzIFRlYW1BY3Rpb25zIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUFjdGlvbnMoXG4gICAgICAgICAgICAnZ2V0RGVmYXVsdE1lc3NhZ2UnXG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlQWN0aW9ucyhUZWFtQWN0aW9ucyk7IiwiaW1wb3J0IEFsdCBmcm9tICdhbHQnO1xuXG5leHBvcnQgZGVmYXVsdCBuZXcgQWx0KCk7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBOYXZiYXIgZnJvbSAnLi9OYXZiYXInO1xuaW1wb3J0IEZvb3RlciBmcm9tICcuL0Zvb3Rlcic7XG5cbmNsYXNzIEFwcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8TmF2YmFyIGhpc3Rvcnk9e3RoaXMucHJvcHMuaGlzdG9yeX0gLz5cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgICAgICA8Rm9vdGVyIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jbGFzcyBDYXJvdXNlbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgaWQ9XCJteUNhcm91c2VsXCIgY2xhc3NOYW1lPVwiY2Fyb3VzZWwgc2xpZGVcIj5cbiAgICAgICAgICAgICAgICA8b2wgY2xhc3NOYW1lPVwiY2Fyb3VzZWwtaW5kaWNhdG9yc1wiPlxuICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9XCIjbXlDYXJvdXNlbFwiIGRhdGEtc2xpZGUtdG89XCIwXCIgY2xhc3NOYW1lPVwiYWN0aXZlXCI+PC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtdGFyZ2V0PVwiI215Q2Fyb3VzZWxcIiBkYXRhLXNsaWRlLXRvPVwiMVwiPjwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLXRhcmdldD1cIiNteUNhcm91c2VsXCIgZGF0YS1zbGlkZS10bz1cIjJcIj48L2xpPlxuICAgICAgICAgICAgICAgIDwvb2w+ICAgXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJvdXNlbC1pbm5lclwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIml0ZW0gYWN0aXZlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIi9pbWcvMS5qcGdcIiBhbHQ9XCJGaXJzdCBzbGlkZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIml0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL2ltZy8yLmpwZ1wiIGFsdD1cIlNlY29uZCBzbGlkZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIml0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL2ltZy8zLmpwZ1wiIGFsdD1cIlRoaXJkIHNsaWRlXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiY2Fyb3VzZWwtY29udHJvbCByaWdodFwiIGhyZWY9XCIjbXlDYXJvdXNlbFwiIFxuICAgICAgICAgICAgICAgICAgIGRhdGEtc2xpZGU9XCJwcmV2XCI+PC9hPlxuICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImNhcm91c2VsLWNvbnRyb2wgbGVmdFwiIGhyZWY9XCIjbXlDYXJvdXNlbFwiIFxuICAgICAgICAgICAgICAgICAgIGRhdGEtc2xpZGU9XCJuZXh0XCI+PC9hPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENhcm91c2VsOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSG9tZU1vZHVsZVRpdGxlIGZyb20gJy4vSG9tZU1vZHVsZVRpdGxlJztcbmltcG9ydCB7XG4gICAgTGlua1xufSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuXG5jbGFzcyBEZXZpY2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBjb250ZW50cyA9IFt7XG4gICAgICAgICAgICBpbWc6ICcvaW1nL3J1aWppZV9zdy5qcGcnLFxuICAgICAgICAgICAgc3ViVGl0bGU6ICfplJDmjbfkuqTmjaLmnLonLFxuICAgICAgICAgICAgY29udGVudDogJ+WIkuWIhnZsYW7vvIzmjqXlhaXlsYDln5/nvZHkuLvmnLonXG5cbiAgICAgICAgfSwge1xuICAgICAgICAgICAgaW1nOiAnL2ltZy9jaXNjby5qcGVnJyxcbiAgICAgICAgICAgIHN1YlRpdGxlOiAn5oCd56eR5Lqk5o2i5py6JyxcbiAgICAgICAgICAgIGNvbnRlbnQ6ICfmjqXlhaVETVrvvIzmj5Dkvpt3ZWLnrYnlr7nlpJbmnI3liqEnXG5cbiAgICAgICAgfSwge1xuICAgICAgICAgICAgaW1nOiAnL2ltZy90aWFucm9uZ3hpbi5wbmcnLFxuICAgICAgICAgICAgc3ViVGl0bGU6ICflpKnono3kv6HpmLLngavlopknLFxuICAgICAgICAgICAgY29udGVudDogJ+e9kee7nOWFpeWPo+iuvuWkh++8jOmalOemu+e9kee7nOaUu+WHuydcblxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBpbWc6ICcvaW1nL3RpYW5yb25neGluX2lkcy5qcGcnLFxuICAgICAgICAgICAgc3ViVGl0bGU6ICflpKnono3kv6HlhaXkvrXmo4DmtYvns7vnu58nLFxuICAgICAgICAgICAgY29udGVudDogJ+ajgOa1i+e9kee7nOaUu+WHu++8jOWPiuaXtumihOitpu+8jOWBmuWHuuWuieWFqOWTjeW6lCdcblxuICAgICAgICB9XTtcblxuICAgICAgICBsZXQgY29udGVudExpc3QgPSBjb250ZW50cy5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBsZXQgZGV2aWNlID0gJy9kZXZpY2VzTGlzdCc7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXhzLTNcIiBzdHlsZT17e3RleHRBbGlnbjonY2VudGVyJ319IGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICA8TGluayB0bz0nL2RldmljZXNMaXN0Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPVwiaW1nLXJlc3BvbnNpdmVcIiBzdHlsZT17e3dpZHRoOicyNjJweCcsIGhlaWdodDogJzEwNHB4J319ICBzcmM9e2l0ZW0uaW1nfSBhbHQ9XCJcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT17e21hcmdpblRvcDonMTBweCd9fT57aXRlbS5zdWJUaXRsZX08L3A+XG4gICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPGhyLz5cbiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9e3t0ZXh0QWxpZ246J2NlbnRlcid9fT57aXRlbS5jb250ZW50fTwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGV2aWNlXCI+XG4gICAgICAgICAgICAgICAgPEhvbWVNb2R1bGVUaXRsZSB0aXRsZT0ge3tjbjogJ+iuvuWkhycsIGVuOiAn4oCU4oCUICBERVZJQ0UgIOKAlOKAlCd9fSAvPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGV2aWNlLWNvbnRlbnQgY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93IGNsZWFyZml4XCI+XG4gICAgICAgICAgICAgICAgICAgIHtjb250ZW50TGlzdH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRGV2aWNlOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRGV2aWNlc0xpc3RBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvRGV2aWNlc0xpc3RBY3Rpb25zJztcbmltcG9ydCBEZXZpY2VzTGlzdFN0b3JlcyBmcm9tICcuLi9zdG9yZXMvRGV2aWNlc0xpc3RTdG9yZXMnO1xuXG5jbGFzcyBEZXZpY2VzTGlzdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gRGV2aWNlc0xpc3RBY3Rpb25zLmdldERlZmF1bHRNZXNzYWdlKCk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIERldmljZXNMaXN0U3RvcmVzLmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcbiAgICAgICAgbGV0IF90b3AgPSAkKCcuZGV2LWxpc3QnKS5vZmZzZXQoKS50b3A7XG5cbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgICAgRGV2aWNlc0xpc3RTdG9yZXMudW5saXN0ZW4odGhpcy5PbmNoYW5nZSk7XG4gICAgfVxuXG4gICAgb25DaGFuZ2Uoc3RhdGUpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgZGV2aWNlTmFtZXMgPSBbJ+mUkOaNt+S6pOaNouacuicsICfplJDmjbfpmLLngavlopknLCAn5oCd56eR5Lqk5o2i5py6JywgJ+WkqemVnOa8j+a0nuaJq+aPj+ezu+e7nycsICflpKnono3kv6HpmLLngavlopknLCAn5aSp6J6N5L+h5YWl5L615qOA5rWL57O757ufJywgJ+WkqeiejeS/oeWFpeS+temYsuW+oeezu+e7nycsICfnvZHpl7gnXS5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBsZXQgYW5jaG9yID0gJyMnICsgaW5kZXg7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJkZXZpY2VzXCIga2V5PXtpbmRleH0+PGEgc3R5bGU9e3tkaXNwbGF5OidibG9jayd9fSBocmVmPXthbmNob3J9PntpdGVtfTwvYT48L2xpPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IGRldmljZXNMaXN0ID0gW3tcbiAgICAgICAgICAgIG5hbWU6ICfplJDmjbfkuqTmjaLmnLonLFxuICAgICAgICAgICAgcGljOiAnL2ltZy9ydWlqaWVfc3dfMS5wbmcnLFxuICAgICAgICAgICAgb3V0bGluZToge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfplJDmjbfkuqTmjaLmnLonLFxuICAgICAgICAgICAgICAgIHZlcnNpb246ICdSRy0xNjAwaScsXG4gICAgICAgICAgICAgICAgZGF0ZTogJzIwMTctMy0zJyxcbiAgICAgICAgICAgICAgICBjb3Jwb3JhdGlvbjogJ+mUkOaNtydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZXRhaWw6ICdhc2RmYXNkZmFzZGZhc2Rhc2RmYXNkZmFzZGZoYXNkZmFzZGZhc2RmJ1xuICAgICAgICB9LCB7XG4gICAgICAgICAgICBuYW1lOiAn6ZSQ5o236Ziy54Gr5aKZJyxcbiAgICAgICAgICAgIHBpYzogJy9pbWcvcnVpamllX3N3XzEucG5nJyxcbiAgICAgICAgICAgIG91dGxpbmU6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn6ZSQ5o236Ziy54Gr5aKZJyxcbiAgICAgICAgICAgICAgICB2ZXJzaW9uOiAnUkctMTYwMGknLFxuICAgICAgICAgICAgICAgIGRhdGU6ICcyMDE3LTMtMycsXG4gICAgICAgICAgICAgICAgY29ycG9yYXRpb246ICfplJDmjbcnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGV0YWlsOiAnYXNkZmFzZGZhc2RmYXNkYXNkZmFzZGZhc2RmaGFzZGZhc2RmYXNkZidcbiAgICAgICAgfSwge1xuICAgICAgICAgICAgbmFtZTogJ+aAneenkeS6pOaNouacuicsXG4gICAgICAgICAgICBwaWM6ICcvaW1nL3J1aWppZV9zd18xLnBuZycsXG4gICAgICAgICAgICBvdXRsaW5lOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+aAneenkeS6pOaNouacuicsXG4gICAgICAgICAgICAgICAgdmVyc2lvbjogJ1JHLTE2MDBpJyxcbiAgICAgICAgICAgICAgICBkYXRlOiAnMjAxNy0zLTMnLFxuICAgICAgICAgICAgICAgIGNvcnA6ICfplJDmjbcnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGV0YWlsOiAnYXNkZmFzZGZhc2RmYXNkYXNkZmFzZGZhc2RmaGFzZGZhc2RmYXNkZidcbiAgICAgICAgfSwge1xuICAgICAgICAgICAgbmFtZTogJ+WkqemVnOa8j+a0nuaJq+aPj+ezu+e7nycsXG4gICAgICAgICAgICBwaWM6ICcvaW1nL3J1aWppZV9zd18xLnBuZycsXG4gICAgICAgICAgICBvdXRsaW5lOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+WkqemVnOa8j+a0nuaJq+aPj+ezu+e7nycsXG4gICAgICAgICAgICAgICAgdmVyc2lvbjogJ1JHLTE2MDBpJyxcbiAgICAgICAgICAgICAgICBkYXRlOiAnMjAxNy0zLTMnLFxuICAgICAgICAgICAgICAgIGNvcnBvcmF0aW9uOiAn6ZSQ5o23J1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRldGFpbDogJ2FzZGZhc2RmYXNkZmFzZGFzZGZhc2RmYXNkZmhhc2RmYXNkZmFzZGYnXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIG5hbWU6ICflpKnono3kv6HpmLLngavlopknLFxuICAgICAgICAgICAgcGljOiAnL2ltZy9ydWlqaWVfc3dfMS5wbmcnLFxuICAgICAgICAgICAgb3V0bGluZToge1xuICAgICAgICAgICAgICAgIG5hbWU6ICflpKnono3kv6HpmLLngavlopknLFxuICAgICAgICAgICAgICAgIHZlcnNpb246ICdSRy0xNjAwaScsXG4gICAgICAgICAgICAgICAgZGF0ZTogJzIwMTctMy0zJyxcbiAgICAgICAgICAgICAgICBjb3Jwb3JhdGlvbjogJ+mUkOaNtydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZXRhaWw6ICdhc2RmYXNkZmFzZGZhc2Rhc2RmYXNkZmFzZGZoYXNkZmFzZGZhc2RmJ1xuICAgICAgICB9LCB7XG4gICAgICAgICAgICBuYW1lOiAn5aSp6J6N5L+h5YWl5L615qOA5rWL57O757ufJyxcbiAgICAgICAgICAgIHBpYzogJy9pbWcvcnVpamllX3N3XzEucG5nJyxcbiAgICAgICAgICAgIG91dGxpbmU6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn5aSp6J6N5L+h5YWl5L615qOA5rWL57O757ufJyxcbiAgICAgICAgICAgICAgICB2ZXJzaW9uOiAnUkctMTYwMGknLFxuICAgICAgICAgICAgICAgIGRhdGU6ICcyMDE3LTMtMycsXG4gICAgICAgICAgICAgICAgY29ycDogJ+mUkOaNtydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZXRhaWw6ICdhc2RmYXNkZmFzZGZhc2Rhc2RmYXNkZmFzZGZoYXNkZmFzZGZhc2RmJ1xuICAgICAgICB9LCB7XG4gICAgICAgICAgICBuYW1lOiAn5aSp6J6N5L+h5YWl5L616Ziy5b6h57O757ufJyxcbiAgICAgICAgICAgIHBpYzogJy9pbWcvcnVpamllX3N3XzEucG5nJyxcbiAgICAgICAgICAgIG91dGxpbmU6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn5aSp6J6N5L+h5YWl5L616Ziy5b6h57O757ufJyxcbiAgICAgICAgICAgICAgICB2ZXJzaW9uOiAnUkctMTYwMGknLFxuICAgICAgICAgICAgICAgIGRhdGU6ICcyMDE3LTMtMycsXG4gICAgICAgICAgICAgICAgY29ycDogJ+mUkOaNtydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZXRhaWw6ICdhc2RmYXNkZmFzZGZhc2Rhc2RmYXNkZmFzZGZoYXNkZmFzZGZhc2RmJ1xuICAgICAgICB9LCB7XG4gICAgICAgICAgICBuYW1lOiAn572R6Ze4JyxcbiAgICAgICAgICAgIHBpYzogJy9pbWcvcnVpamllX3N3XzEucG5nJyxcbiAgICAgICAgICAgIG91dGxpbmU6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn572R6Ze4JyxcbiAgICAgICAgICAgICAgICB2ZXJzaW9uOiAnUkctMTYwMGknLFxuICAgICAgICAgICAgICAgIGRhdGU6ICcyMDE3LTMtMycsXG4gICAgICAgICAgICAgICAgY29ycDogJ+mUkOaNtydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZXRhaWw6ICdhc2RmYXNkZmFzZGZhc2Rhc2RmYXNkZmFzZGZoYXNkZmFzZGZhc2RmJ1xuICAgICAgICB9XS5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaSBrZXk9e2luZGV4fSBpZD17aW5kZXh9IGNsYXNzTmFtZT1cImRldmljZXMgY2xlYXJmaXhcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGV2LW5hbWVcIj7orr7lpIflkI3np7DvvJp7aXRlbS5uYW1lfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkZXRhaWxcIj7orr7lpIflm77niYfvvJo8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPVwiaW1nLXJlc3BvbnNpdmVcIiBzcmM9e2l0ZW0ucGljfSBhbHQ9XCJcIiAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkZXYtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkZXRhaWxcIj7orr7lpIfmgLvnurLvvJo8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSB0YWJsZS1ib3JkZXJlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPuiuvuWkh+WQjeensDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57aXRlbS5vdXRsaW5lLm5hbWV9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPuiuvuWkh+Wei+WPtzwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57aXRlbS5vdXRsaW5lLnZlcnNpb259PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPueUn+S6p+aXpeacnzwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57aXRlbS5vdXRsaW5lLmRhdGV9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPueUn+S6p+WFrOWPuDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57aXRlbS5vdXRsaW5lLmNvcnB9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRldGFpbFwiPuivpue7hueugOS7i++8mjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9e3twYWRkaW5nOiAnMTBweCd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtpdGVtLmRldGFpbH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIClcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJkZXZpY2VzLWxpc3QgY29udGFpbmVyXCIgc3R5bGU9e3tib3JkZXJUb3A6ICcxcHggc29saWQgI2VlZSd9fT5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7dGV4dEFsaWduOiAnY2VudGVyJywgZm9udFNpemU6JzMycHgnLCBjb2xvcjonIzRhYjM0NCcsIGZvbnRXZWlnaHQ6ICdib2xkJ319PuiuvuWkh+a4heWNlTwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFpblwiIHN0eWxlID0ge3ttYXJnaW5Ub3A6ICc1MHB4JywgYmFja2dyb3VuZENvbG9yOicjZmZmJ319PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdyBjbGVhcmZpeFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsZWZ0IGNvbC14cy0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cImRldi1saXN0XCI+e2RldmljZU5hbWVzfTwvdWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWUgPSBcInJpZ2h0IGNvbC14cy05XCIgc3R5bGU9e3ttYXJnaW5MZWZ0OiAnLTE1cHgnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPntkZXZpY2VzTGlzdH08L3VsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERldmljZXNMaXN0OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBMaW5rXG59IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgRm9vdGVyU3RvcmUgZnJvbSAnLi4vc3RvcmVzL0Zvb3RlclN0b3JlJ1xuaW1wb3J0IEZvb3RlckFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9Gb290ZXJBY3Rpb25zJztcblxuY2xhc3MgRm9vdGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IEZvb3RlclN0b3JlLmdldFN0YXRlKCk7XG4gICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIEZvb3RlclN0b3JlLmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblxuICAgIC8v5Zue5Yiw6aG254K55Yqf6IO9XG4gICAgJChmdW5jdGlvbigpIHtcbiAgICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICgkKHdpbmRvdykuc2Nyb2xsVG9wKCkgPiAxMDApIHtcbiAgICAgICAgICAkKFwiLnRvcFwiKS5mYWRlSW4oODAwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAkKFwiLnRvcFwiKS5mYWRlT3V0KDgwMCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAkKFwiLnRvcFwiKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgJCgnYm9keSxodG1sJykuYW5pbWF0ZSh7XG4gICAgICAgICAgc2Nyb2xsVG9wOiAwXG4gICAgICAgIH0sIDQwMCk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG5cbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIEZvb3RlclN0b3JlLnVubGlzdGVuKHRoaXMub25DaGFuZ2UpO1xuICB9XG5cbiAgb25DaGFuZ2Uoc3RhdGUpIHtcbiAgICB0aGlzLnNldFN0YXRlKHN0YXRlKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGZvb3Rlcj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2NvbnRhaW5lcic+XG4gICAgICAgICAgXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3JvdyBjbGVhcmZpeCc+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdyBjbGVhcmZpeFwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY29sLXNtLTEyJz5cbiAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPSdsZWFkJz48c3Ryb25nPuaZuuiDveWMlue9kee7nOS/oeaBr+WuieWFqOWunumqjOW5s+WPsDwvc3Ryb25nPjwvaDM+XG4gICAgICAgICAgICAgICAgPHA+6IGU57O75Zyw5Z2AOiZuYnNwOyZuYnNwOyZuYnNwO+WMl+S6rOW4gua1t+a3gOWMuuS4iuWFg+adkTPlj7fpmaLljJfkuqzkuqTpgJrlpKflraYmbmJzcDsmbmJzcDsmbmJzcDvkuZ3mlZnljJczMDQ8L3A+XG4gICAgICAgICAgICAgICAgPHA+6IGU57O755S16K+dOiZuYnNwOyZuYnNwOyZuYnNwOzUxNjg0NjA5PC9wPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkaXZpZGVyXCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY29sLXNtLTEyJyBzdHlsZT17e3BhZGRpbmdUb3A6ICc1MHB4J319PlxuICAgICAgICAgICAgICAgIDxwPiZjb3B5OzIwMTctQkpUVTwvcD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICBcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgIFxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0b3BcIj5cbiAgICAgICAgICDlm57liLDpobbpg6hcbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Zvb3Rlcj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvb3RlcjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jbGFzcyBIb21lTW9kdWxlVGl0bGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgbGV0IHRpdGxlID0gdGhpcy5wcm9wcy50aXRsZTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjbGVhcmZpeFwiIHN0eWxlPXt7bWFyZ2luQm90dG9tOiAnNTBweCd9fT5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7dGV4dEFsaWduOiAnY2VudGVyJ319PlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT17e2JhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50J319PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9e3tmb250U2l6ZTogJzI0cHgnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgc3R5bGU9e3tjb2xvcjogJ3JnYig3NiwgNzYsIDc2KSd9fSBjb2xvcj1cIiM0YzRjNGNcIj57dGl0bGUuY259PC9mb250PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e3RleHRBbGlnbjogJ2NlbnRlcid9fT5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9e3tmb250U2l6ZTogJzE0cHgnfX0+PGZvbnQgc3R5bGU9e3tjb2xvcjogJ3JnYigxNjYsIDE2NiwgMTY2KSd9fSBjb2xvcj1cIiNhNmE2YTZcIj7igJTigJQgIHt0aXRsZS5lbn0gIOKAlOKAlDwvZm9udD48L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSG9tZU1vZHVsZVRpdGxlOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSG9tZVBhZ2VTdG9yZSBmcm9tICcuLi9zdG9yZXMvSG9tZVBhZ2VTdG9yZSc7XG5pbXBvcnQgSG9tZVBhZ2VBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvSG9tZVBhZ2VBY3Rpb25zJztcbmltcG9ydCBDYXJvdXNlbCBmcm9tICcuL0Nhcm91c2VsJztcbmltcG9ydCBJbnRlbnRpb24gZnJvbSAnLi9JbnRlbnRpb24nO1xuaW1wb3J0IERldmljZSBmcm9tICcuL0RldmljZSc7XG5pbXBvcnQgVG9wb2xvZ3kgZnJvbSAnLi9Ub3BvbG9neSc7XG5pbXBvcnQgTmV3cyBmcm9tICcuL05ld3MnO1xuXG5jbGFzcyBIb21lUGFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gSG9tZVBhZ2VTdG9yZS5nZXRTdGF0ZSgpO1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBIb21lUGFnZVN0b3JlLmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcbiAgICAgICAgSG9tZVBhZ2VBY3Rpb25zLmdldERlZmF1bHRNZXNzYWdlKCk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIEhvbWVQYWdlU3RvcmUudW5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG4gICAgfVxuXG4gICAgb25DaGFuZ2Uoc3RhdGUpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJob21lLXBhZ2VcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhvbWUtY2Fyb3VzZWxcIj48Q2Fyb3VzZWwgLz48L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBiZWZvcmUtaW50ZW50aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmUtdGl0bGVcIj57dGhpcy5zdGF0ZS50aXRsZX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZS1jb250ZW50XCI+e3RoaXMuc3RhdGUuY29udGVudH08L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhvbWUtaW50ZW50aW9uXCIgIHN0eWxlPXt7cGFkZGluZzogJzUwcHggMCcsIGJhY2tncm91bmRDb2xvcjogJyNlMGUwZTAnfX0gPjxJbnRlbnRpb24gLz48L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhvbWUtdG9wb2xvZ3lcIiBzdHlsZT17e2JhY2tncm91bmRDb2xvcjogJyNmZmYnLCBwYWRkaW5nOic1MHB4IDAnfX0+PFRvcG9sb2d5IC8+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJob21lLWRldmljZVwiIHN0eWxlPXt7YmFja2dyb3VuZENvbG9yOicjZjBmM2Y0JywgcGFkZGluZzogJzUwcHggMCd9fT48RGV2aWNlIC8+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJob21lLW5ld3NcIiBzdHlsZT17e2JhY2tncm91bmRDb2xvcjonI2ZmZicsIHBhZGRpbmc6JzUwcHggMCd9fT48TmV3cyAvPjwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBIb21lUGFnZTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEhvbWVNb2R1bGVUaXRsZSBmcm9tICcuL0hvbWVNb2R1bGVUaXRsZSc7XG5cbmNsYXNzIEludGVudGlvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IGNvbnRlbnRzID0gW3tcbiAgICAgICAgICAgIGltZzogJy9pbWcvb3MucG5nJyxcbiAgICAgICAgICAgIHN1YlRpdGxlOiAn5pS76Ziy5a6e6aqM5bmz5Y+wJyxcbiAgICAgICAgICAgIGNvbnRlbnQ6ICfmlLvlh7vpmLLlvqHlrp7pqozvvIzmqKHmi5/nnJ/lrp7nvZHnu5zov5DooYznirbmgIHvvIzmhJ/nn6XnvZHnu5zmgIHlir8nXG5cbiAgICAgICAgfSwge1xuICAgICAgICAgICAgaW1nOiAnL2ltZy9iaWdkYXRhLnBuZycsXG4gICAgICAgICAgICBzdWJUaXRsZTogJ+Wkp+aVsOaNruWIhuaekCcsXG4gICAgICAgICAgICBjb250ZW50OiAnaGFkb29w5YiG5biD5byP5pWw5o2u5a2Y5YKo6K6h566X5bmz5Y+w77yM5rW36YeP5pWw5o2u6J6N5ZCI5YiG5p6Q5aSE55CGJ1xuXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGltZzogJy9pbWcvY2xvdWQucG5nJyxcbiAgICAgICAgICAgIHN1YlRpdGxlOiAn5pWw5o2u5byA5pS+5pyN5YqhJyxcbiAgICAgICAgICAgIGNvbnRlbnQ6ICforrrmlofnrpfms5XvvIzlhazlvIDmlbDmja7pm4bvvIzlrp7pqozlrqTlhoXpg6jmlbDmja7pm4blvIDmlL7kuIvovb3mnI3liqEnXG5cbiAgICAgICAgfV07XG5cbiAgICAgICAgbGV0IGNvbnRlbnRMaXN0ID0gY29udGVudHMubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC14cy00XCIgc3R5bGU9e3t0ZXh0QWxpZ246J2NlbnRlcid9fSBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2l0ZW0uaW1nfSBhbHQ9XCJcIi8+XG4gICAgICAgICAgICAgICAgICAgIDxwPntpdGVtLnN1YlRpdGxlfTwvcD5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvaW1nL2xpbmUucG5nXCIgYWx0PVwiXCIvPlxuICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT17e3RleHRBbGlnbjonbGVmdCd9fT57aXRlbS5jb250ZW50fTwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW50ZW50XCI+XG4gICAgICAgICAgICAgICAgPEhvbWVNb2R1bGVUaXRsZSB0aXRsZT0ge3tjbjogJ+ebruaghycsIGVuOiAn4oCU4oCUICBTRVJWSUNFICDigJTigJQnfX0gLz5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImludGVudC1jb250ZW50IGNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdyBjbGVhcmZpeFwiPlxuICAgICAgICAgICAgICAgICAgICB7Y29udGVudExpc3R9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEludGVudGlvbjtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBMaW5rLFxuICBJbmRleExpbmtcbn0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBOYXZiYXJTdG9yZSBmcm9tICcuLi9zdG9yZXMvTmF2YmFyU3RvcmUnO1xuaW1wb3J0IE5hdmJhckFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9OYXZiYXJBY3Rpb25zJztcblxuY2xhc3MgTmF2YmFyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IE5hdmJhclN0b3JlLmdldFN0YXRlKCk7XG4gICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIE5hdmJhclN0b3JlLmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblxuICAgIGxldCBzb2NrZXQgPSBpby5jb25uZWN0KCk7XG5cbiAgICBzb2NrZXQub24oJ29ubGluZVVzZXJzJywgKGRhdGEpID0+IHtcbiAgICAgIE5hdmJhckFjdGlvbnMudXBkYXRlT25saW5lVXNlcnMoZGF0YSk7XG4gICAgfSk7XG5cbiAgICAkKGRvY3VtZW50KS5hamF4U3RhcnQoKCkgPT4ge1xuICAgICAgTmF2YmFyQWN0aW9ucy51cGRhdGVBamF4QW5pbWF0aW9uKCdmYWRlSW4nKTtcbiAgICB9KTtcblxuICAgICQoZG9jdW1lbnQpLmFqYXhDb21wbGV0ZSgoKSA9PiB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgTmF2YmFyQWN0aW9ucy51cGRhdGVBamF4QW5pbWF0aW9uKCdmYWRlT3V0Jyk7XG4gICAgICB9LCA3NTApO1xuICAgIH0pO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgTmF2YmFyU3RvcmUudW5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG4gIH1cblxuICBvbkNoYW5nZShzdGF0ZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoc3RhdGUpO1xuICB9XG5cbiAgaGFuZGxlU3VibWl0KGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGxldCBzZWFyY2hRdWVyeSA9IHRoaXMuc3RhdGUuc2VhcmNoUXVlcnkudHJpbSgpO1xuXG4gICAgaWYgKHNlYXJjaFF1ZXJ5KSB7XG4gICAgICBOYXZiYXJBY3Rpb25zLmZpbmRDaGFyYWN0ZXIoe1xuICAgICAgICBzZWFyY2hRdWVyeTogc2VhcmNoUXVlcnksXG4gICAgICAgIHNlYXJjaEZvcm06IHRoaXMucmVmcy5zZWFyY2hGb3JtLFxuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnlcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBsZXQgZm9ybSA9IGBcbiAgICAgIDxmb3JtIHJlZj0nc2VhcmNoRm9ybScgY2xhc3NOYW1lPSduYXZiYXItZm9ybSBuYXZiYXItbGVmdCBhbmltYXRlZCcgb25TdWJtaXQ9e3RoaXMuaGFuZGxlU3VibWl0LmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2lucHV0LWdyb3VwJz5cbiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9J3RleHQnIGNsYXNzTmFtZT0nZm9ybS1jb250cm9sJyBwbGFjZWhvbGRlcj17dGhpcy5zdGF0ZS50b3RhbENoYXJhY3RlcnMgKyAnIGNoYXJhY3RlcnMnfSB2YWx1ZT17dGhpcy5zdGF0ZS5zZWFyY2hRdWVyeX0gb25DaGFuZ2U9e05hdmJhckFjdGlvbnMudXBkYXRlU2VhcmNoUXVlcnl9IC8+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0naW5wdXQtZ3JvdXAtYnRuJz5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT0nYnRuIGJ0bi1kZWZhdWx0JyBvbkNsaWNrPXt0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpfT48c3BhbiBjbGFzc05hbWU9J2dseXBoaWNvbiBnbHlwaGljb24tc2VhcmNoJz48L3NwYW4+PC9idXR0b24+XG4gICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZm9ybT5gO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxuYXYgY2xhc3NOYW1lPSduYXZiYXIgbmF2YmFyLWRlZmF1bHQgbmF2YmFyLXN0YXRpYy10b3AnPlxuICAgICAgICBcbiAgICAgICAgPGRpdiBpZD0nbmF2YmFyJyBjbGFzc05hbWU9J25hdmJhci1jb2xsYXBzZSBjb2xsYXBzZSc+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J25hdmJhci1oZWFkZXInPlxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzTmFtZT0nbmF2YmFyLXRvZ2dsZSBjb2xsYXBzZWQnIGRhdGEtdG9nZ2xlPSdjb2xsYXBzZScgZGF0YS10YXJnZXQ9JyNuYXZiYXInPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J3NyLW9ubHknPlRvZ2dsZSBuYXZpZ2F0aW9uPC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2ljb24tYmFyJz48L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0naWNvbi1iYXInPjwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdpY29uLWJhcic+PC9zcGFuPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8TGluayB0bz0nLycgY2xhc3NOYW1lPSduYXZiYXItYnJhbmQnPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9eyd0cmlhbmdsZXMgYW5pbWF0ZWQgJyArIHRoaXMuc3RhdGUuYWpheEFuaW1hdGlvbkNsYXNzfT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndHJpIGludmVydCc+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3RyaSBpbnZlcnQnPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0cmknPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0cmkgaW52ZXJ0Jz48L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndHJpIGludmVydCc+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3RyaSc+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3RyaSBpbnZlcnQnPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0cmknPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0cmkgaW52ZXJ0Jz48L2Rpdj5cbiAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICA8c2FwbiBjbGFzc05hbWU9XCJjbi1sb2dvXCI+5pm66IO95YyW572R57uc5L+h5oGv5a6J5YWo5a6e6aqM5bmz5Y+wPC9zYXBuPlxuICAgICAgICAgICAgICA8c3BhbiBzdHlsZT17e2ZvbnRTaXplOiAnMzJweCcsIG1hcmdpbkxlZnQ6ICc3MHB4JywgbWFyZ2luUmlnaHQ6ICc1cHgnfX0+XG4gICAgICAgICAgICAgIEluZm9ybWF0aW9uJm5ic3A7Jm5ic3A7PGZvbnQgc3R5bGU9e3tjb2xvcjogJyM3ODg5OTQnfX0+U2VjdXJpdHk8L2ZvbnQ+XG4gICAgICAgICAgICAgIDwvc3Bhbj4gXG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nYmFkZ2UgYmFkZ2UtdXAgYmFkZ2UtZGFuZ2VyJz57dGhpcy5zdGF0ZS5vbmxpbmVVc2Vyc308L3NwYW4+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgXG4gICAgICAgICAgPHVsIGNsYXNzTmFtZT0nbmF2IG5hdmJhci1uYXYgbmF2LXJpZ2h0Jz5cbiAgICAgICAgICAgIDxsaT48SW5kZXhMaW5rIHRvPScvJz7pppbpobU8L0luZGV4TGluaz48L2xpPlxuICAgICAgICAgICAgPGxpPjxMaW5rIHRvPScvc2VydmljZXMnPuacjeWKoTwvTGluaz48L2xpPlxuICAgICAgICAgICAgPGxpPjxMaW5rIHRvPScvcmVzb3VyY2VzJz7otYTmupA8L0xpbms+PC9saT5cbiAgICAgICAgICAgIDxsaT48TGluayB0bz0nL3Byb2plY3RzJz7pobnnm648L0xpbms+PC9saT5cbiAgICAgICAgICAgIDxsaT48TGluayB0bz0nL3RlYW0nPuWboumYnzwvTGluaz48L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9uYXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBOYXZiYXI7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtcbiAgICBMaW5rLFxuICAgIGhhc2hIaXN0b3J5XG59IGZyb20gJ3JlYWN0LXJvdXRlcidcblxuY2xhc3MgTmV3U2VydmljZUJsb2NrIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgc2VydmljZSA9IHRoaXMucHJvcHMuc2VydmljZTtcbiAgICAgICAgbGV0IHR5cGUgPSBzZXJ2aWNlLnR5cGU7XG4gICAgICAgIGxldCBjb250ZW50ID0gc2VydmljZS5jb250ZW50O1xuICAgICAgICBsZXQgc2VydmljZXNMaXN0ID0gY29udGVudC5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBsZXQgYmxhbmsgPSBpdGVtLmFwcGVuZGl4ID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICAgICAgaWYgKCFibGFuaykge1xuICAgICAgICAgICAgICAgIHJldHVybiAoPGxpIGNsYXNzTmFtZT1cInNlcnZpY2VzLWxpc3RcIiBrZXk9e2luZGV4fT48YSBocmVmPXtpdGVtLnVybH0gdGFyZ2V0PVwiX2JsYW5rXCI+e2l0ZW0ubmFtZX08L2E+PC9saT4pXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxldCBwYXRoID0ge1xuICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogaXRlbS51cmwsXG4gICAgICAgICAgICAgICAgICAgIHN0YXRlOiBpdGVtLmFwcGVuZGl4XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKDxsaSBjbGFzc05hbWU9XCJzZXJ2aWNlcy1saXN0XCIga2V5PXtpbmRleH0+PExpbmsgdG89e3BhdGh9PntpdGVtLm5hbWV9PC9MaW5rPjwvbGk+KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5zLWJsb2NrIGNsZWFyZml4XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbWctd3JhcCBjb2wteHMtMlwiPjxpbWcgc3JjPScnIGFsdD1cIlwiLz48L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNlcnZpY2UtaW5mbyBjb2wteHMtMTBcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjbGVhcmZpeFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJucy10aXRsZSBjb2wteHMtMTBcIj57dHlwZX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9yZSBjb2wteHMtMlwiPuabtOWkmjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJucy1jb250ZW50XCIgc3R5bGU9e3tkaXNwbGF5OiAnbm9uZSd9fT5kc2Y8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZXJ2aWNlc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzZXJ2aWNlc0xpc3R9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgTmV3U2VydmljZUJsb2NrOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSG9tZU1vZHVsZVRpdGxlIGZyb20gJy4vSG9tZU1vZHVsZVRpdGxlJztcblxuY2xhc3MgTmV3cyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBsZXQgZGF0YUxpc3QgPSBbMSwgMiwgMywgNF0ubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgaWYgKGluZGV4ICUgMikge1xuICAgICAgICAgICAgICAgIHZhciBjbGFzc25hbWUgPSAnY29sLXhzLTUgIG5ld3MgY2xlYXJmaXggY29sLXhzLW9mZnNldC0yJztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIGNsYXNzbmFtZSA9ICdjb2wteHMtNSAgbmV3cyBjbGVhcmZpeCc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc25hbWV9IGtleT17aW5kZXh9IHN0eWxlPXt7bWFyZ2luVG9wOiAnMTBweCd9fT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZSByb3cgY2xlYXJmaXhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXhzLThcIj7lrp7pqozlrqTlhoXpg6jkuL7lip7nrKzkuInmrKHlhoXpg6jorqjorrrkvJrorq48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXhzLTRcIiBzdHlsZT17e3RleHRBbGlnbjogJ3JpZ2h0J319PjIwMTctMTEtMTk8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICDlhbPkuo7nvZHnq5nlu7rorr7mlrnpnaLnmoTpl67popjkvZzlh7rkuoborqTnnJ/ogIzor6bnu4bnmoTliIbmnpDvvIzlubbkuI7lkZjlrabnlJ/lgZrmt7HlhaXnmoTmjqLorqjvvIzlvpflh7rmu6HmhI/nmoTnu5PmnpwuLi48L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGV2aWNlXCI+XG4gICAgICAgICAgICAgICAgPEhvbWVNb2R1bGVUaXRsZSB0aXRsZT0ge3tjbjogJ+acgOaWsOi1hOiurycsIGVuOiAn4oCU4oCUICBORVdTICDigJTigJQnfX0gLz5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRldmljZS1jb250ZW50IGNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdyBjbGVhcmZpeFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge2RhdGFMaXN0fVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBOZXdzOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvamVjdEFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9Qcm9qZWN0QWN0aW9ucyc7XG5pbXBvcnQgUHJvamVjdFN0b3JlIGZyb20gJy4uL3N0b3Jlcy9Qcm9qZWN0U3RvcmUnO1xuXG5jbGFzcyBQcm9qZWN0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBQcm9qZWN0U3RvcmUuZ2V0U3RhdGUoKTtcbiAgICAgICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKFwic3Bhbi5kaXZcIikuaGlkZSgpO1xuICAgICAgICAgICAgJChcIi5zaXMtbGkgbGlcIikuaG92ZXIoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJChcInNwYW4uZGl2XCIsIHRoaXMpLnNsaWRlVG9nZ2xlKDUwMCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgUHJvamVjdFN0b3JlLmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblxuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICBQcm9qZWN0U3RvcmUudW5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG4gICAgfVxuXG4gICAgb25DaGFuZ2Uoc3RhdGUpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBwcm9qZWN0cyA9IFt7XG4gICAgICAgICAgICB0aXRsZTogJ+WcqOeglOmhueebricsXG4gICAgICAgICAgICBwcm9qZWN0czogW3tcbiAgICAgICAgICAgICAgICBpbWc6ICcvaW1nLzEuanBnJyxcbiAgICAgICAgICAgICAgICBpbmZvOiAn5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piOJ1xuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIGltZzogJy9pbWcvMi5qcGcnLFxuICAgICAgICAgICAgICAgIGluZm86ICfmloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI4nXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgaW1nOiAnL2ltZy8zLmpwZycsXG4gICAgICAgICAgICAgICAgaW5mbzogJ+aWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjidcbiAgICAgICAgICAgIH1dXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIHRpdGxlOiAn5a6M57uT6aG555uuJyxcbiAgICAgICAgICAgIHByb2plY3RzOiBbe1xuICAgICAgICAgICAgICAgIGltZzogJy9pbWcvMS5qcGcnLFxuICAgICAgICAgICAgICAgIGluZm86ICfmloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI7mloflrZfor7TmmI4nXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgaW1nOiAnL2ltZy8yLmpwZycsXG4gICAgICAgICAgICAgICAgaW5mbzogJ+aWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjuaWh+Wtl+ivtOaYjidcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBpbWc6ICcvaW1nLzMuanBnJyxcbiAgICAgICAgICAgICAgICBpbmZvOiAn5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piO5paH5a2X6K+05piOJ1xuICAgICAgICAgICAgfV1cbiAgICAgICAgfV07XG5cbiAgICAgICAgbGV0IHByb2plY3RMaXN0ID0gcHJvamVjdHMubWFwKChwcm9qZWN0LCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgbGV0IGJsb2NrTGlzdCA9IHByb2plY3QucHJvamVjdHMubWFwKChwcm8sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IGltZ3N0eWxlID0ge1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICcyNTBweCcsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMzIwcHgnLFxuICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGB1cmwoJHtwcm8uaW1nfSlgLFxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kU2l6ZTogJ2NvdmVyJ1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3NOYW1lPVwiY29sLXhzLTRcIiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInYxXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzeWxlPXtpbWdzdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXt7aGVpZ2h0OiAnYXV0bycsIHdpZHRoOiAnMzIwcHgnfX0gc3JjPXtwcm8uaW1nfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZGl2XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4g5L+h5oGv566A5LuL77yaPC9oMz4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInR4dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Byby5pbmZvfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm91dGxpbmUgY2xlYXJmaXhcIiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRpdG9uXCI+e3Byb2plY3QudGl0bGV9PC9oMT5cbiAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cInNpcy1saVwiPlxuICAgICAgICAgICAgICAgICAgICAgIHtibG9ja0xpc3R9ICBcbiAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIClcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb2plY3RcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBpY1wiPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7cHJvamVjdExpc3R9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb2plY3Q7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZXNvdXJjZVN0b3JlIGZyb20gJy4uL3N0b3Jlcy9SZXNvdXJjZVN0b3JlJztcbmltcG9ydCBSZXNvdXJjZUFjdGlvbiBmcm9tICcuLi9hY3Rpb25zL1Jlc291cmNlQWN0aW9ucyc7XG5pbXBvcnQgUmVzb3VyY2VEZXMgZnJvbSAnLi9SZXNvdXJjZURlcyc7XG5pbXBvcnQgUmVzb3VyY2VEYXRhIGZyb20gJy4vUmVzb3VyY2VEYXRhJztcbmltcG9ydCBSZXNvdXJjZVRvb2xzIGZyb20gJy4vUmVzb3VyY2VUb29scyc7XG5pbXBvcnQgSG9tZU1vZHVsZVRpdGxlIGZyb20gJy4vSG9tZU1vZHVsZVRpdGxlJztcblxuY2xhc3MgUmVzb3VyY2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IFJlc291cmNlU3RvcmUuZ2V0U3RhdGUoKTtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgUmVzb3VyY2VTdG9yZS5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIFJlc291cmNlU3RvcmUudW5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG4gICAgfVxuXG4gICAgb25DaGFuZ2Uoc3RhdGUpIHtcbiAgICAgICAgUmVzb3VyY2VTdG9yZS5zZXRTdGF0ZShzdGF0ZSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBSZXNvdXJjZXMgPSBbe1xuICAgICAgICAgICAgdGl0bGU6ICfmnJ/liIonLFxuICAgICAgICAgICAgam91cm5hbDogW3tcbiAgICAgICAgICAgICAgICBuYW1lOiAnc2VtYW50aWMgbWV0aG9kIHRvIGp1c3QgdGhlIHBhZ2UuJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwOi8vYmFpZHUuY29tJ1xuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdzZW1hbnRpYyBtZXRob2QgdG8ganVzdCB0aGUgcGFnZS4nLFxuICAgICAgICAgICAgICAgIHVybDogJ2h0dHA6Ly9iYWlkdS5jb20nXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ3NlbWFudGljIG1ldGhvZCB0byBqdXN0IHRoZSBwYWdlLicsXG4gICAgICAgICAgICAgICAgdXJsOiAnLydcbiAgICAgICAgICAgIH1dXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIHRpdGxlOiAn5qCH5YeGJyxcbiAgICAgICAgICAgIGpvdXJuYWw6IFt7XG4gICAgICAgICAgICAgICAgbmFtZTogJ3NlbWFudGljIG1ldGhvZCB0byBqdXN0IHRoZSBwYWdlLicsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cDovL2JhaWR1LmNvbSdcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAnc2VtYW50aWMgbWV0aG9kIHRvIGp1c3QgdGhlIHBhZ2UuJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwOi8vYmFpZHUuY29tJ1xuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdzZW1hbnRpYyBtZXRob2QgdG8ganVzdCB0aGUgcGFnZS4nLFxuICAgICAgICAgICAgICAgIHVybDogJy8nXG4gICAgICAgICAgICB9XVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICB0aXRsZTogJ+S4k+WIqScsXG4gICAgICAgICAgICBqb3VybmFsOiBbe1xuICAgICAgICAgICAgICAgIG5hbWU6ICdzZW1hbnRpYyBtZXRob2QgdG8ganVzdCB0aGUgcGFnZS4nLFxuICAgICAgICAgICAgICAgIHVybDogJ2h0dHA6Ly9iYWlkdS5jb20nXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ3NlbWFudGljIG1ldGhvZCB0byBqdXN0IHRoZSBwYWdlLicsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cDovL2JhaWR1LmNvbSdcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAnc2VtYW50aWMgbWV0aG9kIHRvIGp1c3QgdGhlIHBhZ2UuJyxcbiAgICAgICAgICAgICAgICB1cmw6ICcvJ1xuICAgICAgICAgICAgfV1cbiAgICAgICAgfV07XG5cbiAgICAgICAgbGV0IHJlc291cmNlRGF0YSA9IFt7XG4gICAgICAgICAgICB0aXRsZTogJ+WFrOW8gOeahOaVsOaNrumbhicsXG4gICAgICAgICAgICBjb2xsZWN0aW9uczogW3tcbiAgICAgICAgICAgICAgICBuYW1lOiAna2RkIGN1cDk5JyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL2JhaWR1LmNvbSdcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAnQURGQScsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly92LnFxLmNvbSdcbiAgICAgICAgICAgIH1dXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIHRpdGxlOiAn5a6e6aqM5a6k5YaF6YOo5pWw5o2u6ZuGJyxcbiAgICAgICAgICAgIGNvbGxlY3Rpb25zOiBbe1xuICAgICAgICAgICAgICAgIG5hbWU6ICdrZGQgY3VwOTknLFxuICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vYmFpZHUuY29tJ1xuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdBREZBJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3YucXEuY29tJ1xuICAgICAgICAgICAgfV1cbiAgICAgICAgfV07XG5cbiAgICAgICAgbGV0IHJlc291cmNlVG9vbHMgPSBbe1xuICAgICAgICAgICAgdGl0bGU6ICflhazlvIDnmoTlt6XlhbcnLFxuICAgICAgICAgICAgY29sbGVjdGlvbnM6IFt7XG4gICAgICAgICAgICAgICAgbmFtZTogJ3N2bicsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9iYWlkdS5jb20nXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ3Nub3J0JyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3YucXEuY29tJ1xuICAgICAgICAgICAgfV1cbiAgICAgICAgfSwge1xuICAgICAgICAgICAgdGl0bGU6ICflrp7pqozlrqTlhoXpg6jlt6XlhbcnLFxuICAgICAgICAgICAgY29sbGVjdGlvbnM6IFt7XG4gICAgICAgICAgICAgICAgbmFtZTogJ2Z0cCcsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9iYWlkdS5jb20nXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ2dpdCcsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly92LnFxLmNvbSdcbiAgICAgICAgICAgIH1dXG4gICAgICAgIH1dO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlc291cmNlIGNsZWFyZml4XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwaWNcIj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlc291cmNlLWRlc1wiIHN0eWxlPXt7bWFyZ2luVG9wOiAnMjBweCd9fT5cbiAgICAgICAgICAgICAgICAgICAgPEhvbWVNb2R1bGVUaXRsZSAgdGl0bGU9e3tjbjogJ+iuuuaWhycsIGVuOiAnUEFQRVInfX0gLz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSZXNvdXJjZURlcyAgcmVzb3VyY2VEZXM9e1Jlc291cmNlc30gLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZXNvdXJjZS1kYXRhXCIgc3R5bGU9e3tiYWNrZ3JvdW5kQ29sb3I6ICcjZmZmJyxwYWRkaW5nQm90dG9tOic1MHB4JywgbWFyZ2luVG9wOic1MHB4J319PlxuICAgICAgICAgICAgICAgICAgICA8UmVzb3VyY2VEYXRhIHJlc291cmNlRGF0YT17cmVzb3VyY2VEYXRhfSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVzb3VyY2UtdG9vbHNcIj5cbiAgICAgICAgICAgICAgICAgICAgPFJlc291cmNlVG9vbHMgcmVzb3VyY2VUb29scz17cmVzb3VyY2VUb29sc30gLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBSZXNvdXJjZTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlc291cmNlRGF0YUJsb2NrIGZyb20gJy4vUmVzb3VyY2VEYXRhQmxvY2snO1xuaW1wb3J0IEhvbWVNb2R1bGVUaXRsZSBmcm9tICcuL0hvbWVNb2R1bGVUaXRsZSc7XG5cbmNsYXNzIFJlc291cmNlRGF0YSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgZGF0YXMgPSB0aGlzLnByb3BzLnJlc291cmNlRGF0YTtcbiAgICAgICAgbGV0IGRhdGFMaXN0ID0gZGF0YXMubWFwKChkYXRhLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgbGV0IGNsYXNzc3R5bGUgPSBpbmRleCAlIDIgPT0gMCA/ICdjb2wteHMtNScgOiAnY29sLXhzLTUgY29sLXhzLW9mZnNldC0yJztcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzc3R5bGV9IGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICA8UmVzb3VyY2VEYXRhQmxvY2sgcmVzb3VyY2VEYXRhPXtkYXRhfSB1c2Vmb3I9XCJkYXRhc2V0XCIgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e21hcmdpblRvcDogJzIwcHgnfX0+PEhvbWVNb2R1bGVUaXRsZSB0aXRsZT0ge3tjbjogJ+aVsOaNrumbhicsIGVuOiAnREFUQVNFVCd9fSAvPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93IGNsZWFyZml4XCI+XG4gICAgICAgICAgICAgICAgICAgIHtkYXRhTGlzdH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBSZXNvdXJjZURhdGE7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY2xhc3MgUmVzb3VyY2VEYXRhQmxvY2sgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBkYXRhID0gdGhpcy5wcm9wcy5yZXNvdXJjZURhdGE7XG4gICAgICAgIGxldCB1c2Vmb3IgPSB0aGlzLnByb3BzLnVzZWZvcjtcbiAgICAgICAgbGV0IHRpdGxlID0gdXNlZm9yID09ICdkYXRhc2V0JyA/ICfmlbDmja7pm4YnIDogJ+W3peWFtyc7XG4gICAgICAgIGxldCByb3dzID0gZGF0YS5jb2xsZWN0aW9ucy5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYga2V5PXtpbmRleH0+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPntpdGVtLm5hbWV9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPXtpdGVtLnVybH0gdGFyZ2V0PVwiX2JsYW5rXCI+5L2/55So5pa55byP5ZKM5LiL6L29PC9hPiAgICBcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIClcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRhdGEtYmxvY2tcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRhdGEtdGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj57ZGF0YS50aXRsZX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb25cIj5JTk5FUiBEQVRBU0VUPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm9yXCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkYXRhLWluZm9cIj7lrp7pqozlrqTnmoTlhoXpg6jmlbDmja7pm4bmmK/lnKjmiJHku6zmkK3lu7rnmoTmmbrog73ljJbkv6Hmga/lronlhajlrp7pqozlubPlj7DkuIrlrozmiJDnmoTkuIDkuKrlrp7pqozov4fnqIvkuK3ph4fpm4bnmoTlkITnp43mlLvlh7vmlbDmja7jgII8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbGxlY3Rpb25zXCI+XG4gICAgICAgICAgICAgICAgICAgIHtyb3dzfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlc291cmNlRGF0YUJsb2NrOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVzb3VyY2VEZXNCbG9jayBmcm9tICcuL1Jlc291cmNlRGVzQmxvY2snO1xuaW1wb3J0IHtcbiAgICBMaW5rXG59IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5cbmNsYXNzIFJlc291cmNlRGVzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgcmVzb3VyY2VEZXMgPSB0aGlzLnByb3BzLnJlc291cmNlRGVzO1xuICAgICAgICBsZXQgcmVzb3VyY2VMaXN0ID0gcmVzb3VyY2VEZXMubWFwKChyZXNvdXJjZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wteHMtMTJcIiBzdHlsZT17e21hcmdpbkJvdHRvbTogJzEwMHB4J319IGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICA8UmVzb3VyY2VEZXNCbG9jayByZXNvdXJjZT17cmVzb3VyY2V9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9yZSBjb2wteHMtMiBjb2wteHMtb2Zmc2V0LTVcIj5tb3JlPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlc291cmNlLWRlcyBjbGVhcmZpeFwiID5cbiAgICAgICAgICAgICAgICB7cmVzb3VyY2VMaXN0fVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlc291cmNlRGVzOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICAgIExpbmtcbn0gZnJvbSAncmVhY3Qtcm91dGVyJztcblxuY2xhc3MgUmVzb3VyY2VEZXNCbG9jayBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IGRlcyA9IHRoaXMucHJvcHMucmVzb3VyY2U7XG4gICAgICAgIGxldCBqb3VybmFsTGlzdCA9IGRlcy5qb3VybmFsLm1hcCgoam91cm5hbCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYXBlci1pdGVtIGNsZWFyZml4XCIga2V5PXtpbmRleH0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXhzLTEwXCI+PExpbmsgdG89e2pvdXJuYWwudXJsfT57am91cm5hbC5uYW1lfTwvTGluaz48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wteHMtMiBcIj7or6bnu4Y8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRlcy1ibG9ja1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGVzLXRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgIHtkZXMudGl0bGV9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkZXMtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhcGVyc1wiPlxuICAgICAgICAgICAgICAgICAgICB7am91cm5hbExpc3R9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlc291cmNlRGVzQmxvY2s7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZXNvdXJjZURhdGFCbG9jayBmcm9tICcuL1Jlc291cmNlRGF0YUJsb2NrJztcbmltcG9ydCBIb21lTW9kdWxlVGl0bGUgZnJvbSAnLi9Ib21lTW9kdWxlVGl0bGUnO1xuXG5jbGFzcyBSZXNvdXJjZVRvb2xzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgZGF0YXMgPSB0aGlzLnByb3BzLnJlc291cmNlVG9vbHM7XG4gICAgICAgIGxldCBkYXRhTGlzdCA9IGRhdGFzLm1hcCgoZGF0YSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGxldCBjbGFzc3N0eWxlID0gaW5kZXggJSAyID09IDAgPyAnY29sLXhzLTUnIDogJ2NvbC14cy01IGNvbC14cy1vZmZzZXQtMic7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc3N0eWxlfSBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgPFJlc291cmNlRGF0YUJsb2NrIHJlc291cmNlRGF0YT17ZGF0YX0gdXNlZm9yPVwidG9vbHNcIiAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRvb2xzLXRpdGxlIGNsZWFyZml4XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ttYXJnaW5Ub3A6ICcyMHB4J319PjxIb21lTW9kdWxlVGl0bGUgdGl0bGU9IHt7Y246ICflt6XlhbcnLCBlbjogJ1RPT0xTJ319IC8+PC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3cgY2xlYXJmaXhcIj5cbiAgICAgICAgICAgICAgICAgICAge2RhdGFMaXN0fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcblxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVzb3VyY2VUb29sczsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNlcnZpY2VBY3Rpb24gZnJvbSAnLi4vYWN0aW9ucy9TZXJ2aWNlQWN0aW9ucyc7XG5pbXBvcnQgU2VydmljZVN0b3JlIGZyb20gJy4uL3N0b3Jlcy9TZXJ2aWNlU3RvcmUnO1xuaW1wb3J0IE5ld1NlcnZpY2VCbG9jayBmcm9tICcuL05ld1NlcnZpY2VCbG9jayc7XG5pbXBvcnQgUmVhY3RDU1NUcmFuc2l0aW9uR3JvdXAgZnJvbSAncmVhY3QtdHJhbnNpdGlvbi1ncm91cC9UcmFuc2l0aW9uR3JvdXAnO1xuaW1wb3J0IEhvbWVNb2R1bGVUaXRsZSBmcm9tICcuL0hvbWVNb2R1bGVUaXRsZSc7XG5cblxuY2xhc3MgU2VydmljZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XG5cdFx0c3VwZXIocHJvcHMpO1xuXHRcdHRoaXMuc3RhdGUgPSBTZXJ2aWNlU3RvcmUuZ2V0U3RhdGUoKTtcblx0XHR0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuXHR9XG5cblx0Y29tcG9uZW50RGlkTW91bnQoKSB7XG5cdFx0U2VydmljZVN0b3JlLmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblx0XHQvLyBTZXJ2aWNlQWN0aW9uLmdldERlZmF1bHRNZXNzYWdlKCk7XG5cdFx0Ly8gU2VydmljZUFjdGlvbi5zZXRNZXNzYWdlKCk7XG5cdH1cblxuXHRjb21wb25lbnREaWRVcGRhdGUoKSB7XG5cblx0fVxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuXHRcdGNvbnNvbGUubG9nKCdjb21wb25lbnRXaWxsVW5tb3VudCcpO1xuXHRcdFNlcnZpY2VTdG9yZS51bmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblx0fVxuXG5cdG9uQ2hhbmdlKHN0YXRlKSB7XG5cdFx0Y29uc29sZS5sb2coJ3N0YXRlJywgc3RhdGUpXG5cdFx0dGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cdFx0bGV0IG1lc3NhZ2UgPSB0aGlzLnN0YXRlLm1lc3NhZ2U7XG5cdFx0bGV0IHNlcnZpY2VzID0gdGhpcy5zdGF0ZS5zZXJ2aWNlcztcblx0XHRsZXQgU2VydmljZUJsb2NrcyA9IHNlcnZpY2VzLm1hcCgob2JqLCBpbmRleCkgPT4ge1xuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0PGRpdiBrZXk9e2luZGV4fSBjbGFzc05hbWU9XCJjb2wteHMtMTJcIiBzdHlsZT17e21hcmdpbkJvdHRvbTonMTAwcHgnfX0+XG5cdFx0XHRcdFx0PE5ld1NlcnZpY2VCbG9jayBzZXJ2aWNlPXtvYmp9IC8+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0KVxuXHRcdH0pO1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInNlcnZpY2VcIj5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJwaWNcIj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDxIb21lTW9kdWxlVGl0bGUgIHRpdGxlPXt7Y246ICfmnI3liqEnLCBlbjogJ1NFUlZJQ0UnfX0gLz5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIiBzdHlsZT17e21hcmdpblRvcDogJzIwcHgnfX0+XG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJyb3cgY2xlYXJmaXhcIj5cblx0XHRcdFx0XHRcdHtTZXJ2aWNlQmxvY2tzfVxuXHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdDwvZGl2PlxuXHRcdClcblx0fVxuXG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2VydmljZTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jbGFzcyBTZXJ2aWNlc0xpc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBwcm9wcyA9IHRoaXMucHJvcHMubG9jYXRpb24uc3RhdGUgfHwgJyc7XG4gICAgICAgIGxldCBzZXJ2aWNlTmFtZSA9IHRoaXMucHJvcHMucGFyYW1zLm5hbWU7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e2ZvbnRTaXplOiczMnB4Jyx0ZXh0QWxpZ246J2NlbnRlcicsIG1hcmdpbkJvdHRvbTonMTVweCd9fT7mnI3liqHliJfooajpobXpnaI8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFpblwiIHN0eWxlPXt7bWluSGVpZ2h0OiAnNTAwcHgnfX0+XG4gICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSB0YWJsZS1ib3JkZXJlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPuacjeWKoeWQjeensO+8mjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57c2VydmljZU5hbWV9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPuacjeWKoeWcsOWdgO+8mjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57cHJvcHMudXJsfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD7mnI3liqHnq6/lj6PvvJo8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3Byb3BzLnBvcnR9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPueZu+W9lei0puaIt++8mjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57cHJvcHMudXNlcm5hbWV9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPueZu+W9leWvhuegge+8mjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57cHJvcHMucGFzc3dvcmR9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPueZu+W9leaWueW8j++8mjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57cHJvcHMuZGVzfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2VydmljZXNMaXN0OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVGVhbVN0b3JlIGZyb20gJy4uL3N0b3Jlcy9UZWFtU3RvcmUnO1xuaW1wb3J0IFRlYW1BY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvVGVhbUFjdGlvbnMnO1xuaW1wb3J0IEhvbWVNb2R1bGVUaXRsZSBmcm9tICcuL0hvbWVNb2R1bGVUaXRsZSc7XG5cbmNsYXNzIFRlYW0gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IFRlYW1TdG9yZS5nZXRTdGF0ZSgpO1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBUZWFtU3RvcmUubGlzdGVuKHRoaXMub25DaGFuZ2UpO1xuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICBUZWFtU3RvcmUudW5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG4gICAgfVxuXG4gICAgb25DaGFuZ2Uoc3RhdGUpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCB0ZWFtcyA9IFt7XG4gICAgICAgICAgICBjYXRlZ29yeTogJ+iAgeW4iCcsXG4gICAgICAgICAgICBuYW1lczogWyd4eHgnLCAneHh4JywgJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCddXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGNhdGVnb3J5OiAn5Y2a5aOrJyxcbiAgICAgICAgICAgIG5hbWVzOiBbJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCddXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGNhdGVnb3J5OiAn56GV5aOrJyxcbiAgICAgICAgICAgIG5hbWVzOiBbJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCddXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGNhdGVnb3J5OiAn5pys56eR55SfJyxcbiAgICAgICAgICAgIG5hbWVzOiBbJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCddXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGNhdGVnb3J5OiAn5q+V5Lia55SfJyxcbiAgICAgICAgICAgIG5hbWVzOiBbJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCcsICd4eHgnLCAneHh4JywgJ3h4eCddXG4gICAgICAgIH1dO1xuXG4gICAgICAgIGxldCB0ZWFtTGlzdCA9IHRlYW1zLm1hcCgodGVhbSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGxldCBuYW1lTGlzdCA9IHRlYW0ubmFtZXMubWFwKChuYW1lLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiIGNvbC14cy1vZmZzZXQtMSBjb2wtbWQtMVwiIGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cImltZy91MTgucG5nXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5hbWVcIj57bmFtZX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib25lcGVvX291dGxpbmUgY2xlYXJmaXggY29sLXhzLTEyXCIga2V5PXtpbmRleH0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXhzLTEgb25lY2xhc3NOYW1lXCI+e3RlYW0uY2F0ZWdvcnl9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXhzLTEwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7bmFtZUxpc3R9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZWFtXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvdXRsaW5lIHJvdyBjbGVhcmZpeFwiIHN0eWxlPXt7YmFja2dyb3VuZENvbG9yOiAnI2YwZjRmNSd9fT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ttYXJnaW5Ub3A6ICc1MHB4J319PjxIb21lTW9kdWxlVGl0bGUgdGl0bGU9e3tjbjogJ+aIkeS7rOeahOWboumYnycsIGVuOidPVVIgVEVBTSd9fSAvPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIiBzdHlsZT17e21hcmdpbkJvdHRvbTogJzUwcHgnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtN1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT1cImltZy1yZXNwb25zaXZlXCIgc3JjPVwiaW1nLzEuanBnXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC14cy01XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPuaVtOS9k+S7i+e7jeWboumYn+eJueeCue+8jOWMheaLrOeglOeptuaWueWQke+8jOiAgeW4iOWtpueUn+S6uuaVsOetiTwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxpbmVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInBlb3BsZV90aXRcIj5URUFDSEVSUyZuYnNwOyZuYnNwO1NUVURFTlRTPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj57dGVhbUxpc3R9PC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRlYW07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBIb21lTW9kdWxlVGl0bGUgZnJvbSAnLi9Ib21lTW9kdWxlVGl0bGUnO1xuXG5jbGFzcyBUb3BvbG9neSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGV2aWNlXCI+XG4gICAgICAgICAgICAgICAgPEhvbWVNb2R1bGVUaXRsZSB0aXRsZT0ge3tjbjogJ+aLk+aJkScsIGVuOiAn4oCU4oCUICBUT1BPTE9HWSAg4oCU4oCUJ319IC8+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkZXZpY2UtY29udGVudCBjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3cgY2xlYXJmaXhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXhzLTRcIiBzdHlsZT17e21hcmdpblRvcDogJy0zMHB4J319PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBzdHlsZT17e3RleHRBbGlnbjogJ2NlbnRlcid9fT7nu4/lhbjnvZHnu5zmi5PmiZHlm748L2g0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPXt7bWFyZ2luVG9wOiAnMzBweCcsbGluZUhlaWdodDonNDBweCd9fT7lubPlj7DlnKjlhaXlj6PpmLLngavlopnlkozmoLjlv4PkuqTmjaLmnLrkuIvlhbHliIbkuLrlm5vkuKrln59cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICDvvJpETVpUcnVzdCZuYnNwOyZuYnNwO1VudHJ1c3QmbmJzcDsmbmJzcDtVc2VyJm5ic3A7Jm5ic3A7TWFuYWdlbWVudOOAguWFtuS4rURNWuWfn+S4reWMheaLrOWvueWkluacjeWKoeeahOacjeWKoeWZqOmbhue+pO+8jFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRydXN05Z+f5Lit5YyF5ous6K+B5Lmm5pyN5Yqh5Zmo5ZKM5LqR5pyN5Yqh5bmz5Y+w77yMVW50cnVzdOWfn+S4reWMheWQq+S4gOS4qlZQTumAmumBk++8jFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVzZXLln5/kuK3mmK/lhoXnvZHnmoTnlKjmiLfnu4jnq6/vvIxNYW5hZ2VtZW505Z+f5Lit5YyF5ZCr5LiA5Y+w6ZuG5Lit5pel5b+X5pyN5Yqh5Zmo5ZKMU0ZUUOacjeWKoeWZqO+8jFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIOavj+S4quWMuuWfn+S4remDveacieS4gOWll+WuieWFqOacjeWKoee7hO+8jOWMheWQq0FQVOOAgUlEU+OAgea8j+a0nuaJq+aPj+WSjOe7iOerr+mYsuaKpOetieWuieWFqOiuvuWkh+OAgjwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wteHMtOFwiPjxpbWcgY2xhc3NOYW1lPVwiaW1xZy1yZXNwb25zaXZlXCIgc3R5bGU9e3t3aWR0aDonMTAwJScsaGVpZ2h0OicxMDAlJ319IHNyYz1cIi9pbWcvdG9wb2xvZ3kuanBnXCIgYWx0PVwiXCIvPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUb3BvbG9neTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJvdXRlciBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgY3JlYXRlQnJvd3Nlckhpc3RvcnkgZnJvbSAnaGlzdG9yeS9saWIvY3JlYXRlQnJvd3Nlckhpc3RvcnknO1xuaW1wb3J0IHJvdXRlcyBmcm9tICcuL3JvdXRlcyc7XG5cbmxldCBoaXN0b3J5ID0gY3JlYXRlQnJvd3Nlckhpc3RvcnkoKTtcblxuUmVhY3RET00ucmVuZGVyKDxSb3V0ZXIgaGlzdG9yeT17aGlzdG9yeX0+e3JvdXRlc308L1JvdXRlcj4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHAnKSk7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gIFJvdXRlLFxuICBJbmRleFJvdXRlXG59IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgQXBwIGZyb20gJy4vY29tcG9uZW50cy9BcHAnO1xuaW1wb3J0IFNlcnZpY2VzIGZyb20gJy4vY29tcG9uZW50cy9TZXJ2aWNlcyc7XG5pbXBvcnQgUmVzb3VyY2VzIGZyb20gJy4vY29tcG9uZW50cy9SZXNvdXJjZSc7XG5pbXBvcnQgSG9tZVBhZ2UgZnJvbSAnLi9jb21wb25lbnRzL0hvbWVQYWdlJztcbmltcG9ydCBUZWFtIGZyb20gJy4vY29tcG9uZW50cy9UZWFtJztcbmltcG9ydCBQcm9qZWN0IGZyb20gJy4vY29tcG9uZW50cy9Qcm9qZWN0JztcbmltcG9ydCBEZXZpY2VzTGlzdCBmcm9tICcuL2NvbXBvbmVudHMvRGV2aWNlc0xpc3QnO1xuaW1wb3J0IFNlcnZpY2VzTGlzdCBmcm9tICcuL2NvbXBvbmVudHMvU2VydmljZXNMaXN0JztcblxuZXhwb3J0IGRlZmF1bHQgKFxuICA8Um91dGUgY29tcG9uZW50PXtBcHB9PlxuICAgIDxJbmRleFJvdXRlIGNvbXBvbmVudD17SG9tZVBhZ2V9IC8+XG4gICAgPFJvdXRlIHBhdGg9Jy8nIGNvbXBvbmVudD17SG9tZVBhZ2V9IC8+XG4gICAgPFJvdXRlIHBhdGg9Jy9zZXJ2aWNlcycgY29tcG9uZW50PXtTZXJ2aWNlc30gLz5cbiAgICA8Um91dGUgcGF0aD0nL3Jlc291cmNlcycgY29tcG9uZW50PXtSZXNvdXJjZXN9IC8+XG4gICAgPFJvdXRlIHBhdGg9Jy90ZWFtJyBjb21wb25lbnQ9e1RlYW19IC8+XG4gICAgPFJvdXRlIHBhdGg9Jy9wcm9qZWN0cycgY29tcG9uZW50PXtQcm9qZWN0fSAvPlxuICAgIDxSb3V0ZSBwYXRoPScvZGV2aWNlc0xpc3QnIGNvbXBvbmVudD17RGV2aWNlc0xpc3R9IC8+XG4gICAgPFJvdXRlIHBhdGg9Jy9zZXJ2aWNlcy9kZXRhaWwvOm5hbWUnIGNvbXBvbmVudD17U2VydmljZXNMaXN0fSAvPlxuICA8L1JvdXRlPlxuKTsiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5pbXBvcnQgRGV2aWNlc0xpc3RBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvRGV2aWNlc0xpc3RBY3Rpb25zJztcblxuY2xhc3MgRGV2aWNlc0xpc3RTdG9yZXMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmJpbmRBY3Rpb25zKERldmljZXNMaXN0QWN0aW9ucyk7XG4gICAgfVxuXG4gICAgb25HZXREZXZpY2VzTGlzdEZhaWwoKSB7XG5cbiAgICB9XG5cbiAgICBvbkdldERldmljZXNMaXN0U3VjY2VzcygpIHtcblxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZVN0b3JlKERldmljZXNMaXN0U3RvcmVzKTsiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5pbXBvcnQgRm9vdGVyQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0Zvb3RlckFjdGlvbnMnO1xuXG5jbGFzcyBGb290ZXJTdG9yZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuYmluZEFjdGlvbnMoRm9vdGVyQWN0aW9ucyk7XG4gICAgdGhpcy5jaGFyYWN0ZXJzID0gW107XG4gIH1cblxuICBvbkdldFRvcENoYXJhY3RlcnNTdWNjZXNzKGRhdGEpIHtcbiAgICB0aGlzLmNoYXJhY3RlcnMgPSBkYXRhLnNsaWNlKDAsIDUpO1xuICB9XG5cbiAgb25HZXRUb3BDaGFyYWN0ZXJzRmFpbChqcVhocikge1xuICAgIHRvYXN0ci5lcnJvcihqcVhoci5yZXNwb25zZUpTT04gJiYganFYaHIucmVzcG9uc2VKU09OLm1lc3NhZ2UgfHwganFYaHIucmVzcG9uc2VUZXh0IHx8IGpxWGhyLnN0YXR1c1RleHQpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVTdG9yZShGb290ZXJTdG9yZSk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuaW1wb3J0IEhvbWVQYWdlQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0hvbWVQYWdlQWN0aW9ucyc7XG5cbmNsYXNzIEhvbWVQYWdlU3RvcmUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmJpbmRBY3Rpb25zKEhvbWVQYWdlQWN0aW9ucyk7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9ICcnO1xuICAgICAgICB0aGlzLnRpdGxlID0gJ+W5s+WPsOW7uuiuvuebruaghyc7XG4gICAgICAgIHRoaXMuY29udGVudCA9IGDlrp7pqozlubPlj7DmmK/ku6Xnoazku7bnjq/looPvvIjnvZHnu5zjgIHmnI3liqHorr7lpIfjgIHlronlhajorr7lpIfnrYnvvInjgIHova/ku7bnjq/looPvvIjljY/orq7jgIHmnI3liqHjgIHlvIDlj5HjgIHnoJTnqbbnrYnvvInkuLrln7rnoYDkuobkuIDkuKrnvZHnu5zmlbDmja7mmbrog73liIbmnpDkuI7lj6/op4ZcbiAgICAgICAgICAgICAgICAgICAg5YyW5YiG5p6Q55qE56CU44CB5Lqn44CB5a2m55qE57u85ZCI5bmz5Y+w44CCYDtcbiAgICB9XG5cbiAgICBvbkdldERlZmF1bHRNZXNzYWdlKCkge1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSAnY25tZCc7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlU3RvcmUoSG9tZVBhZ2VTdG9yZSk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuaW1wb3J0IE5hdmJhckFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9OYXZiYXJBY3Rpb25zJztcblxuY2xhc3MgTmF2YmFyU3RvcmUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmJpbmRBY3Rpb25zKE5hdmJhckFjdGlvbnMpO1xuICAgIHRoaXMudG90YWxDaGFyYWN0ZXJzID0gMDtcbiAgICB0aGlzLm9ubGluZVVzZXJzID0gMDtcbiAgICB0aGlzLnNlYXJjaFF1ZXJ5ID0gJyc7XG4gICAgdGhpcy5hamF4QW5pbWF0aW9uQ2xhc3MgPSAnJztcbiAgfVxuXG4gIG9uRmluZENoYXJhY3RlclN1Y2Nlc3MocGF5bG9hZCkge1xuICAgIHBheWxvYWQuaGlzdG9yeS5wdXNoU3RhdGUobnVsbCwgJy9jaGFyYWN0ZXJzLycgKyBwYXlsb2FkLmNoYXJhY3RlcklkKTtcbiAgfVxuXG4gIG9uRmluZENoYXJhY3RlckZhaWwocGF5bG9hZCkge1xuICAgIHBheWxvYWQuc2VhcmNoRm9ybS5jbGFzc0xpc3QuYWRkKCdzaGFrZScpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgcGF5bG9hZC5zZWFyY2hGb3JtLmNsYXNzTGlzdC5yZW1vdmUoJ3NoYWtlJyk7XG4gICAgfSwgMTAwMCk7XG4gIH1cblxuICBvblVwZGF0ZU9ubGluZVVzZXJzKGRhdGEpIHtcbiAgICB0aGlzLm9ubGluZVVzZXJzID0gZGF0YS5vbmxpbmVVc2VycztcbiAgfVxuXG4gIG9uVXBkYXRlQWpheEFuaW1hdGlvbihjbGFzc05hbWUpIHtcbiAgICB0aGlzLmFqYXhBbmltYXRpb25DbGFzcyA9IGNsYXNzTmFtZTsgLy9mYWRlaW4gb3IgZmFkZW91dFxuICB9XG5cbiAgb25VcGRhdGVTZWFyY2hRdWVyeShldmVudCkge1xuICAgIHRoaXMuc2VhcmNoUXVlcnkgPSBldmVudC50YXJnZXQudmFsdWU7XG4gIH1cblxuICBvbkdldENoYXJhY3RlckNvdW50U3VjY2VzcyhkYXRhKSB7XG4gICAgdGhpcy50b3RhbENoYXJhY3RlcnMgPSBkYXRhLmNvdW50O1xuICB9XG5cbiAgb25HZXRDaGFyYWN0ZXJDb3VudEZhaWwoanFYaHIpIHtcbiAgICB0b2FzdHIuZXJyb3IoanFYaHIucmVzcG9uc2VKU09OLm1lc3NhZ2UpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVTdG9yZShOYXZiYXJTdG9yZSk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuaW1wb3J0IFByb2plY3RBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvUHJvamVjdEFjdGlvbnMnO1xuXG5cbmNsYXNzIFByb2plY3RTdG9yZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuYmluZEFjdGlvbnMoUHJvamVjdEFjdGlvbnMpO1xuICAgIH1cblxuICAgIG9uR2V0RGVmYXVsdE1lc3NhZ2UoKSB7XG5cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVTdG9yZShQcm9qZWN0U3RvcmUpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0J1xuaW1wb3J0IFJlc291cmNlQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL1Jlc291cmNlQWN0aW9ucydcblxuY2xhc3MgUmVzb3VyY2VTdG9yZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuYmluZEFjdGlvbnMoUmVzb3VyY2VBY3Rpb25zKTtcbiAgICAgICAgdGhpcy5yZXNvdXJjZSA9IFtdO1xuICAgIH1cblxuICAgIG9uR2V0UmVzb3VyY2UoKSB7XG4gICAgICAgIHRoaXMucmVzb3VyY2UucHVzaCgncmVzb3VyY2UnKTtcbiAgICB9XG5cbiAgICBvbkdldFJlc291cmNlU3VjY2VzcygpIHtcblxuICAgIH1cblxuICAgIG9uR2V0UmVzb3VyY2VGYWlsKCkge1xuXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlU3RvcmUoUmVzb3VyY2VTdG9yZSk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnXG5pbXBvcnQgU2VydmljZUFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9TZXJ2aWNlQWN0aW9ucydcblxuY2xhc3MgU2VydmljZVN0b3JlIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5iaW5kQWN0aW9ucyhTZXJ2aWNlQWN0aW9ucyk7XG5cdFx0dGhpcy5tZXNzYWdlID0gJyc7XG5cdFx0dGhpcy5zZXJ2aWNlcyA9IFt7XG5cdFx0XHR0eXBlOiAnV0VC5pyN5YqhJyxcblx0XHRcdGNvbnRlbnQ6IFt7XG5cdFx0XHRcdG5hbWU6ICfmnKznq5knLFxuXHRcdFx0XHR1cmw6ICdodHRwOi8vMTkyLjE2OC4xMC43MCcsXG5cdFx0XHRcdCdkZXRhaWwnOiAn5pm66IO95YyW5L+h5oGv5a6J5YWo5a6e6aqM5bmz5Y+w5LuL57uN572R56uZJ1xuXHRcdFx0fSwge1xuXHRcdFx0XHRuYW1lOiAn6LWE5rqQ5YWx5Lqr572R56uZJyxcblx0XHRcdFx0dXJsOiAnaHR0cDovLzE5Mi4xNjguMTAuMjAwJyxcblx0XHRcdFx0J2RldGFpbCc6ICfotYTmupDlhbHkuqvlubPlj7AnXG5cdFx0XHR9LCB7XG5cdFx0XHRcdG5hbWU6ICfkvJfliJvkupHlubPlj7AnLFxuXHRcdFx0XHR1cmw6ICdodHRwOi8vMTkyLjE2OC4xMC4xMDA6ODA4MCcsXG5cdFx0XHRcdCdkZXRhaWwnOiAn5aSa6KeS6Imy5bel5L2c5rWB5o6n5Yi25bmz5Y+wJuiZmuaLn+i1hOa6kOWFseS6q+WSjOeuoeeQhuW5s+WPsCdcblx0XHRcdH0sIHtcblx0XHRcdFx0bmFtZTogJ+i1hOa6kOWFseS6q+e9keermS1hcGFjaGUxJyxcblx0XHRcdFx0dXJsOiAnaHR0cDovLzE5Mi4xNjguMTAuMjAzJyxcblx0XHRcdFx0J2RldGFpbCc6ICfotYTmupDlhbHkuqvlubPlj7DmnI3liqHlmajkuIAnXG5cdFx0XHR9LCB7XG5cdFx0XHRcdG5hbWU6ICfotYTmupDlhbHkuqvnvZHnq5ktYXBhY2hlMicsXG5cdFx0XHRcdHVybDogJ2h0dHA6Ly8xOTIuMTY4LjEwLjIwNCcsXG5cdFx0XHRcdCdkZXRhaWwnOiAn6LWE5rqQ5YWx5Lqr5bmz5Y+w5pyN5Yqh5Zmo5LqMJ1xuXHRcdFx0fSwge1xuXHRcdFx0XHRuYW1lOiAn6LWE5rqQ5YWx5Lqr5bmz5Y+wLXRvbWNhdDEnLFxuXHRcdFx0XHR1cmw6ICdodHRwOi8vMTkyLjE2OC4xMC4xMDM6ODA4MCcsXG5cdFx0XHRcdCdkZXRhaWwnOiAn6YeN5Yib5LqR5bmz5Y+w5pyN5Yqh5Zmo5LiAJ1xuXHRcdFx0fSwge1xuXHRcdFx0XHRuYW1lOiAn6LWE5rqQ5YWx5Lqr5bmz5Y+wLXRvbWNhdDInLFxuXHRcdFx0XHR1cmw6ICdodHRwOi8vMTkyLjE2OC4xMC4xMDQ6ODA4MCcsXG5cdFx0XHRcdCdkZXRhaWwnOiAn6YeN5Yib5LqR5bmz5Y+w5pyN5Yqh5Zmo5LqMJ1xuXHRcdFx0fV1cblx0XHR9LCB7XG5cdFx0XHR0eXBlOiAn5pWw5o2u5bqT5pyN5YqhJyxcblx0XHRcdGNvbnRlbnQ6IFt7XG5cdFx0XHRcdG5hbWU6ICdNeXNxbCcsXG5cdFx0XHRcdHVybDogJy9zZXJ2aWNlcy9kZXRhaWwvbXlzcWwnLFxuXHRcdFx0XHQnZGV0YWlsJzogJ215c3Fs5pWw5o2u5bqT5pyN5YqhJyxcblx0XHRcdFx0YXBwZW5kaXg6IHtcblx0XHRcdFx0XHR1cmw6ICcxOTIuMTY4LjEwLjIwNScsXG5cdFx0XHRcdFx0cG9ydDogJzMzMDYnLFxuXHRcdFx0XHRcdHVzZXJuYW1lOiAncm9vdCcsXG5cdFx0XHRcdFx0cGFzc3dvcmQ6ICfogZTns7vnrqHnkIblkZgnLFxuXHRcdFx0XHRcdGRlczogJ+eZu+W9leaWueW8j++8jOS9v+eUqG15c3Fs5a6i5oi356uv6L+c56iL6ZO+5o6l77yMbmF2Y2F0562J562J44CCJ1xuXHRcdFx0XHR9XG5cdFx0XHR9LCB7XG5cdFx0XHRcdG5hbWU6ICdNb25nb0RCJyxcblx0XHRcdFx0dXJsOiAnL3NlcnZpY2VzL2RldGFpbC9tb25nb2RiJyxcblx0XHRcdFx0J2RldGFpbCc6ICdtb25nb2Ri5pWw5o2u5bqT5pyN5YqhJyxcblx0XHRcdFx0YXBwZW5kaXg6IHtcblx0XHRcdFx0XHR1cmw6ICcxOTIuMTY4LjEwLjEwNScsXG5cdFx0XHRcdFx0cG9ydDogJzYwMDAwJyxcblx0XHRcdFx0XHR1c2VybmFtZTogJ3Jvb3QnLFxuXHRcdFx0XHRcdHBhc3N3b3JkOiAn6IGU57O7566h55CG5ZGYJyxcblx0XHRcdFx0XHRkZXM6ICfnmbvlvZXmlrnlvI/vvIzkvb/nlKhtb25nb+WuouaIt+err+i/nOeoi+mTvuaOpe+8jOWmgnJvYm90562J562J44CCJ1xuXHRcdFx0XHR9XG5cdFx0XHR9LCB7XG5cdFx0XHRcdG5hbWU6ICdHcmlkRlMnLFxuXHRcdFx0XHR1cmw6ICcvc2VydmljZXMvZGV0YWlsL2dyaWRmcycsXG5cdFx0XHRcdCdkZXRhaWwnOiAnR3JpZEZT5paH5Lu257O757ufJyxcblx0XHRcdFx0YXBwZW5kaXg6IHtcblx0XHRcdFx0XHR1cmw6ICcxOTIuMTY4LjEwLjEwNicsXG5cdFx0XHRcdFx0cG9ydDogJzYwMDAwJyxcblx0XHRcdFx0XHR1c2VybmFtZTogJ3Jvb3QnLFxuXHRcdFx0XHRcdHBhc3N3b3JkOiAn6IGU57O7566h55CG5ZGYJyxcblx0XHRcdFx0XHRkZXM6ICfnmbvlvZXmlrnlvI/vvIzkvb/nlKhtb25nb2Ri5a6i5oi356uv6L+c56iL6ZO+5o6l77yMcm9ib3TnrYnnrYnjgIInXG5cdFx0XHRcdH1cblx0XHRcdH1dXG5cdFx0fSwge1xuXHRcdFx0dHlwZTogJ+WtmOWCqOacjeWKoScsXG5cdFx0XHRjb250ZW50OiBbe1xuXHRcdFx0XHRuYW1lOiAn6LWE5rqQ5YWx5Lqr572R56uZ572R57uc5paH5Lu257O757ufJyxcblx0XHRcdFx0dXJsOiAnL3NlcnZpY2VzL2RldGFpbC9ORlMnLFxuXHRcdFx0XHQnZGV0YWlsJzogJ+i1hOa6kOWFseS6q+e9keermee9kee7nOaWh+S7tuezu+e7nycsXG5cdFx0XHRcdGFwcGVuZGl4OiB7XG5cdFx0XHRcdFx0dXJsOiAnMTkyLjE2OC4xMC4yMDYnLFxuXHRcdFx0XHRcdHBvcnQ6ICcyMicsXG5cdFx0XHRcdFx0dXNlcm5hbWU6ICdyb290Jyxcblx0XHRcdFx0XHRwYXNzd29yZDogJ+iBlOezu+euoeeQhuWRmCcsXG5cdFx0XHRcdFx0ZGVzOiAn6LWE5rqQ5YWx5Lqr572R56uZ572R57uc5paH5Lu257O757ufLFNTSOi/nOeoi+eZu+mZhidcblx0XHRcdFx0fVxuXHRcdFx0fSwge1xuXHRcdFx0XHRuYW1lOiAnUU5BUOWtmOWCqOeusScsXG5cdFx0XHRcdHVybDogJ2h0dHA6Ly8xOTIuMTY4LjEwLjEzOScsXG5cdFx0XHRcdCdkZXRhaWwnOiAnUU5BUOWtmOWCqOeuse+8jOS6keWtmOWCqOezu+e7n+aWh+S7tuS4iuS8oOS4i+i9ve+8jOWkh+S7veWIhuS6q+etieWKn+iDvSdcblx0XHRcdH0sIHtcblx0XHRcdFx0bmFtZTogJ0ZUUOS7juacjeWKoeWZqCcsXG5cdFx0XHRcdHVybDogJ2Z0cDovLzE5Mi4xNjguMTAuODEnLFxuXHRcdFx0XHQnZGV0YWlsJzogJ+aWh+S7tuS4i+i9veacjeWKoeWZqO+8jOS4i+i9veaWh+S7tu+8jOW3peWFt++8jOWbvueJh++8jOinhumikeetieWKn+iDvSdcblx0XHRcdH0sIHtcblx0XHRcdFx0bmFtZTogJ0dJVExBQuacjeWKoeWZqCcsXG5cdFx0XHRcdHVybDogJ2h0dHA6Ly8xOTIuMTY4LjEwLjgwJyxcblx0XHRcdFx0J2RldGFpbCc6ICdHaXRMYWLku6PnoIHmiZjnrqHmnI3liqHlmajvvIzku6PnoIHmj5DkuqTvvIzkuIvovb3vvIzniYjmnKzmjqfliLbvvIzlm6LpmJ/lkIjkvZznrYnlip/og70nXG5cdFx0XHR9LCB7XG5cdFx0XHRcdG5hbWU6ICfml6Xlv5fnm5HmjqcnLFxuXHRcdFx0XHR1cmw6ICdodHRwOi8vMTkyLjE2OC4xMC44MicsXG5cdFx0XHRcdCdkZXRhaWwnOiAn5pel5b+X55uR5o6n5pyN5Yqh5Zmo77yM5o+Q5L6b5pel5b+X55uR5o6n77yM5pWw5o2u6YeH6ZuG77yM5oCn6IO95qOA5rWL562J5Yqf6IO9J1xuXHRcdFx0fV1cblx0XHR9LCB7XG5cdFx0XHR0eXBlOiAn5a6J5YWo55uR5o6n5pyN5YqhJyxcblx0XHRcdGNvbnRlbnQ6IFt7XG5cdFx0XHRcdG5hbWU6ICflhaXkvrXmo4DmtYvns7vnu59TTk9SVCcsXG5cdFx0XHRcdHVybDogJy9zZXJ2aWNlcy9kZXRhaWwvc25vcnQnLFxuXHRcdFx0XHQnZGV0YWlsJzogJ+WFpeS+teajgOa1i+ezu+e7n3Nub3J0Jyxcblx0XHRcdFx0YXBwZW5kaXg6IHtcblx0XHRcdFx0XHR1cmw6ICcxOTIuMTY4LjEwLjkwJyxcblx0XHRcdFx0XHRwb3J0OiAnMjInLFxuXHRcdFx0XHRcdHVzZXJuYW1lOiAncm9vdCcsXG5cdFx0XHRcdFx0cGFzc3dvcmQ6ICfogZTns7vnrqHnkIblkZgnLFxuXHRcdFx0XHRcdGRlczogJ+WFpeS+teajgOa1i+ezu+e7n++8jCBTU0jov5znqIvnmbvlvZUnXG5cdFx0XHRcdH1cblx0XHRcdH0sIHtcblx0XHRcdFx0bmFtZTogJ+a8j+a0nuaJq+aPj05FU1NVUycsXG5cdFx0XHRcdHVybDogJ2h0dHBzOi8vMTkyLjE2OC4xMC45MTo4ODM0Jyxcblx0XHRcdFx0J2RldGFpbCc6ICfmvI/mtJ7miavmj4/ns7vnu5/vvIzmiavmj4/ns7vnu5/mvI/mtJ7vvIwnXG5cdFx0XHR9LCB7XG5cdFx0XHRcdG5hbWU6ICfmtYHph4/mipPlj5blt6XlhbdUQ1BEVU1QJyxcblx0XHRcdFx0dXJsOiAnL3NlcnZpY2VzL2RldGFpbC90Y3BkdW1wJyxcblx0XHRcdFx0J2RldGFpbCc6ICfmipPlj5bnvZHnu5zpk77mjqXmtYHph4/vvIzliIbmnpDmtYHph4/nibnlvoEnLFxuXHRcdFx0XHRhcHBlbmRpeDoge1xuXHRcdFx0XHRcdHVybDogJzE5Mi4xNjguMTAuNjAnLFxuXHRcdFx0XHRcdHBvcnQ6ICcyMicsXG5cdFx0XHRcdFx0dXNlcm5hbWU6ICdyb290Jyxcblx0XHRcdFx0XHRwYXNzd29yZDogJ+iBlOezu+euoeeQhuWRmCcsXG5cdFx0XHRcdFx0ZGVzOiAn5rWB6YeP5oqT5Y+W5bel5YW3VENQRFVNUO+8jCDmj5DkvpvnvZHnu5zpk77mjqXmtYHph4/mipPlj5blip/og73vvIzph4fpm4bnvZHnu5zmlLvlh7vmlbDmja4nXG5cdFx0XHRcdH1cblx0XHRcdH0sIHtcblx0XHRcdFx0bmFtZTogJ+aAp+iDveebkeaOp05BR0lPUycsXG5cdFx0XHRcdHVybDogJ2h0dHA6Ly8xOTIuMTY4LjEwLjYzJyxcblx0XHRcdFx0J2RldGFpbCc6ICfmgKfog73nm5HmjqdOQUdJT1PvvIznm5Hmjqfns7vnu5/mgKfog73vvIzor4TkvLDns7vnu5/nirbmgIEnXG5cdFx0XHR9XVxuXHRcdH0sIHtcblx0XHRcdHR5cGU6ICfns7vnu5/nrqHnkIbmnI3liqEnLFxuXHRcdFx0Y29udGVudDogW3tcblx0XHRcdFx0bmFtZTogJ+iZmuaLn+WMlueuoeeQhkZ1bnNpb25Db21wdXRlJyxcblx0XHRcdFx0dXJsOiAnaHR0cDovLzE5Mi4xNjguMTAuNTEnLFxuXHRcdFx0XHQnZGV0YWlsJzogJ+iZmuaLn+WMlueuoeeQhkZ1bnNpb25Db21wdXRl77yM566h55CG5YiG6YWN6Jma5ouf6LWE5rqQJ1xuXHRcdFx0fSwge1xuXHRcdFx0XHRuYW1lOiAn56Gs5Lu25pyN5Yqh5ZmoSUJNJyxcblx0XHRcdFx0dXJsOiAnL3NlcnZpY2VzL2RldGFpbC9pYm0nLFxuXHRcdFx0XHQnZGV0YWlsJzogJ+ehrOS7tuacjeWKoeWZqElETSzmj5DkvptVU0VS5Z+f6Jma5ouf5py65YiG5Y+R5pyN5Yqh44CCJyxcblx0XHRcdFx0YXBwZW5kaXg6IHtcblx0XHRcdFx0XHR1cmw6ICcxOTIuMTY4LjIwLjInLFxuXHRcdFx0XHRcdHBvcnQ6ICcyMicsXG5cdFx0XHRcdFx0dXNlcm5hbWU6ICdyb290Jyxcblx0XHRcdFx0XHRwYXNzd29yZDogJ+iBlOezu+euoeeQhuWRmCcsXG5cdFx0XHRcdFx0ZGVzOiAn56Gs5Lu25pyN5Yqh5ZmoSURNLOaPkOS+m1VTRVLln5/omZrmi5/mnLrliIblj5HmnI3liqEsIFNTSOi/nOeoi+eZu+W9lSdcblx0XHRcdFx0fVxuXHRcdFx0fSwge1xuXHRcdFx0XHRuYW1lOiAn56Gs5Lu25pyN5Yqh5ZmoSFAnLFxuXHRcdFx0XHR1cmw6ICcvc2VydmljZXMvZGV0YWlsL2hwJyxcblx0XHRcdFx0J2RldGFpbCc6ICfnoazku7bmnI3liqHlmahIUCzmj5DkvptETVrln5/omZrmi5/mnLrliIblj5HmnI3liqHjgIInLFxuXHRcdFx0XHRhcHBlbmRpeDoge1xuXHRcdFx0XHRcdHVybDogJzE5Mi4xNjguMTAuMicsXG5cdFx0XHRcdFx0cG9ydDogJzIyJyxcblx0XHRcdFx0XHR1c2VybmFtZTogJ3Jvb3QnLFxuXHRcdFx0XHRcdHBhc3N3b3JkOiAn6IGU57O7566h55CG5ZGYJyxcblx0XHRcdFx0XHRkZXM6ICfnoazku7bmnI3liqHlmahIUCzmj5DkvptETVrln5/omZrmi5/mnLrliIblj5HmnI3liqEsIFNTSOi/nOeoi+eZu+W9lSdcblx0XHRcdFx0fVxuXHRcdFx0fSwge1xuXHRcdFx0XHRuYW1lOiAn5Y+w5byP5pyN5Yqh5ZmoJyxcblx0XHRcdFx0dXJsOiAnL3NlcnZpY2VzL2RldGFpbC9kZXNrdG9wJyxcblx0XHRcdFx0J2RldGFpbCc6ICfmgIHlir/mnI3liqHlmags5o+Q5L6b5pWw5o2u5YiG5p6Q5Z+f6Jma5ouf5py65YiG5Y+R5pyN5Yqh44CCJyxcblx0XHRcdFx0YXBwZW5kaXg6IHtcblx0XHRcdFx0XHR1cmw6ICcxOTIuMTY4LjEuMicsXG5cdFx0XHRcdFx0cG9ydDogJzIyJyxcblx0XHRcdFx0XHR1c2VybmFtZTogJ3Jvb3QnLFxuXHRcdFx0XHRcdHBhc3N3b3JkOiAn6IGU57O7566h55CG5ZGYJyxcblx0XHRcdFx0XHRkZXM6ICflj7DlvI/mnI3liqHlmags5o+Q5L6b5pWw5o2u5YiG5p6Q5Z+f6Jma5ouf5py65YiG5Y+R5pyN5YqhLCBTU0jov5znqIvnmbvlvZUnXG5cdFx0XHRcdH1cblx0XHRcdH1dXG5cdFx0fV07XG5cdH1cblxuXHRvblNldE1lc3NhZ2VTdWNjZXNzKHBheWxvYWQpIHtcblx0XHR0aGlzLm1lc3NhZ2UgPSBwYXlsb2FkLm1lc3NhZ2U7XG5cdH1cblxuXHRvblNldE1lc3NhZ2VGYWlsKGVycm9yTWVzc2FnZSkge1xuXHRcdHRvYXN0ci5lcnJvcihlcnJvck1lc3NhZ2UpO1xuXHR9XG5cblx0b25HZXRNZXNzYWdlU3VjY2VzcyhwYXlsb2FkKSB7XG5cdFx0dGhpcy5zZXJ2aWNlcyA9IHBheWxvYWRcblx0fVxuXG5cdG9uR2V0TWVzc2FnZUZhaWwoZXJyb3JNZXNzYWdlKSB7XG5cdFx0dG9hc3RyLmVycm9yKGVycm9yTWVzc2FnZSk7XG5cdH1cblxuXHRvbkdldERlZmF1bHRNZXNzYWdlKCkge1xuXHRcdHRoaXMubWVzc2FnZSA9ICcnXG5cdH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlU3RvcmUoU2VydmljZVN0b3JlKTsiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5pbXBvcnQgVGVhbUFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9UZWFtQWN0aW9ucyc7XG5cbmNsYXNzIFRlYW1TdG9yZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuYmluZEFjdGlvbnMoVGVhbUFjdGlvbnMpO1xuICAgIH1cblxuICAgIG9uR2V0RGVmYXVsdE1lc3NhZ2UoKSB7XG5cbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZVN0b3JlKFRlYW1TdG9yZSk7IiwiXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY2hhaW4oKXtcclxuICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aFxyXG4gIHZhciBhcmdzID0gW107XHJcblxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspXHJcbiAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldXHJcblxyXG4gIGFyZ3MgPSBhcmdzLmZpbHRlcihmdW5jdGlvbihmbil7IHJldHVybiBmbiAhPSBudWxsIH0pXHJcblxyXG4gIGlmIChhcmdzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHVuZGVmaW5lZFxyXG4gIGlmIChhcmdzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIGFyZ3NbMF1cclxuXHJcbiAgcmV0dXJuIGFyZ3MucmVkdWNlKGZ1bmN0aW9uKGN1cnJlbnQsIG5leHQpe1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGNoYWluZWRGdW5jdGlvbigpIHtcclxuICAgICAgY3VycmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG4gICAgICBuZXh0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbiAgICB9O1xyXG4gIH0pXHJcbn1cclxuIiwidmFyIHBTbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbnZhciBvYmplY3RLZXlzID0gcmVxdWlyZSgnLi9saWIva2V5cy5qcycpO1xudmFyIGlzQXJndW1lbnRzID0gcmVxdWlyZSgnLi9saWIvaXNfYXJndW1lbnRzLmpzJyk7XG5cbnZhciBkZWVwRXF1YWwgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhY3R1YWwsIGV4cGVjdGVkLCBvcHRzKSB7XG4gIGlmICghb3B0cykgb3B0cyA9IHt9O1xuICAvLyA3LjEuIEFsbCBpZGVudGljYWwgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBhcyBkZXRlcm1pbmVkIGJ5ID09PS5cbiAgaWYgKGFjdHVhbCA9PT0gZXhwZWN0ZWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcblxuICB9IGVsc2UgaWYgKGFjdHVhbCBpbnN0YW5jZW9mIERhdGUgJiYgZXhwZWN0ZWQgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgcmV0dXJuIGFjdHVhbC5nZXRUaW1lKCkgPT09IGV4cGVjdGVkLmdldFRpbWUoKTtcblxuICAvLyA3LjMuIE90aGVyIHBhaXJzIHRoYXQgZG8gbm90IGJvdGggcGFzcyB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcsXG4gIC8vIGVxdWl2YWxlbmNlIGlzIGRldGVybWluZWQgYnkgPT0uXG4gIH0gZWxzZSBpZiAoIWFjdHVhbCB8fCAhZXhwZWN0ZWQgfHwgdHlwZW9mIGFjdHVhbCAhPSAnb2JqZWN0JyAmJiB0eXBlb2YgZXhwZWN0ZWQgIT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gb3B0cy5zdHJpY3QgPyBhY3R1YWwgPT09IGV4cGVjdGVkIDogYWN0dWFsID09IGV4cGVjdGVkO1xuXG4gIC8vIDcuNC4gRm9yIGFsbCBvdGhlciBPYmplY3QgcGFpcnMsIGluY2x1ZGluZyBBcnJheSBvYmplY3RzLCBlcXVpdmFsZW5jZSBpc1xuICAvLyBkZXRlcm1pbmVkIGJ5IGhhdmluZyB0aGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgcHJvcGVydGllcyAoYXMgdmVyaWZpZWRcbiAgLy8gd2l0aCBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwpLCB0aGUgc2FtZSBzZXQgb2Yga2V5c1xuICAvLyAoYWx0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIG9yZGVyKSwgZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5XG4gIC8vIGNvcnJlc3BvbmRpbmcga2V5LCBhbmQgYW4gaWRlbnRpY2FsICdwcm90b3R5cGUnIHByb3BlcnR5LiBOb3RlOiB0aGlzXG4gIC8vIGFjY291bnRzIGZvciBib3RoIG5hbWVkIGFuZCBpbmRleGVkIHByb3BlcnRpZXMgb24gQXJyYXlzLlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBvYmpFcXVpdihhY3R1YWwsIGV4cGVjdGVkLCBvcHRzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZE9yTnVsbCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZDtcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIgKHgpIHtcbiAgaWYgKCF4IHx8IHR5cGVvZiB4ICE9PSAnb2JqZWN0JyB8fCB0eXBlb2YgeC5sZW5ndGggIT09ICdudW1iZXInKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0eXBlb2YgeC5jb3B5ICE9PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiB4LnNsaWNlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmICh4Lmxlbmd0aCA+IDAgJiYgdHlwZW9mIHhbMF0gIT09ICdudW1iZXInKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBvYmpFcXVpdihhLCBiLCBvcHRzKSB7XG4gIHZhciBpLCBrZXk7XG4gIGlmIChpc1VuZGVmaW5lZE9yTnVsbChhKSB8fCBpc1VuZGVmaW5lZE9yTnVsbChiKSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vIGFuIGlkZW50aWNhbCAncHJvdG90eXBlJyBwcm9wZXJ0eS5cbiAgaWYgKGEucHJvdG90eXBlICE9PSBiLnByb3RvdHlwZSkgcmV0dXJuIGZhbHNlO1xuICAvL35+fkkndmUgbWFuYWdlZCB0byBicmVhayBPYmplY3Qua2V5cyB0aHJvdWdoIHNjcmV3eSBhcmd1bWVudHMgcGFzc2luZy5cbiAgLy8gICBDb252ZXJ0aW5nIHRvIGFycmF5IHNvbHZlcyB0aGUgcHJvYmxlbS5cbiAgaWYgKGlzQXJndW1lbnRzKGEpKSB7XG4gICAgaWYgKCFpc0FyZ3VtZW50cyhiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBhID0gcFNsaWNlLmNhbGwoYSk7XG4gICAgYiA9IHBTbGljZS5jYWxsKGIpO1xuICAgIHJldHVybiBkZWVwRXF1YWwoYSwgYiwgb3B0cyk7XG4gIH1cbiAgaWYgKGlzQnVmZmVyKGEpKSB7XG4gICAgaWYgKCFpc0J1ZmZlcihiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChhW2ldICE9PSBiW2ldKSByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHRyeSB7XG4gICAgdmFyIGthID0gb2JqZWN0S2V5cyhhKSxcbiAgICAgICAga2IgPSBvYmplY3RLZXlzKGIpO1xuICB9IGNhdGNoIChlKSB7Ly9oYXBwZW5zIHdoZW4gb25lIGlzIGEgc3RyaW5nIGxpdGVyYWwgYW5kIHRoZSBvdGhlciBpc24ndFxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBoYXZpbmcgdGhlIHNhbWUgbnVtYmVyIG9mIG93bmVkIHByb3BlcnRpZXMgKGtleXMgaW5jb3Jwb3JhdGVzXG4gIC8vIGhhc093blByb3BlcnR5KVxuICBpZiAoa2EubGVuZ3RoICE9IGtiLmxlbmd0aClcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vdGhlIHNhbWUgc2V0IG9mIGtleXMgKGFsdGhvdWdoIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBvcmRlciksXG4gIGthLnNvcnQoKTtcbiAga2Iuc29ydCgpO1xuICAvL35+fmNoZWFwIGtleSB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgaWYgKGthW2ldICE9IGtiW2ldKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5IGNvcnJlc3BvbmRpbmcga2V5LCBhbmRcbiAgLy9+fn5wb3NzaWJseSBleHBlbnNpdmUgZGVlcCB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAga2V5ID0ga2FbaV07XG4gICAgaWYgKCFkZWVwRXF1YWwoYVtrZXldLCBiW2tleV0sIG9wdHMpKSByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHR5cGVvZiBhID09PSB0eXBlb2YgYjtcbn1cbiIsInZhciBzdXBwb3J0c0FyZ3VtZW50c0NsYXNzID0gKGZ1bmN0aW9uKCl7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJndW1lbnRzKVxufSkoKSA9PSAnW29iamVjdCBBcmd1bWVudHNdJztcblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gc3VwcG9ydHNBcmd1bWVudHNDbGFzcyA/IHN1cHBvcnRlZCA6IHVuc3VwcG9ydGVkO1xuXG5leHBvcnRzLnN1cHBvcnRlZCA9IHN1cHBvcnRlZDtcbmZ1bmN0aW9uIHN1cHBvcnRlZChvYmplY3QpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmplY3QpID09ICdbb2JqZWN0IEFyZ3VtZW50c10nO1xufTtcblxuZXhwb3J0cy51bnN1cHBvcnRlZCA9IHVuc3VwcG9ydGVkO1xuZnVuY3Rpb24gdW5zdXBwb3J0ZWQob2JqZWN0KXtcbiAgcmV0dXJuIG9iamVjdCAmJlxuICAgIHR5cGVvZiBvYmplY3QgPT0gJ29iamVjdCcgJiZcbiAgICB0eXBlb2Ygb2JqZWN0Lmxlbmd0aCA9PSAnbnVtYmVyJyAmJlxuICAgIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsICdjYWxsZWUnKSAmJlxuICAgICFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwob2JqZWN0LCAnY2FsbGVlJykgfHxcbiAgICBmYWxzZTtcbn07XG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2YgT2JqZWN0LmtleXMgPT09ICdmdW5jdGlvbidcbiAgPyBPYmplY3Qua2V5cyA6IHNoaW07XG5cbmV4cG9ydHMuc2hpbSA9IHNoaW07XG5mdW5jdGlvbiBzaGltIChvYmopIHtcbiAgdmFyIGtleXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG9iaikga2V5cy5wdXNoKGtleSk7XG4gIHJldHVybiBrZXlzO1xufVxuIiwiLyoqXG4gKiBJbmRpY2F0ZXMgdGhhdCBuYXZpZ2F0aW9uIHdhcyBjYXVzZWQgYnkgYSBjYWxsIHRvIGhpc3RvcnkucHVzaC5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIFBVU0ggPSAnUFVTSCc7XG5cbmV4cG9ydHMuUFVTSCA9IFBVU0g7XG4vKipcbiAqIEluZGljYXRlcyB0aGF0IG5hdmlnYXRpb24gd2FzIGNhdXNlZCBieSBhIGNhbGwgdG8gaGlzdG9yeS5yZXBsYWNlLlxuICovXG52YXIgUkVQTEFDRSA9ICdSRVBMQUNFJztcblxuZXhwb3J0cy5SRVBMQUNFID0gUkVQTEFDRTtcbi8qKlxuICogSW5kaWNhdGVzIHRoYXQgbmF2aWdhdGlvbiB3YXMgY2F1c2VkIGJ5IHNvbWUgb3RoZXIgYWN0aW9uIHN1Y2hcbiAqIGFzIHVzaW5nIGEgYnJvd3NlcidzIGJhY2svZm9yd2FyZCBidXR0b25zIGFuZC9vciBtYW51YWxseSBtYW5pcHVsYXRpbmdcbiAqIHRoZSBVUkwgaW4gYSBicm93c2VyJ3MgbG9jYXRpb24gYmFyLiBUaGlzIGlzIHRoZSBkZWZhdWx0LlxuICpcbiAqIFNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2luZG93RXZlbnRIYW5kbGVycy9vbnBvcHN0YXRlXG4gKiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqL1xudmFyIFBPUCA9ICdQT1AnO1xuXG5leHBvcnRzLlBPUCA9IFBPUDtcbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IHtcbiAgUFVTSDogUFVTSCxcbiAgUkVQTEFDRTogUkVQTEFDRSxcbiAgUE9QOiBQT1Bcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmxvb3BBc3luYyA9IGxvb3BBc3luYztcblxuZnVuY3Rpb24gbG9vcEFzeW5jKHR1cm5zLCB3b3JrLCBjYWxsYmFjaykge1xuICB2YXIgY3VycmVudFR1cm4gPSAwO1xuICB2YXIgaXNEb25lID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gZG9uZSgpIHtcbiAgICBpc0RvbmUgPSB0cnVlO1xuICAgIGNhbGxiYWNrLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICBmdW5jdGlvbiBuZXh0KCkge1xuICAgIGlmIChpc0RvbmUpIHJldHVybjtcblxuICAgIGlmIChjdXJyZW50VHVybiA8IHR1cm5zKSB7XG4gICAgICB3b3JrLmNhbGwodGhpcywgY3VycmVudFR1cm4rKywgbmV4dCwgZG9uZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRvbmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG4gIH1cblxuICBuZXh0KCk7XG59IiwiLyplc2xpbnQtZGlzYWJsZSBuby1lbXB0eSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5zYXZlU3RhdGUgPSBzYXZlU3RhdGU7XG5leHBvcnRzLnJlYWRTdGF0ZSA9IHJlYWRTdGF0ZTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCd3YXJuaW5nJyk7XG5cbnZhciBfd2FybmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93YXJuaW5nKTtcblxudmFyIEtleVByZWZpeCA9ICdAQEhpc3RvcnkvJztcbnZhciBRdW90YUV4Y2VlZGVkRXJyb3IgPSAnUXVvdGFFeGNlZWRlZEVycm9yJztcbnZhciBTZWN1cml0eUVycm9yID0gJ1NlY3VyaXR5RXJyb3InO1xuXG5mdW5jdGlvbiBjcmVhdGVLZXkoa2V5KSB7XG4gIHJldHVybiBLZXlQcmVmaXggKyBrZXk7XG59XG5cbmZ1bmN0aW9uIHNhdmVTdGF0ZShrZXksIHN0YXRlKSB7XG4gIHRyeSB7XG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnNldEl0ZW0oY3JlYXRlS2V5KGtleSksIEpTT04uc3RyaW5naWZ5KHN0YXRlKSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKGVycm9yLm5hbWUgPT09IFNlY3VyaXR5RXJyb3IpIHtcbiAgICAgIC8vIEJsb2NraW5nIGNvb2tpZXMgaW4gQ2hyb21lL0ZpcmVmb3gvU2FmYXJpIHRocm93cyBTZWN1cml0eUVycm9yIG9uIGFueVxuICAgICAgLy8gYXR0ZW1wdCB0byBhY2Nlc3Mgd2luZG93LnNlc3Npb25TdG9yYWdlLlxuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IF93YXJuaW5nMlsnZGVmYXVsdCddKGZhbHNlLCAnW2hpc3RvcnldIFVuYWJsZSB0byBzYXZlIHN0YXRlOyBzZXNzaW9uU3RvcmFnZSBpcyBub3QgYXZhaWxhYmxlIGR1ZSB0byBzZWN1cml0eSBzZXR0aW5ncycpIDogdW5kZWZpbmVkO1xuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGVycm9yLm5hbWUgPT09IFF1b3RhRXhjZWVkZWRFcnJvciAmJiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UubGVuZ3RoID09PSAwKSB7XG4gICAgICAvLyBTYWZhcmkgXCJwcml2YXRlIG1vZGVcIiB0aHJvd3MgUXVvdGFFeGNlZWRlZEVycm9yLlxuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IF93YXJuaW5nMlsnZGVmYXVsdCddKGZhbHNlLCAnW2hpc3RvcnldIFVuYWJsZSB0byBzYXZlIHN0YXRlOyBzZXNzaW9uU3RvcmFnZSBpcyBub3QgYXZhaWxhYmxlIGluIFNhZmFyaSBwcml2YXRlIG1vZGUnKSA6IHVuZGVmaW5lZDtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlYWRTdGF0ZShrZXkpIHtcbiAgdmFyIGpzb24gPSB1bmRlZmluZWQ7XG4gIHRyeSB7XG4gICAganNvbiA9IHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGNyZWF0ZUtleShrZXkpKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gU2VjdXJpdHlFcnJvcikge1xuICAgICAgLy8gQmxvY2tpbmcgY29va2llcyBpbiBDaHJvbWUvRmlyZWZveC9TYWZhcmkgdGhyb3dzIFNlY3VyaXR5RXJyb3Igb24gYW55XG4gICAgICAvLyBhdHRlbXB0IHRvIGFjY2VzcyB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuXG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gX3dhcm5pbmcyWydkZWZhdWx0J10oZmFsc2UsICdbaGlzdG9yeV0gVW5hYmxlIHRvIHJlYWQgc3RhdGU7IHNlc3Npb25TdG9yYWdlIGlzIG5vdCBhdmFpbGFibGUgZHVlIHRvIHNlY3VyaXR5IHNldHRpbmdzJykgOiB1bmRlZmluZWQ7XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGlmIChqc29uKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKGpzb24pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBJZ25vcmUgaW52YWxpZCBKU09OLlxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufSIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuYWRkRXZlbnRMaXN0ZW5lciA9IGFkZEV2ZW50TGlzdGVuZXI7XG5leHBvcnRzLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSByZW1vdmVFdmVudExpc3RlbmVyO1xuZXhwb3J0cy5nZXRIYXNoUGF0aCA9IGdldEhhc2hQYXRoO1xuZXhwb3J0cy5yZXBsYWNlSGFzaFBhdGggPSByZXBsYWNlSGFzaFBhdGg7XG5leHBvcnRzLmdldFdpbmRvd1BhdGggPSBnZXRXaW5kb3dQYXRoO1xuZXhwb3J0cy5nbyA9IGdvO1xuZXhwb3J0cy5nZXRVc2VyQ29uZmlybWF0aW9uID0gZ2V0VXNlckNvbmZpcm1hdGlvbjtcbmV4cG9ydHMuc3VwcG9ydHNIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5O1xuZXhwb3J0cy5zdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoO1xuXG5mdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICBpZiAobm9kZS5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpO1xuICB9IGVsc2Uge1xuICAgIG5vZGUuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcihub2RlLCBldmVudCwgbGlzdGVuZXIpIHtcbiAgaWYgKG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcikge1xuICAgIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgfSBlbHNlIHtcbiAgICBub2RlLmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHJldHVybiB3aW5kb3cubG9jYXRpb24uaHJlZi5zcGxpdCgnIycpWzFdIHx8ICcnO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgKyB3aW5kb3cubG9jYXRpb24uc2VhcmNoICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGdldFdpbmRvd1BhdGgoKSB7XG4gIHJldHVybiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgKyB3aW5kb3cubG9jYXRpb24uc2VhcmNoICsgd2luZG93LmxvY2F0aW9uLmhhc2g7XG59XG5cbmZ1bmN0aW9uIGdvKG4pIHtcbiAgaWYgKG4pIHdpbmRvdy5oaXN0b3J5LmdvKG4pO1xufVxuXG5mdW5jdGlvbiBnZXRVc2VyQ29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JhY2t0L3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSBuYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gRklYTUU6IFdvcmsgYXJvdW5kIG91ciBicm93c2VyIGhpc3Rvcnkgbm90IHdvcmtpbmcgY29ycmVjdGx5IG9uIENocm9tZVxuICAvLyBpT1M6IGh0dHBzOi8vZ2l0aHViLmNvbS9yYWNrdC9yZWFjdC1yb3V0ZXIvaXNzdWVzLzI1NjVcbiAgaWYgKHVhLmluZGV4T2YoJ0NyaU9TJykgIT09IC0xKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHZhciB1YSA9IG5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIHJldHVybiB1YS5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufSIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZXhwb3J0cy5jYW5Vc2VET00gPSBjYW5Vc2VET007IiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfaW52YXJpYW50ID0gcmVxdWlyZSgnaW52YXJpYW50Jyk7XG5cbnZhciBfaW52YXJpYW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ludmFyaWFudCk7XG5cbnZhciBfQWN0aW9ucyA9IHJlcXVpcmUoJy4vQWN0aW9ucycpO1xuXG52YXIgX0V4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnLi9FeGVjdXRpb25FbnZpcm9ubWVudCcpO1xuXG52YXIgX0RPTVV0aWxzID0gcmVxdWlyZSgnLi9ET01VdGlscycpO1xuXG52YXIgX0RPTVN0YXRlU3RvcmFnZSA9IHJlcXVpcmUoJy4vRE9NU3RhdGVTdG9yYWdlJyk7XG5cbnZhciBfY3JlYXRlRE9NSGlzdG9yeSA9IHJlcXVpcmUoJy4vY3JlYXRlRE9NSGlzdG9yeScpO1xuXG52YXIgX2NyZWF0ZURPTUhpc3RvcnkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlRE9NSGlzdG9yeSk7XG5cbnZhciBfcGFyc2VQYXRoID0gcmVxdWlyZSgnLi9wYXJzZVBhdGgnKTtcblxudmFyIF9wYXJzZVBhdGgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyc2VQYXRoKTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuZCByZXR1cm5zIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIEhUTUw1J3MgaGlzdG9yeSBBUElcbiAqIChwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudCkgdG8gbWFuYWdlIGhpc3RvcnkuXG4gKiBUaGlzIGlzIHRoZSByZWNvbW1lbmRlZCBtZXRob2Qgb2YgbWFuYWdpbmcgaGlzdG9yeSBpbiBicm93c2VycyBiZWNhdXNlXG4gKiBpdCBwcm92aWRlcyB0aGUgY2xlYW5lc3QgVVJMcy5cbiAqXG4gKiBOb3RlOiBJbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBmdWxsXG4gKiBwYWdlIHJlbG9hZHMgd2lsbCBiZSB1c2VkIHRvIHByZXNlcnZlIFVSTHMuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KCkge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/IHt9IDogYXJndW1lbnRzWzBdO1xuXG4gICFfRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IF9pbnZhcmlhbnQyWydkZWZhdWx0J10oZmFsc2UsICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IF9pbnZhcmlhbnQyWydkZWZhdWx0J10oZmFsc2UpIDogdW5kZWZpbmVkO1xuXG4gIHZhciBmb3JjZVJlZnJlc2ggPSBvcHRpb25zLmZvcmNlUmVmcmVzaDtcblxuICB2YXIgaXNTdXBwb3J0ZWQgPSBfRE9NVXRpbHMuc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciB1c2VSZWZyZXNoID0gIWlzU3VwcG9ydGVkIHx8IGZvcmNlUmVmcmVzaDtcblxuICBmdW5jdGlvbiBnZXRDdXJyZW50TG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgaGlzdG9yeVN0YXRlID0gaGlzdG9yeVN0YXRlIHx8IHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuXG4gICAgdmFyIHBhdGggPSBfRE9NVXRpbHMuZ2V0V2luZG93UGF0aCgpO1xuICAgIHZhciBfaGlzdG9yeVN0YXRlID0gaGlzdG9yeVN0YXRlO1xuICAgIHZhciBrZXkgPSBfaGlzdG9yeVN0YXRlLmtleTtcblxuICAgIHZhciBzdGF0ZSA9IHVuZGVmaW5lZDtcbiAgICBpZiAoa2V5KSB7XG4gICAgICBzdGF0ZSA9IF9ET01TdGF0ZVN0b3JhZ2UucmVhZFN0YXRlKGtleSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXRlID0gbnVsbDtcbiAgICAgIGtleSA9IGhpc3RvcnkuY3JlYXRlS2V5KCk7XG5cbiAgICAgIGlmIChpc1N1cHBvcnRlZCkgd2luZG93Lmhpc3RvcnkucmVwbGFjZVN0YXRlKF9leHRlbmRzKHt9LCBoaXN0b3J5U3RhdGUsIHsga2V5OiBrZXkgfSksIG51bGwsIHBhdGgpO1xuICAgIH1cblxuICAgIHZhciBsb2NhdGlvbiA9IF9wYXJzZVBhdGgyWydkZWZhdWx0J10ocGF0aCk7XG5cbiAgICByZXR1cm4gaGlzdG9yeS5jcmVhdGVMb2NhdGlvbihfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHsgc3RhdGU6IHN0YXRlIH0pLCB1bmRlZmluZWQsIGtleSk7XG4gIH1cblxuICBmdW5jdGlvbiBzdGFydFBvcFN0YXRlTGlzdGVuZXIoX3JlZikge1xuICAgIHZhciB0cmFuc2l0aW9uVG8gPSBfcmVmLnRyYW5zaXRpb25UbztcblxuICAgIGZ1bmN0aW9uIHBvcFN0YXRlTGlzdGVuZXIoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkKSByZXR1cm47IC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG5cbiAgICAgIHRyYW5zaXRpb25UbyhnZXRDdXJyZW50TG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgICB9XG5cbiAgICBfRE9NVXRpbHMuYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csICdwb3BzdGF0ZScsIHBvcFN0YXRlTGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIF9ET01VdGlscy5yZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgJ3BvcHN0YXRlJywgcG9wU3RhdGVMaXN0ZW5lcik7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZpbmlzaFRyYW5zaXRpb24obG9jYXRpb24pIHtcbiAgICB2YXIgYmFzZW5hbWUgPSBsb2NhdGlvbi5iYXNlbmFtZTtcbiAgICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZTtcbiAgICB2YXIgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoO1xuICAgIHZhciBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcbiAgICB2YXIgYWN0aW9uID0gbG9jYXRpb24uYWN0aW9uO1xuICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXk7XG5cbiAgICBpZiAoYWN0aW9uID09PSBfQWN0aW9ucy5QT1ApIHJldHVybjsgLy8gTm90aGluZyB0byBkby5cblxuICAgIF9ET01TdGF0ZVN0b3JhZ2Uuc2F2ZVN0YXRlKGtleSwgc3RhdGUpO1xuXG4gICAgdmFyIHBhdGggPSAoYmFzZW5hbWUgfHwgJycpICsgcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHZhciBoaXN0b3J5U3RhdGUgPSB7XG4gICAgICBrZXk6IGtleVxuICAgIH07XG5cbiAgICBpZiAoYWN0aW9uID09PSBfQWN0aW9ucy5QVVNIKSB7XG4gICAgICBpZiAodXNlUmVmcmVzaCkge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHBhdGg7XG4gICAgICAgIHJldHVybiBmYWxzZTsgLy8gUHJldmVudCBsb2NhdGlvbiB1cGRhdGUuXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZShoaXN0b3J5U3RhdGUsIG51bGwsIHBhdGgpO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJFUExBQ0VcbiAgICAgIGlmICh1c2VSZWZyZXNoKSB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHBhdGgpO1xuICAgICAgICByZXR1cm4gZmFsc2U7IC8vIFByZXZlbnQgbG9jYXRpb24gdXBkYXRlLlxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUoaGlzdG9yeVN0YXRlLCBudWxsLCBwYXRoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0gX2NyZWF0ZURPTUhpc3RvcnkyWydkZWZhdWx0J10oX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICBnZXRDdXJyZW50TG9jYXRpb246IGdldEN1cnJlbnRMb2NhdGlvbixcbiAgICBmaW5pc2hUcmFuc2l0aW9uOiBmaW5pc2hUcmFuc2l0aW9uLFxuICAgIHNhdmVTdGF0ZTogX0RPTVN0YXRlU3RvcmFnZS5zYXZlU3RhdGVcbiAgfSkpO1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMCxcbiAgICAgIHN0b3BQb3BTdGF0ZUxpc3RlbmVyID0gdW5kZWZpbmVkO1xuXG4gIGZ1bmN0aW9uIGxpc3RlbkJlZm9yZShsaXN0ZW5lcikge1xuICAgIGlmICgrK2xpc3RlbmVyQ291bnQgPT09IDEpIHN0b3BQb3BTdGF0ZUxpc3RlbmVyID0gc3RhcnRQb3BTdGF0ZUxpc3RlbmVyKGhpc3RvcnkpO1xuXG4gICAgdmFyIHVubGlzdGVuID0gaGlzdG9yeS5saXN0ZW5CZWZvcmUobGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHVubGlzdGVuKCk7XG5cbiAgICAgIGlmICgtLWxpc3RlbmVyQ291bnQgPT09IDApIHN0b3BQb3BTdGF0ZUxpc3RlbmVyKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIGlmICgrK2xpc3RlbmVyQ291bnQgPT09IDEpIHN0b3BQb3BTdGF0ZUxpc3RlbmVyID0gc3RhcnRQb3BTdGF0ZUxpc3RlbmVyKGhpc3RvcnkpO1xuXG4gICAgdmFyIHVubGlzdGVuID0gaGlzdG9yeS5saXN0ZW4obGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHVubGlzdGVuKCk7XG5cbiAgICAgIGlmICgtLWxpc3RlbmVyQ291bnQgPT09IDApIHN0b3BQb3BTdGF0ZUxpc3RlbmVyKCk7XG4gICAgfTtcbiAgfVxuXG4gIC8vIGRlcHJlY2F0ZWRcbiAgZnVuY3Rpb24gcmVnaXN0ZXJUcmFuc2l0aW9uSG9vayhob29rKSB7XG4gICAgaWYgKCsrbGlzdGVuZXJDb3VudCA9PT0gMSkgc3RvcFBvcFN0YXRlTGlzdGVuZXIgPSBzdGFydFBvcFN0YXRlTGlzdGVuZXIoaGlzdG9yeSk7XG5cbiAgICBoaXN0b3J5LnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2soaG9vayk7XG4gIH1cblxuICAvLyBkZXByZWNhdGVkXG4gIGZ1bmN0aW9uIHVucmVnaXN0ZXJUcmFuc2l0aW9uSG9vayhob29rKSB7XG4gICAgaGlzdG9yeS51bnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2soaG9vayk7XG5cbiAgICBpZiAoLS1saXN0ZW5lckNvdW50ID09PSAwKSBzdG9wUG9wU3RhdGVMaXN0ZW5lcigpO1xuICB9XG5cbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBoaXN0b3J5LCB7XG4gICAgbGlzdGVuQmVmb3JlOiBsaXN0ZW5CZWZvcmUsXG4gICAgbGlzdGVuOiBsaXN0ZW4sXG4gICAgcmVnaXN0ZXJUcmFuc2l0aW9uSG9vazogcmVnaXN0ZXJUcmFuc2l0aW9uSG9vayxcbiAgICB1bnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2s6IHVucmVnaXN0ZXJUcmFuc2l0aW9uSG9va1xuICB9KTtcbn1cblxuZXhwb3J0c1snZGVmYXVsdCddID0gY3JlYXRlQnJvd3Nlckhpc3Rvcnk7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF9pbnZhcmlhbnQgPSByZXF1aXJlKCdpbnZhcmlhbnQnKTtcblxudmFyIF9pbnZhcmlhbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW52YXJpYW50KTtcblxudmFyIF9FeGVjdXRpb25FbnZpcm9ubWVudCA9IHJlcXVpcmUoJy4vRXhlY3V0aW9uRW52aXJvbm1lbnQnKTtcblxudmFyIF9ET01VdGlscyA9IHJlcXVpcmUoJy4vRE9NVXRpbHMnKTtcblxudmFyIF9jcmVhdGVIaXN0b3J5ID0gcmVxdWlyZSgnLi9jcmVhdGVIaXN0b3J5Jyk7XG5cbnZhciBfY3JlYXRlSGlzdG9yeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVIaXN0b3J5KTtcblxuZnVuY3Rpb24gY3JlYXRlRE9NSGlzdG9yeShvcHRpb25zKSB7XG4gIHZhciBoaXN0b3J5ID0gX2NyZWF0ZUhpc3RvcnkyWydkZWZhdWx0J10oX2V4dGVuZHMoe1xuICAgIGdldFVzZXJDb25maXJtYXRpb246IF9ET01VdGlscy5nZXRVc2VyQ29uZmlybWF0aW9uXG4gIH0sIG9wdGlvbnMsIHtcbiAgICBnbzogX0RPTVV0aWxzLmdvXG4gIH0pKTtcblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICAhX0V4ZWN1dGlvbkVudmlyb25tZW50LmNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBfaW52YXJpYW50MlsnZGVmYXVsdCddKGZhbHNlLCAnRE9NIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IF9pbnZhcmlhbnQyWydkZWZhdWx0J10oZmFsc2UpIDogdW5kZWZpbmVkO1xuXG4gICAgcmV0dXJuIGhpc3RvcnkubGlzdGVuKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgaGlzdG9yeSwge1xuICAgIGxpc3RlbjogbGlzdGVuXG4gIH0pO1xufVxuXG5leHBvcnRzWydkZWZhdWx0J10gPSBjcmVhdGVET01IaXN0b3J5O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiLy9pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJ1xuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfZGVlcEVxdWFsID0gcmVxdWlyZSgnZGVlcC1lcXVhbCcpO1xuXG52YXIgX2RlZXBFcXVhbDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kZWVwRXF1YWwpO1xuXG52YXIgX0FzeW5jVXRpbHMgPSByZXF1aXJlKCcuL0FzeW5jVXRpbHMnKTtcblxudmFyIF9BY3Rpb25zID0gcmVxdWlyZSgnLi9BY3Rpb25zJyk7XG5cbnZhciBfY3JlYXRlTG9jYXRpb24yID0gcmVxdWlyZSgnLi9jcmVhdGVMb2NhdGlvbicpO1xuXG52YXIgX2NyZWF0ZUxvY2F0aW9uMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUxvY2F0aW9uMik7XG5cbnZhciBfcnVuVHJhbnNpdGlvbkhvb2sgPSByZXF1aXJlKCcuL3J1blRyYW5zaXRpb25Ib29rJyk7XG5cbnZhciBfcnVuVHJhbnNpdGlvbkhvb2syID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcnVuVHJhbnNpdGlvbkhvb2spO1xuXG52YXIgX3BhcnNlUGF0aCA9IHJlcXVpcmUoJy4vcGFyc2VQYXRoJyk7XG5cbnZhciBfcGFyc2VQYXRoMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcnNlUGF0aCk7XG5cbnZhciBfZGVwcmVjYXRlID0gcmVxdWlyZSgnLi9kZXByZWNhdGUnKTtcblxudmFyIF9kZXByZWNhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZGVwcmVjYXRlKTtcblxuZnVuY3Rpb24gY3JlYXRlUmFuZG9tS2V5KGxlbmd0aCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGxlbmd0aCk7XG59XG5cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmXG4gIC8vYS5hY3Rpb24gPT09IGIuYWN0aW9uICYmIC8vIERpZmZlcmVudCBhY3Rpb24gIT09IGxvY2F0aW9uIGNoYW5nZS5cbiAgYS5rZXkgPT09IGIua2V5ICYmIF9kZWVwRXF1YWwyWydkZWZhdWx0J10oYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbnZhciBEZWZhdWx0S2V5TGVuZ3RoID0gNjtcblxuZnVuY3Rpb24gY3JlYXRlSGlzdG9yeSgpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDAgfHwgYXJndW1lbnRzWzBdID09PSB1bmRlZmluZWQgPyB7fSA6IGFyZ3VtZW50c1swXTtcbiAgdmFyIGdldEN1cnJlbnRMb2NhdGlvbiA9IG9wdGlvbnMuZ2V0Q3VycmVudExvY2F0aW9uO1xuICB2YXIgZmluaXNoVHJhbnNpdGlvbiA9IG9wdGlvbnMuZmluaXNoVHJhbnNpdGlvbjtcbiAgdmFyIHNhdmVTdGF0ZSA9IG9wdGlvbnMuc2F2ZVN0YXRlO1xuICB2YXIgZ28gPSBvcHRpb25zLmdvO1xuICB2YXIga2V5TGVuZ3RoID0gb3B0aW9ucy5rZXlMZW5ndGg7XG4gIHZhciBnZXRVc2VyQ29uZmlybWF0aW9uID0gb3B0aW9ucy5nZXRVc2VyQ29uZmlybWF0aW9uO1xuXG4gIGlmICh0eXBlb2Yga2V5TGVuZ3RoICE9PSAnbnVtYmVyJykga2V5TGVuZ3RoID0gRGVmYXVsdEtleUxlbmd0aDtcblxuICB2YXIgdHJhbnNpdGlvbkhvb2tzID0gW107XG5cbiAgZnVuY3Rpb24gbGlzdGVuQmVmb3JlKGhvb2spIHtcbiAgICB0cmFuc2l0aW9uSG9va3MucHVzaChob29rKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICB0cmFuc2l0aW9uSG9va3MgPSB0cmFuc2l0aW9uSG9va3MuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBob29rO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBhbGxLZXlzID0gW107XG4gIHZhciBjaGFuZ2VMaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIGxvY2F0aW9uID0gdW5kZWZpbmVkO1xuXG4gIGZ1bmN0aW9uIGdldEN1cnJlbnQoKSB7XG4gICAgaWYgKHBlbmRpbmdMb2NhdGlvbiAmJiBwZW5kaW5nTG9jYXRpb24uYWN0aW9uID09PSBfQWN0aW9ucy5QT1ApIHtcbiAgICAgIHJldHVybiBhbGxLZXlzLmluZGV4T2YocGVuZGluZ0xvY2F0aW9uLmtleSk7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIGFsbEtleXMuaW5kZXhPZihsb2NhdGlvbi5rZXkpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlTG9jYXRpb24obmV3TG9jYXRpb24pIHtcbiAgICB2YXIgY3VycmVudCA9IGdldEN1cnJlbnQoKTtcblxuICAgIGxvY2F0aW9uID0gbmV3TG9jYXRpb247XG5cbiAgICBpZiAobG9jYXRpb24uYWN0aW9uID09PSBfQWN0aW9ucy5QVVNIKSB7XG4gICAgICBhbGxLZXlzID0gW10uY29uY2F0KGFsbEtleXMuc2xpY2UoMCwgY3VycmVudCArIDEpLCBbbG9jYXRpb24ua2V5XSk7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5hY3Rpb24gPT09IF9BY3Rpb25zLlJFUExBQ0UpIHtcbiAgICAgIGFsbEtleXNbY3VycmVudF0gPSBsb2NhdGlvbi5rZXk7XG4gICAgfVxuXG4gICAgY2hhbmdlTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICBsaXN0ZW5lcihsb2NhdGlvbik7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICBjaGFuZ2VMaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG5cbiAgICBpZiAobG9jYXRpb24pIHtcbiAgICAgIGxpc3RlbmVyKGxvY2F0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF9sb2NhdGlvbiA9IGdldEN1cnJlbnRMb2NhdGlvbigpO1xuICAgICAgYWxsS2V5cyA9IFtfbG9jYXRpb24ua2V5XTtcbiAgICAgIHVwZGF0ZUxvY2F0aW9uKF9sb2NhdGlvbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoYW5nZUxpc3RlbmVycyA9IGNoYW5nZUxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgX0FzeW5jVXRpbHMubG9vcEFzeW5jKHRyYW5zaXRpb25Ib29rcy5sZW5ndGgsIGZ1bmN0aW9uIChpbmRleCwgbmV4dCwgZG9uZSkge1xuICAgICAgX3J1blRyYW5zaXRpb25Ib29rMlsnZGVmYXVsdCddKHRyYW5zaXRpb25Ib29rc1tpbmRleF0sIGxvY2F0aW9uLCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQgIT0gbnVsbCkge1xuICAgICAgICAgIGRvbmUocmVzdWx0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXh0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sIGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgICBpZiAoZ2V0VXNlckNvbmZpcm1hdGlvbiAmJiB0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihtZXNzYWdlLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgICBjYWxsYmFjayhvayAhPT0gZmFsc2UpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrKG1lc3NhZ2UgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHZhciBwZW5kaW5nTG9jYXRpb24gPSB1bmRlZmluZWQ7XG5cbiAgZnVuY3Rpb24gdHJhbnNpdGlvblRvKG5leHRMb2NhdGlvbikge1xuICAgIGlmIChsb2NhdGlvbiAmJiBsb2NhdGlvbnNBcmVFcXVhbChsb2NhdGlvbiwgbmV4dExvY2F0aW9uKSkgcmV0dXJuOyAvLyBOb3RoaW5nIHRvIGRvLlxuXG4gICAgcGVuZGluZ0xvY2F0aW9uID0gbmV4dExvY2F0aW9uO1xuXG4gICAgY29uZmlybVRyYW5zaXRpb25UbyhuZXh0TG9jYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKHBlbmRpbmdMb2NhdGlvbiAhPT0gbmV4dExvY2F0aW9uKSByZXR1cm47IC8vIFRyYW5zaXRpb24gd2FzIGludGVycnVwdGVkLlxuXG4gICAgICBpZiAob2spIHtcbiAgICAgICAgLy8gdHJlYXQgUFVTSCB0byBjdXJyZW50IHBhdGggbGlrZSBSRVBMQUNFIHRvIGJlIGNvbnNpc3RlbnQgd2l0aCBicm93c2Vyc1xuICAgICAgICBpZiAobmV4dExvY2F0aW9uLmFjdGlvbiA9PT0gX0FjdGlvbnMuUFVTSCkge1xuICAgICAgICAgIHZhciBwcmV2UGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgICAgIHZhciBuZXh0UGF0aCA9IGNyZWF0ZVBhdGgobmV4dExvY2F0aW9uKTtcblxuICAgICAgICAgIGlmIChuZXh0UGF0aCA9PT0gcHJldlBhdGgpIG5leHRMb2NhdGlvbi5hY3Rpb24gPSBfQWN0aW9ucy5SRVBMQUNFO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGZpbmlzaFRyYW5zaXRpb24obmV4dExvY2F0aW9uKSAhPT0gZmFsc2UpIHVwZGF0ZUxvY2F0aW9uKG5leHRMb2NhdGlvbik7XG4gICAgICB9IGVsc2UgaWYgKGxvY2F0aW9uICYmIG5leHRMb2NhdGlvbi5hY3Rpb24gPT09IF9BY3Rpb25zLlBPUCkge1xuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGxvY2F0aW9uLmtleSk7XG4gICAgICAgIHZhciBuZXh0SW5kZXggPSBhbGxLZXlzLmluZGV4T2YobmV4dExvY2F0aW9uLmtleSk7XG5cbiAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEgJiYgbmV4dEluZGV4ICE9PSAtMSkgZ28ocHJldkluZGV4IC0gbmV4dEluZGV4KTsgLy8gUmVzdG9yZSB0aGUgVVJMLlxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChsb2NhdGlvbikge1xuICAgIHRyYW5zaXRpb25UbyhjcmVhdGVMb2NhdGlvbihsb2NhdGlvbiwgX0FjdGlvbnMuUFVTSCwgY3JlYXRlS2V5KCkpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UobG9jYXRpb24pIHtcbiAgICB0cmFuc2l0aW9uVG8oY3JlYXRlTG9jYXRpb24obG9jYXRpb24sIF9BY3Rpb25zLlJFUExBQ0UsIGNyZWF0ZUtleSgpKSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBjcmVhdGVSYW5kb21LZXkoa2V5TGVuZ3RoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgICBpZiAobG9jYXRpb24gPT0gbnVsbCB8fCB0eXBlb2YgbG9jYXRpb24gPT09ICdzdHJpbmcnKSByZXR1cm4gbG9jYXRpb247XG5cbiAgICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZTtcbiAgICB2YXIgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoO1xuICAgIHZhciBoYXNoID0gbG9jYXRpb24uaGFzaDtcblxuICAgIHZhciByZXN1bHQgPSBwYXRobmFtZTtcblxuICAgIGlmIChzZWFyY2gpIHJlc3VsdCArPSBzZWFyY2g7XG5cbiAgICBpZiAoaGFzaCkgcmVzdWx0ICs9IGhhc2g7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uLCBhY3Rpb24pIHtcbiAgICB2YXIga2V5ID0gYXJndW1lbnRzLmxlbmd0aCA8PSAyIHx8IGFyZ3VtZW50c1syXSA9PT0gdW5kZWZpbmVkID8gY3JlYXRlS2V5KCkgOiBhcmd1bWVudHNbMl07XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ29iamVjdCcpIHtcbiAgICAgIC8vd2FybmluZyhcbiAgICAgIC8vICBmYWxzZSxcbiAgICAgIC8vICAnVGhlIHN0YXRlICgybmQpIGFyZ3VtZW50IHRvIGhpc3RvcnkuY3JlYXRlTG9jYXRpb24gaXMgZGVwcmVjYXRlZDsgdXNlIGEgJyArXG4gICAgICAvLyAgJ2xvY2F0aW9uIGRlc2NyaXB0b3IgaW5zdGVhZCdcbiAgICAgIC8vKVxuXG4gICAgICBpZiAodHlwZW9mIGxvY2F0aW9uID09PSAnc3RyaW5nJykgbG9jYXRpb24gPSBfcGFyc2VQYXRoMlsnZGVmYXVsdCddKGxvY2F0aW9uKTtcblxuICAgICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHsgc3RhdGU6IGFjdGlvbiB9KTtcblxuICAgICAgYWN0aW9uID0ga2V5O1xuICAgICAga2V5ID0gYXJndW1lbnRzWzNdIHx8IGNyZWF0ZUtleSgpO1xuICAgIH1cblxuICAgIHJldHVybiBfY3JlYXRlTG9jYXRpb24zWydkZWZhdWx0J10obG9jYXRpb24sIGFjdGlvbiwga2V5KTtcbiAgfVxuXG4gIC8vIGRlcHJlY2F0ZWRcbiAgZnVuY3Rpb24gc2V0U3RhdGUoc3RhdGUpIHtcbiAgICBpZiAobG9jYXRpb24pIHtcbiAgICAgIHVwZGF0ZUxvY2F0aW9uU3RhdGUobG9jYXRpb24sIHN0YXRlKTtcbiAgICAgIHVwZGF0ZUxvY2F0aW9uKGxvY2F0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdXBkYXRlTG9jYXRpb25TdGF0ZShnZXRDdXJyZW50TG9jYXRpb24oKSwgc3RhdGUpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZUxvY2F0aW9uU3RhdGUobG9jYXRpb24sIHN0YXRlKSB7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBfZXh0ZW5kcyh7fSwgbG9jYXRpb24uc3RhdGUsIHN0YXRlKTtcbiAgICBzYXZlU3RhdGUobG9jYXRpb24ua2V5LCBsb2NhdGlvbi5zdGF0ZSk7XG4gIH1cblxuICAvLyBkZXByZWNhdGVkXG4gIGZ1bmN0aW9uIHJlZ2lzdGVyVHJhbnNpdGlvbkhvb2soaG9vaykge1xuICAgIGlmICh0cmFuc2l0aW9uSG9va3MuaW5kZXhPZihob29rKSA9PT0gLTEpIHRyYW5zaXRpb25Ib29rcy5wdXNoKGhvb2spO1xuICB9XG5cbiAgLy8gZGVwcmVjYXRlZFxuICBmdW5jdGlvbiB1bnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2soaG9vaykge1xuICAgIHRyYW5zaXRpb25Ib29rcyA9IHRyYW5zaXRpb25Ib29rcy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHJldHVybiBpdGVtICE9PSBob29rO1xuICAgIH0pO1xuICB9XG5cbiAgLy8gZGVwcmVjYXRlZFxuICBmdW5jdGlvbiBwdXNoU3RhdGUoc3RhdGUsIHBhdGgpIHtcbiAgICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSBwYXRoID0gX3BhcnNlUGF0aDJbJ2RlZmF1bHQnXShwYXRoKTtcblxuICAgIHB1c2goX2V4dGVuZHMoeyBzdGF0ZTogc3RhdGUgfSwgcGF0aCkpO1xuICB9XG5cbiAgLy8gZGVwcmVjYXRlZFxuICBmdW5jdGlvbiByZXBsYWNlU3RhdGUoc3RhdGUsIHBhdGgpIHtcbiAgICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSBwYXRoID0gX3BhcnNlUGF0aDJbJ2RlZmF1bHQnXShwYXRoKTtcblxuICAgIHJlcGxhY2UoX2V4dGVuZHMoeyBzdGF0ZTogc3RhdGUgfSwgcGF0aCkpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBsaXN0ZW5CZWZvcmU6IGxpc3RlbkJlZm9yZSxcbiAgICBsaXN0ZW46IGxpc3RlbixcbiAgICB0cmFuc2l0aW9uVG86IHRyYW5zaXRpb25UbyxcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNyZWF0ZUtleTogY3JlYXRlS2V5LFxuICAgIGNyZWF0ZVBhdGg6IGNyZWF0ZVBhdGgsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBjcmVhdGVMb2NhdGlvbjogY3JlYXRlTG9jYXRpb24sXG5cbiAgICBzZXRTdGF0ZTogX2RlcHJlY2F0ZTJbJ2RlZmF1bHQnXShzZXRTdGF0ZSwgJ3NldFN0YXRlIGlzIGRlcHJlY2F0ZWQ7IHVzZSBsb2NhdGlvbi5rZXkgdG8gc2F2ZSBzdGF0ZSBpbnN0ZWFkJyksXG4gICAgcmVnaXN0ZXJUcmFuc2l0aW9uSG9vazogX2RlcHJlY2F0ZTJbJ2RlZmF1bHQnXShyZWdpc3RlclRyYW5zaXRpb25Ib29rLCAncmVnaXN0ZXJUcmFuc2l0aW9uSG9vayBpcyBkZXByZWNhdGVkOyB1c2UgbGlzdGVuQmVmb3JlIGluc3RlYWQnKSxcbiAgICB1bnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2s6IF9kZXByZWNhdGUyWydkZWZhdWx0J10odW5yZWdpc3RlclRyYW5zaXRpb25Ib29rLCAndW5yZWdpc3RlclRyYW5zaXRpb25Ib29rIGlzIGRlcHJlY2F0ZWQ7IHVzZSB0aGUgY2FsbGJhY2sgcmV0dXJuZWQgZnJvbSBsaXN0ZW5CZWZvcmUgaW5zdGVhZCcpLFxuICAgIHB1c2hTdGF0ZTogX2RlcHJlY2F0ZTJbJ2RlZmF1bHQnXShwdXNoU3RhdGUsICdwdXNoU3RhdGUgaXMgZGVwcmVjYXRlZDsgdXNlIHB1c2ggaW5zdGVhZCcpLFxuICAgIHJlcGxhY2VTdGF0ZTogX2RlcHJlY2F0ZTJbJ2RlZmF1bHQnXShyZXBsYWNlU3RhdGUsICdyZXBsYWNlU3RhdGUgaXMgZGVwcmVjYXRlZDsgdXNlIHJlcGxhY2UgaW5zdGVhZCcpXG4gIH07XG59XG5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IGNyZWF0ZUhpc3Rvcnk7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIvL2ltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF9BY3Rpb25zID0gcmVxdWlyZSgnLi9BY3Rpb25zJyk7XG5cbnZhciBfcGFyc2VQYXRoID0gcmVxdWlyZSgnLi9wYXJzZVBhdGgnKTtcblxudmFyIF9wYXJzZVBhdGgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyc2VQYXRoKTtcblxuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24oKSB7XG4gIHZhciBsb2NhdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/ICcvJyA6IGFyZ3VtZW50c1swXTtcbiAgdmFyIGFjdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMSB8fCBhcmd1bWVudHNbMV0gPT09IHVuZGVmaW5lZCA/IF9BY3Rpb25zLlBPUCA6IGFyZ3VtZW50c1sxXTtcbiAgdmFyIGtleSA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMiB8fCBhcmd1bWVudHNbMl0gPT09IHVuZGVmaW5lZCA/IG51bGwgOiBhcmd1bWVudHNbMl07XG5cbiAgdmFyIF9mb3VydGhBcmcgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDMgfHwgYXJndW1lbnRzWzNdID09PSB1bmRlZmluZWQgPyBudWxsIDogYXJndW1lbnRzWzNdO1xuXG4gIGlmICh0eXBlb2YgbG9jYXRpb24gPT09ICdzdHJpbmcnKSBsb2NhdGlvbiA9IF9wYXJzZVBhdGgyWydkZWZhdWx0J10obG9jYXRpb24pO1xuXG4gIGlmICh0eXBlb2YgYWN0aW9uID09PSAnb2JqZWN0Jykge1xuICAgIC8vd2FybmluZyhcbiAgICAvLyAgZmFsc2UsXG4gICAgLy8gICdUaGUgc3RhdGUgKDJuZCkgYXJndW1lbnQgdG8gY3JlYXRlTG9jYXRpb24gaXMgZGVwcmVjYXRlZDsgdXNlIGEgJyArXG4gICAgLy8gICdsb2NhdGlvbiBkZXNjcmlwdG9yIGluc3RlYWQnXG4gICAgLy8pXG5cbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBsb2NhdGlvbiwgeyBzdGF0ZTogYWN0aW9uIH0pO1xuXG4gICAgYWN0aW9uID0ga2V5IHx8IF9BY3Rpb25zLlBPUDtcbiAgICBrZXkgPSBfZm91cnRoQXJnO1xuICB9XG5cbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUgfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoIHx8ICcnO1xuICB2YXIgaGFzaCA9IGxvY2F0aW9uLmhhc2ggfHwgJyc7XG4gIHZhciBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlIHx8IG51bGw7XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCxcbiAgICBzdGF0ZTogc3RhdGUsXG4gICAgYWN0aW9uOiBhY3Rpb24sXG4gICAga2V5OiBrZXlcbiAgfTtcbn1cblxuZXhwb3J0c1snZGVmYXVsdCddID0gY3JlYXRlTG9jYXRpb247XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIvL2ltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnXG5cblwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZnVuY3Rpb24gZGVwcmVjYXRlKGZuKSB7XG4gIHJldHVybiBmbjtcbiAgLy9yZXR1cm4gZnVuY3Rpb24gKCkge1xuICAvLyAgd2FybmluZyhmYWxzZSwgJ1toaXN0b3J5XSAnICsgbWVzc2FnZSlcbiAgLy8gIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpXG4gIC8vfVxufVxuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGRlcHJlY2F0ZTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5mdW5jdGlvbiBleHRyYWN0UGF0aChzdHJpbmcpIHtcbiAgdmFyIG1hdGNoID0gc3RyaW5nLm1hdGNoKC9eaHR0cHM/OlxcL1xcL1teXFwvXSovKTtcblxuICBpZiAobWF0Y2ggPT0gbnVsbCkgcmV0dXJuIHN0cmluZztcblxuICByZXR1cm4gc3RyaW5nLnN1YnN0cmluZyhtYXRjaFswXS5sZW5ndGgpO1xufVxuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGV4dHJhY3RQYXRoO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF93YXJuaW5nID0gcmVxdWlyZSgnd2FybmluZycpO1xuXG52YXIgX3dhcm5pbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2FybmluZyk7XG5cbnZhciBfZXh0cmFjdFBhdGggPSByZXF1aXJlKCcuL2V4dHJhY3RQYXRoJyk7XG5cbnZhciBfZXh0cmFjdFBhdGgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXh0cmFjdFBhdGgpO1xuXG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBfZXh0cmFjdFBhdGgyWydkZWZhdWx0J10ocGF0aCk7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcblxuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gX3dhcm5pbmcyWydkZWZhdWx0J10ocGF0aCA9PT0gcGF0aG5hbWUsICdBIHBhdGggbXVzdCBiZSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2ggb25seSwgbm90IGEgZnVsbHkgcXVhbGlmaWVkIFVSTCBsaWtlIFwiJXNcIicsIHBhdGgpIDogdW5kZWZpbmVkO1xuXG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cmluZyhoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyaW5nKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHJpbmcoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyaW5nKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIGlmIChwYXRobmFtZSA9PT0gJycpIHBhdGhuYW1lID0gJy8nO1xuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2hcbiAgfTtcbn1cblxuZXhwb3J0c1snZGVmYXVsdCddID0gcGFyc2VQYXRoO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfd2FybmluZyA9IHJlcXVpcmUoJ3dhcm5pbmcnKTtcblxudmFyIF93YXJuaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dhcm5pbmcpO1xuXG5mdW5jdGlvbiBydW5UcmFuc2l0aW9uSG9vayhob29rLCBsb2NhdGlvbiwgY2FsbGJhY2spIHtcbiAgdmFyIHJlc3VsdCA9IGhvb2sobG9jYXRpb24sIGNhbGxiYWNrKTtcblxuICBpZiAoaG9vay5sZW5ndGggPCAyKSB7XG4gICAgLy8gQXNzdW1lIHRoZSBob29rIHJ1bnMgc3luY2hyb25vdXNseSBhbmQgYXV0b21hdGljYWxseVxuICAgIC8vIGNhbGwgdGhlIGNhbGxiYWNrIHdpdGggdGhlIHJldHVybiB2YWx1ZS5cbiAgICBjYWxsYmFjayhyZXN1bHQpO1xuICB9IGVsc2Uge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBfd2FybmluZzJbJ2RlZmF1bHQnXShyZXN1bHQgPT09IHVuZGVmaW5lZCwgJ1lvdSBzaG91bGQgbm90IFwicmV0dXJuXCIgaW4gYSB0cmFuc2l0aW9uIGhvb2sgd2l0aCBhIGNhbGxiYWNrIGFyZ3VtZW50OyBjYWxsIHRoZSBjYWxsYmFjayBpbnN0ZWFkJykgOiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuZXhwb3J0c1snZGVmYXVsdCddID0gcnVuVHJhbnNpdGlvbkhvb2s7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICtcbiAgICAgICAgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgaW52YXJpYW50ID0gcmVxdWlyZSgnZmJqcy9saWIvaW52YXJpYW50Jyk7XG4gIHZhciB3YXJuaW5nID0gcmVxdWlyZSgnZmJqcy9saWIvd2FybmluZycpO1xuICB2YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuICB2YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG59XG5cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxuICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGxvY2F0aW9uIGUuZy4gXCJwcm9wXCIsIFwiY29udGV4dFwiLCBcImNoaWxkIGNvbnRleHRcIlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cbiAqIEBwYXJhbSB7P0Z1bmN0aW9ufSBnZXRTdGFjayBSZXR1cm5zIHRoZSBjb21wb25lbnQgc3RhY2suXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGdldFN0YWNrKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuICAgICAgaWYgKHR5cGVTcGVjcy5oYXNPd25Qcm9wZXJ0eSh0eXBlU3BlY05hbWUpKSB7XG4gICAgICAgIHZhciBlcnJvcjtcbiAgICAgICAgLy8gUHJvcCB0eXBlIHZhbGlkYXRpb24gbWF5IHRocm93LiBJbiBjYXNlIHRoZXkgZG8sIHdlIGRvbid0IHdhbnQgdG9cbiAgICAgICAgLy8gZmFpbCB0aGUgcmVuZGVyIHBoYXNlIHdoZXJlIGl0IGRpZG4ndCBmYWlsIGJlZm9yZS4gU28gd2UgbG9nIGl0LlxuICAgICAgICAvLyBBZnRlciB0aGVzZSBoYXZlIGJlZW4gY2xlYW5lZCB1cCwgd2UnbGwgbGV0IHRoZW0gdGhyb3cuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBpbnRlbnRpb25hbGx5IGFuIGludmFyaWFudCB0aGF0IGdldHMgY2F1Z2h0LiBJdCdzIHRoZSBzYW1lXG4gICAgICAgICAgLy8gYmVoYXZpb3IgYXMgd2l0aG91dCB0aGlzIHN0YXRlbWVudCBleGNlcHQgd2l0aCBhIGJldHRlciBtZXNzYWdlLlxuICAgICAgICAgIGludmFyaWFudCh0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gPT09ICdmdW5jdGlvbicsICclczogJXMgdHlwZSBgJXNgIGlzIGludmFsaWQ7IGl0IG11c3QgYmUgYSBmdW5jdGlvbiwgdXN1YWxseSBmcm9tICcgKyAndGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCVzYC4nLCBjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycsIGxvY2F0aW9uLCB0eXBlU3BlY05hbWUsIHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSk7XG4gICAgICAgICAgZXJyb3IgPSB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSh2YWx1ZXMsIHR5cGVTcGVjTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIG51bGwsIFJlYWN0UHJvcFR5cGVzU2VjcmV0KTtcbiAgICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgICBlcnJvciA9IGV4O1xuICAgICAgICB9XG4gICAgICAgIHdhcm5pbmcoIWVycm9yIHx8IGVycm9yIGluc3RhbmNlb2YgRXJyb3IsICclczogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICVzIGAlc2AgaXMgaW52YWxpZDsgdGhlIHR5cGUgY2hlY2tlciAnICsgJ2Z1bmN0aW9uIG11c3QgcmV0dXJuIGBudWxsYCBvciBhbiBgRXJyb3JgIGJ1dCByZXR1cm5lZCBhICVzLiAnICsgJ1lvdSBtYXkgaGF2ZSBmb3Jnb3R0ZW4gdG8gcGFzcyBhbiBhcmd1bWVudCB0byB0aGUgdHlwZSBjaGVja2VyICcgKyAnY3JlYXRvciAoYXJyYXlPZiwgaW5zdGFuY2VPZiwgb2JqZWN0T2YsIG9uZU9mLCBvbmVPZlR5cGUsIGFuZCAnICsgJ3NoYXBlIGFsbCByZXF1aXJlIGFuIGFyZ3VtZW50KS4nLCBjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycsIGxvY2F0aW9uLCB0eXBlU3BlY05hbWUsIHR5cGVvZiBlcnJvcik7XG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yICYmICEoZXJyb3IubWVzc2FnZSBpbiBsb2dnZWRUeXBlRmFpbHVyZXMpKSB7XG4gICAgICAgICAgLy8gT25seSBtb25pdG9yIHRoaXMgZmFpbHVyZSBvbmNlIGJlY2F1c2UgdGhlcmUgdGVuZHMgdG8gYmUgYSBsb3Qgb2YgdGhlXG4gICAgICAgICAgLy8gc2FtZSBlcnJvci5cbiAgICAgICAgICBsb2dnZWRUeXBlRmFpbHVyZXNbZXJyb3IubWVzc2FnZV0gPSB0cnVlO1xuXG4gICAgICAgICAgdmFyIHN0YWNrID0gZ2V0U3RhY2sgPyBnZXRTdGFjaygpIDogJyc7XG5cbiAgICAgICAgICB3YXJuaW5nKGZhbHNlLCAnRmFpbGVkICVzIHR5cGU6ICVzJXMnLCBsb2NhdGlvbiwgZXJyb3IubWVzc2FnZSwgc3RhY2sgIT0gbnVsbCA/IHN0YWNrIDogJycpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2hlY2tQcm9wVHlwZXM7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKCdmYmpzL2xpYi9lbXB0eUZ1bmN0aW9uJyk7XG52YXIgaW52YXJpYW50ID0gcmVxdWlyZSgnZmJqcy9saWIvaW52YXJpYW50Jyk7XG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaW52YXJpYW50KFxuICAgICAgZmFsc2UsXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbVxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzID0gZW1wdHlGdW5jdGlvbjtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJ2ZianMvbGliL2VtcHR5RnVuY3Rpb24nKTtcbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKCdmYmpzL2xpYi9pbnZhcmlhbnQnKTtcbnZhciB3YXJuaW5nID0gcmVxdWlyZSgnZmJqcy9saWIvd2FybmluZycpO1xudmFyIGFzc2lnbiA9IHJlcXVpcmUoJ29iamVjdC1hc3NpZ24nKTtcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcbnZhciBjaGVja1Byb3BUeXBlcyA9IHJlcXVpcmUoJy4vY2hlY2tQcm9wVHlwZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcykge1xuICAvKiBnbG9iYWwgU3ltYm9sICovXG4gIHZhciBJVEVSQVRPUl9TWU1CT0wgPSB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIFN5bWJvbC5pdGVyYXRvcjtcbiAgdmFyIEZBVVhfSVRFUkFUT1JfU1lNQk9MID0gJ0BAaXRlcmF0b3InOyAvLyBCZWZvcmUgU3ltYm9sIHNwZWMuXG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGl0ZXJhdG9yIG1ldGhvZCBmdW5jdGlvbiBjb250YWluZWQgb24gdGhlIGl0ZXJhYmxlIG9iamVjdC5cbiAgICpcbiAgICogQmUgc3VyZSB0byBpbnZva2UgdGhlIGZ1bmN0aW9uIHdpdGggdGhlIGl0ZXJhYmxlIGFzIGNvbnRleHQ6XG4gICAqXG4gICAqICAgICB2YXIgaXRlcmF0b3JGbiA9IGdldEl0ZXJhdG9yRm4obXlJdGVyYWJsZSk7XG4gICAqICAgICBpZiAoaXRlcmF0b3JGbikge1xuICAgKiAgICAgICB2YXIgaXRlcmF0b3IgPSBpdGVyYXRvckZuLmNhbGwobXlJdGVyYWJsZSk7XG4gICAqICAgICAgIC4uLlxuICAgKiAgICAgfVxuICAgKlxuICAgKiBAcGFyYW0gez9vYmplY3R9IG1heWJlSXRlcmFibGVcbiAgICogQHJldHVybiB7P2Z1bmN0aW9ufVxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0SXRlcmF0b3JGbihtYXliZUl0ZXJhYmxlKSB7XG4gICAgdmFyIGl0ZXJhdG9yRm4gPSBtYXliZUl0ZXJhYmxlICYmIChJVEVSQVRPUl9TWU1CT0wgJiYgbWF5YmVJdGVyYWJsZVtJVEVSQVRPUl9TWU1CT0xdIHx8IG1heWJlSXRlcmFibGVbRkFVWF9JVEVSQVRPUl9TWU1CT0xdKTtcbiAgICBpZiAodHlwZW9mIGl0ZXJhdG9yRm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiBpdGVyYXRvckZuO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDb2xsZWN0aW9uIG9mIG1ldGhvZHMgdGhhdCBhbGxvdyBkZWNsYXJhdGlvbiBhbmQgdmFsaWRhdGlvbiBvZiBwcm9wcyB0aGF0IGFyZVxuICAgKiBzdXBwbGllZCB0byBSZWFjdCBjb21wb25lbnRzLiBFeGFtcGxlIHVzYWdlOlxuICAgKlxuICAgKiAgIHZhciBQcm9wcyA9IHJlcXVpcmUoJ1JlYWN0UHJvcFR5cGVzJyk7XG4gICAqICAgdmFyIE15QXJ0aWNsZSA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICogICAgIHByb3BUeXBlczoge1xuICAgKiAgICAgICAvLyBBbiBvcHRpb25hbCBzdHJpbmcgcHJvcCBuYW1lZCBcImRlc2NyaXB0aW9uXCIuXG4gICAqICAgICAgIGRlc2NyaXB0aW9uOiBQcm9wcy5zdHJpbmcsXG4gICAqXG4gICAqICAgICAgIC8vIEEgcmVxdWlyZWQgZW51bSBwcm9wIG5hbWVkIFwiY2F0ZWdvcnlcIi5cbiAgICogICAgICAgY2F0ZWdvcnk6IFByb3BzLm9uZU9mKFsnTmV3cycsJ1Bob3RvcyddKS5pc1JlcXVpcmVkLFxuICAgKlxuICAgKiAgICAgICAvLyBBIHByb3AgbmFtZWQgXCJkaWFsb2dcIiB0aGF0IHJlcXVpcmVzIGFuIGluc3RhbmNlIG9mIERpYWxvZy5cbiAgICogICAgICAgZGlhbG9nOiBQcm9wcy5pbnN0YW5jZU9mKERpYWxvZykuaXNSZXF1aXJlZFxuICAgKiAgICAgfSxcbiAgICogICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7IC4uLiB9XG4gICAqICAgfSk7XG4gICAqXG4gICAqIEEgbW9yZSBmb3JtYWwgc3BlY2lmaWNhdGlvbiBvZiBob3cgdGhlc2UgbWV0aG9kcyBhcmUgdXNlZDpcbiAgICpcbiAgICogICB0eXBlIDo9IGFycmF5fGJvb2x8ZnVuY3xvYmplY3R8bnVtYmVyfHN0cmluZ3xvbmVPZihbLi4uXSl8aW5zdGFuY2VPZiguLi4pXG4gICAqICAgZGVjbCA6PSBSZWFjdFByb3BUeXBlcy57dHlwZX0oLmlzUmVxdWlyZWQpP1xuICAgKlxuICAgKiBFYWNoIGFuZCBldmVyeSBkZWNsYXJhdGlvbiBwcm9kdWNlcyBhIGZ1bmN0aW9uIHdpdGggdGhlIHNhbWUgc2lnbmF0dXJlLiBUaGlzXG4gICAqIGFsbG93cyB0aGUgY3JlYXRpb24gb2YgY3VzdG9tIHZhbGlkYXRpb24gZnVuY3Rpb25zLiBGb3IgZXhhbXBsZTpcbiAgICpcbiAgICogIHZhciBNeUxpbmsgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAqICAgIHByb3BUeXBlczoge1xuICAgKiAgICAgIC8vIEFuIG9wdGlvbmFsIHN0cmluZyBvciBVUkkgcHJvcCBuYW1lZCBcImhyZWZcIi5cbiAgICogICAgICBocmVmOiBmdW5jdGlvbihwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUpIHtcbiAgICogICAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAqICAgICAgICBpZiAocHJvcFZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHByb3BWYWx1ZSAhPT0gJ3N0cmluZycgJiZcbiAgICogICAgICAgICAgICAhKHByb3BWYWx1ZSBpbnN0YW5jZW9mIFVSSSkpIHtcbiAgICogICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcbiAgICogICAgICAgICAgICAnRXhwZWN0ZWQgYSBzdHJpbmcgb3IgYW4gVVJJIGZvciAnICsgcHJvcE5hbWUgKyAnIGluICcgK1xuICAgKiAgICAgICAgICAgIGNvbXBvbmVudE5hbWVcbiAgICogICAgICAgICAgKTtcbiAgICogICAgICAgIH1cbiAgICogICAgICB9XG4gICAqICAgIH0sXG4gICAqICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7Li4ufVxuICAgKiAgfSk7XG4gICAqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cblxuICB2YXIgQU5PTllNT1VTID0gJzw8YW5vbnltb3VzPj4nO1xuXG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKCdhcnJheScpLFxuICAgIGJvb2w6IGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKCdib29sZWFuJyksXG4gICAgZnVuYzogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ2Z1bmN0aW9uJyksXG4gICAgbnVtYmVyOiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcignbnVtYmVyJyksXG4gICAgb2JqZWN0OiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcignb2JqZWN0JyksXG4gICAgc3RyaW5nOiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcignc3RyaW5nJyksXG4gICAgc3ltYm9sOiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcignc3ltYm9sJyksXG5cbiAgICBhbnk6IGNyZWF0ZUFueVR5cGVDaGVja2VyKCksXG4gICAgYXJyYXlPZjogY3JlYXRlQXJyYXlPZlR5cGVDaGVja2VyLFxuICAgIGVsZW1lbnQ6IGNyZWF0ZUVsZW1lbnRUeXBlQ2hlY2tlcigpLFxuICAgIGluc3RhbmNlT2Y6IGNyZWF0ZUluc3RhbmNlVHlwZUNoZWNrZXIsXG4gICAgbm9kZTogY3JlYXRlTm9kZUNoZWNrZXIoKSxcbiAgICBvYmplY3RPZjogY3JlYXRlT2JqZWN0T2ZUeXBlQ2hlY2tlcixcbiAgICBvbmVPZjogY3JlYXRlRW51bVR5cGVDaGVja2VyLFxuICAgIG9uZU9mVHlwZTogY3JlYXRlVW5pb25UeXBlQ2hlY2tlcixcbiAgICBzaGFwZTogY3JlYXRlU2hhcGVUeXBlQ2hlY2tlcixcbiAgICBleGFjdDogY3JlYXRlU3RyaWN0U2hhcGVUeXBlQ2hlY2tlcixcbiAgfTtcblxuICAvKipcbiAgICogaW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwgdG8gYXZvaWQgcmVxdWlyaW5nIGNvbnN1bWVycyBzaGlwIHRoZWlyIG93blxuICAgKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbiAgICovXG4gIC8qZXNsaW50LWRpc2FibGUgbm8tc2VsZi1jb21wYXJlKi9cbiAgZnVuY3Rpb24gaXMoeCwgeSkge1xuICAgIC8vIFNhbWVWYWx1ZSBhbGdvcml0aG1cbiAgICBpZiAoeCA9PT0geSkge1xuICAgICAgLy8gU3RlcHMgMS01LCA3LTEwXG4gICAgICAvLyBTdGVwcyA2LmItNi5lOiArMCAhPSAtMFxuICAgICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTdGVwIDYuYTogTmFOID09IE5hTlxuICAgICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgICB9XG4gIH1cbiAgLyplc2xpbnQtZW5hYmxlIG5vLXNlbGYtY29tcGFyZSovXG5cbiAgLyoqXG4gICAqIFdlIHVzZSBhbiBFcnJvci1saWtlIG9iamVjdCBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSBhcyBwZW9wbGUgbWF5IGNhbGxcbiAgICogUHJvcFR5cGVzIGRpcmVjdGx5IGFuZCBpbnNwZWN0IHRoZWlyIG91dHB1dC4gSG93ZXZlciwgd2UgZG9uJ3QgdXNlIHJlYWxcbiAgICogRXJyb3JzIGFueW1vcmUuIFdlIGRvbid0IGluc3BlY3QgdGhlaXIgc3RhY2sgYW55d2F5LCBhbmQgY3JlYXRpbmcgdGhlbVxuICAgKiBpcyBwcm9oaWJpdGl2ZWx5IGV4cGVuc2l2ZSBpZiB0aGV5IGFyZSBjcmVhdGVkIHRvbyBvZnRlbiwgc3VjaCBhcyB3aGF0XG4gICAqIGhhcHBlbnMgaW4gb25lT2ZUeXBlKCkgZm9yIGFueSB0eXBlIGJlZm9yZSB0aGUgb25lIHRoYXQgbWF0Y2hlZC5cbiAgICovXG4gIGZ1bmN0aW9uIFByb3BUeXBlRXJyb3IobWVzc2FnZSkge1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy5zdGFjayA9ICcnO1xuICB9XG4gIC8vIE1ha2UgYGluc3RhbmNlb2YgRXJyb3JgIHN0aWxsIHdvcmsgZm9yIHJldHVybmVkIGVycm9ycy5cbiAgUHJvcFR5cGVFcnJvci5wcm90b3R5cGUgPSBFcnJvci5wcm90b3R5cGU7XG5cbiAgZnVuY3Rpb24gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIG1hbnVhbFByb3BUeXBlQ2FsbENhY2hlID0ge307XG4gICAgICB2YXIgbWFudWFsUHJvcFR5cGVXYXJuaW5nQ291bnQgPSAwO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjaGVja1R5cGUoaXNSZXF1aXJlZCwgcHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICAgIGNvbXBvbmVudE5hbWUgPSBjb21wb25lbnROYW1lIHx8IEFOT05ZTU9VUztcbiAgICAgIHByb3BGdWxsTmFtZSA9IHByb3BGdWxsTmFtZSB8fCBwcm9wTmFtZTtcblxuICAgICAgaWYgKHNlY3JldCAhPT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgICAgaWYgKHRocm93T25EaXJlY3RBY2Nlc3MpIHtcbiAgICAgICAgICAvLyBOZXcgYmVoYXZpb3Igb25seSBmb3IgdXNlcnMgb2YgYHByb3AtdHlwZXNgIHBhY2thZ2VcbiAgICAgICAgICBpbnZhcmlhbnQoXG4gICAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICAgICAgICdVc2UgYFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpYCB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIC8vIE9sZCBiZWhhdmlvciBmb3IgcGVvcGxlIHVzaW5nIFJlYWN0LlByb3BUeXBlc1xuICAgICAgICAgIHZhciBjYWNoZUtleSA9IGNvbXBvbmVudE5hbWUgKyAnOicgKyBwcm9wTmFtZTtcbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAhbWFudWFsUHJvcFR5cGVDYWxsQ2FjaGVbY2FjaGVLZXldICYmXG4gICAgICAgICAgICAvLyBBdm9pZCBzcGFtbWluZyB0aGUgY29uc29sZSBiZWNhdXNlIHRoZXkgYXJlIG9mdGVuIG5vdCBhY3Rpb25hYmxlIGV4Y2VwdCBmb3IgbGliIGF1dGhvcnNcbiAgICAgICAgICAgIG1hbnVhbFByb3BUeXBlV2FybmluZ0NvdW50IDwgM1xuICAgICAgICAgICkge1xuICAgICAgICAgICAgd2FybmluZyhcbiAgICAgICAgICAgICAgZmFsc2UsXG4gICAgICAgICAgICAgICdZb3UgYXJlIG1hbnVhbGx5IGNhbGxpbmcgYSBSZWFjdC5Qcm9wVHlwZXMgdmFsaWRhdGlvbiAnICtcbiAgICAgICAgICAgICAgJ2Z1bmN0aW9uIGZvciB0aGUgYCVzYCBwcm9wIG9uIGAlc2AuIFRoaXMgaXMgZGVwcmVjYXRlZCAnICtcbiAgICAgICAgICAgICAgJ2FuZCB3aWxsIHRocm93IGluIHRoZSBzdGFuZGFsb25lIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICAgICAgICAgJ1lvdSBtYXkgYmUgc2VlaW5nIHRoaXMgd2FybmluZyBkdWUgdG8gYSB0aGlyZC1wYXJ0eSBQcm9wVHlwZXMgJyArXG4gICAgICAgICAgICAgICdsaWJyYXJ5LiBTZWUgaHR0cHM6Ly9mYi5tZS9yZWFjdC13YXJuaW5nLWRvbnQtY2FsbC1wcm9wdHlwZXMgJyArICdmb3IgZGV0YWlscy4nLFxuICAgICAgICAgICAgICBwcm9wRnVsbE5hbWUsXG4gICAgICAgICAgICAgIGNvbXBvbmVudE5hbWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBtYW51YWxQcm9wVHlwZUNhbGxDYWNoZVtjYWNoZUtleV0gPSB0cnVlO1xuICAgICAgICAgICAgbWFudWFsUHJvcFR5cGVXYXJuaW5nQ291bnQrKztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gPT0gbnVsbCkge1xuICAgICAgICBpZiAoaXNSZXF1aXJlZCkge1xuICAgICAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignVGhlICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBpcyBtYXJrZWQgYXMgcmVxdWlyZWQgJyArICgnaW4gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGJ1dCBpdHMgdmFsdWUgaXMgYG51bGxgLicpKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdUaGUgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIGlzIG1hcmtlZCBhcyByZXF1aXJlZCBpbiAnICsgKCdgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgYnV0IGl0cyB2YWx1ZSBpcyBgdW5kZWZpbmVkYC4nKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgY2hhaW5lZENoZWNrVHlwZSA9IGNoZWNrVHlwZS5iaW5kKG51bGwsIGZhbHNlKTtcbiAgICBjaGFpbmVkQ2hlY2tUeXBlLmlzUmVxdWlyZWQgPSBjaGVja1R5cGUuYmluZChudWxsLCB0cnVlKTtcblxuICAgIHJldHVybiBjaGFpbmVkQ2hlY2tUeXBlO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoZXhwZWN0ZWRUeXBlKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICB2YXIgcHJvcFR5cGUgPSBnZXRQcm9wVHlwZShwcm9wVmFsdWUpO1xuICAgICAgaWYgKHByb3BUeXBlICE9PSBleHBlY3RlZFR5cGUpIHtcbiAgICAgICAgLy8gYHByb3BWYWx1ZWAgYmVpbmcgaW5zdGFuY2Ugb2YsIHNheSwgZGF0ZS9yZWdleHAsIHBhc3MgdGhlICdvYmplY3QnXG4gICAgICAgIC8vIGNoZWNrLCBidXQgd2UgY2FuIG9mZmVyIGEgbW9yZSBwcmVjaXNlIGVycm9yIG1lc3NhZ2UgaGVyZSByYXRoZXIgdGhhblxuICAgICAgICAvLyAnb2YgdHlwZSBgb2JqZWN0YCcuXG4gICAgICAgIHZhciBwcmVjaXNlVHlwZSA9IGdldFByZWNpc2VUeXBlKHByb3BWYWx1ZSk7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiB0eXBlICcgKyAoJ2AnICsgcHJlY2lzZVR5cGUgKyAnYCBzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgJykgKyAoJ2AnICsgZXhwZWN0ZWRUeXBlICsgJ2AuJykpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVBbnlUeXBlQ2hlY2tlcigpIHtcbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIoZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc051bGwpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlQXJyYXlPZlR5cGVDaGVja2VyKHR5cGVDaGVja2VyKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICBpZiAodHlwZW9mIHR5cGVDaGVja2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignUHJvcGVydHkgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiBjb21wb25lbnQgYCcgKyBjb21wb25lbnROYW1lICsgJ2AgaGFzIGludmFsaWQgUHJvcFR5cGUgbm90YXRpb24gaW5zaWRlIGFycmF5T2YuJyk7XG4gICAgICB9XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHByb3BWYWx1ZSkpIHtcbiAgICAgICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiB0eXBlICcgKyAoJ2AnICsgcHJvcFR5cGUgKyAnYCBzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgYW4gYXJyYXkuJykpO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wVmFsdWUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGVycm9yID0gdHlwZUNoZWNrZXIocHJvcFZhbHVlLCBpLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgJ1snICsgaSArICddJywgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVFbGVtZW50VHlwZUNoZWNrZXIoKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgaWYgKCFpc1ZhbGlkRWxlbWVudChwcm9wVmFsdWUpKSB7XG4gICAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIHByb3BUeXBlICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIGEgc2luZ2xlIFJlYWN0RWxlbWVudC4nKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlVHlwZUNoZWNrZXIoZXhwZWN0ZWRDbGFzcykge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgaWYgKCEocHJvcHNbcHJvcE5hbWVdIGluc3RhbmNlb2YgZXhwZWN0ZWRDbGFzcykpIHtcbiAgICAgICAgdmFyIGV4cGVjdGVkQ2xhc3NOYW1lID0gZXhwZWN0ZWRDbGFzcy5uYW1lIHx8IEFOT05ZTU9VUztcbiAgICAgICAgdmFyIGFjdHVhbENsYXNzTmFtZSA9IGdldENsYXNzTmFtZShwcm9wc1twcm9wTmFtZV0pO1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIHR5cGUgJyArICgnYCcgKyBhY3R1YWxDbGFzc05hbWUgKyAnYCBzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgJykgKyAoJ2luc3RhbmNlIG9mIGAnICsgZXhwZWN0ZWRDbGFzc05hbWUgKyAnYC4nKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUVudW1UeXBlQ2hlY2tlcihleHBlY3RlZFZhbHVlcykge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShleHBlY3RlZFZhbHVlcykpIHtcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB3YXJuaW5nKGZhbHNlLCAnSW52YWxpZCBhcmd1bWVudCBzdXBwbGllZCB0byBvbmVPZiwgZXhwZWN0ZWQgYW4gaW5zdGFuY2Ugb2YgYXJyYXkuJykgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc051bGw7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBleHBlY3RlZFZhbHVlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaXMocHJvcFZhbHVlLCBleHBlY3RlZFZhbHVlc1tpXSkpIHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWVzU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoZXhwZWN0ZWRWYWx1ZXMpO1xuICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiB2YWx1ZSBgJyArIHByb3BWYWx1ZSArICdgICcgKyAoJ3N1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBvbmUgb2YgJyArIHZhbHVlc1N0cmluZyArICcuJykpO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlT2JqZWN0T2ZUeXBlQ2hlY2tlcih0eXBlQ2hlY2tlcikge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgaWYgKHR5cGVvZiB0eXBlQ2hlY2tlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ1Byb3BlcnR5IGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgY29tcG9uZW50IGAnICsgY29tcG9uZW50TmFtZSArICdgIGhhcyBpbnZhbGlkIFByb3BUeXBlIG5vdGF0aW9uIGluc2lkZSBvYmplY3RPZi4nKTtcbiAgICAgIH1cbiAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICB2YXIgcHJvcFR5cGUgPSBnZXRQcm9wVHlwZShwcm9wVmFsdWUpO1xuICAgICAgaWYgKHByb3BUeXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIHR5cGUgJyArICgnYCcgKyBwcm9wVHlwZSArICdgIHN1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBhbiBvYmplY3QuJykpO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIga2V5IGluIHByb3BWYWx1ZSkge1xuICAgICAgICBpZiAocHJvcFZhbHVlLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICB2YXIgZXJyb3IgPSB0eXBlQ2hlY2tlcihwcm9wVmFsdWUsIGtleSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSArICcuJyArIGtleSwgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVVuaW9uVHlwZUNoZWNrZXIoYXJyYXlPZlR5cGVDaGVja2Vycykge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShhcnJheU9mVHlwZUNoZWNrZXJzKSkge1xuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHdhcm5pbmcoZmFsc2UsICdJbnZhbGlkIGFyZ3VtZW50IHN1cHBsaWVkIHRvIG9uZU9mVHlwZSwgZXhwZWN0ZWQgYW4gaW5zdGFuY2Ugb2YgYXJyYXkuJykgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc051bGw7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnJheU9mVHlwZUNoZWNrZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgY2hlY2tlciA9IGFycmF5T2ZUeXBlQ2hlY2tlcnNbaV07XG4gICAgICBpZiAodHlwZW9mIGNoZWNrZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgd2FybmluZyhcbiAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAnSW52YWxpZCBhcmd1bWVudCBzdXBwbGllZCB0byBvbmVPZlR5cGUuIEV4cGVjdGVkIGFuIGFycmF5IG9mIGNoZWNrIGZ1bmN0aW9ucywgYnV0ICcgK1xuICAgICAgICAgICdyZWNlaXZlZCAlcyBhdCBpbmRleCAlcy4nLFxuICAgICAgICAgIGdldFBvc3RmaXhGb3JUeXBlV2FybmluZyhjaGVja2VyKSxcbiAgICAgICAgICBpXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiBlbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyYXlPZlR5cGVDaGVja2Vycy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgY2hlY2tlciA9IGFycmF5T2ZUeXBlQ2hlY2tlcnNbaV07XG4gICAgICAgIGlmIChjaGVja2VyKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgUmVhY3RQcm9wVHlwZXNTZWNyZXQpID09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIHN1cHBsaWVkIHRvICcgKyAoJ2AnICsgY29tcG9uZW50TmFtZSArICdgLicpKTtcbiAgICB9XG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZU5vZGVDaGVja2VyKCkge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgaWYgKCFpc05vZGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIHN1cHBsaWVkIHRvICcgKyAoJ2AnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBhIFJlYWN0Tm9kZS4nKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVNoYXBlVHlwZUNoZWNrZXIoc2hhcGVUeXBlcykge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcbiAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG4gICAgICBpZiAocHJvcFR5cGUgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSBgJyArIHByb3BUeXBlICsgJ2AgJyArICgnc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIGBvYmplY3RgLicpKTtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGtleSBpbiBzaGFwZVR5cGVzKSB7XG4gICAgICAgIHZhciBjaGVja2VyID0gc2hhcGVUeXBlc1trZXldO1xuICAgICAgICBpZiAoIWNoZWNrZXIpIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZXJyb3IgPSBjaGVja2VyKHByb3BWYWx1ZSwga2V5LCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgJy4nICsga2V5LCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVTdHJpY3RTaGFwZVR5cGVDaGVja2VyKHNoYXBlVHlwZXMpIHtcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICB2YXIgcHJvcFR5cGUgPSBnZXRQcm9wVHlwZShwcm9wVmFsdWUpO1xuICAgICAgaWYgKHByb3BUeXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIHR5cGUgYCcgKyBwcm9wVHlwZSArICdgICcgKyAoJ3N1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBgb2JqZWN0YC4nKSk7XG4gICAgICB9XG4gICAgICAvLyBXZSBuZWVkIHRvIGNoZWNrIGFsbCBrZXlzIGluIGNhc2Ugc29tZSBhcmUgcmVxdWlyZWQgYnV0IG1pc3NpbmcgZnJvbVxuICAgICAgLy8gcHJvcHMuXG4gICAgICB2YXIgYWxsS2V5cyA9IGFzc2lnbih7fSwgcHJvcHNbcHJvcE5hbWVdLCBzaGFwZVR5cGVzKTtcbiAgICAgIGZvciAodmFyIGtleSBpbiBhbGxLZXlzKSB7XG4gICAgICAgIHZhciBjaGVja2VyID0gc2hhcGVUeXBlc1trZXldO1xuICAgICAgICBpZiAoIWNoZWNrZXIpIHtcbiAgICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXG4gICAgICAgICAgICAnSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Aga2V5IGAnICsga2V5ICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AuJyArXG4gICAgICAgICAgICAnXFxuQmFkIG9iamVjdDogJyArIEpTT04uc3RyaW5naWZ5KHByb3BzW3Byb3BOYW1lXSwgbnVsbCwgJyAgJykgK1xuICAgICAgICAgICAgJ1xcblZhbGlkIGtleXM6ICcgKyAgSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmtleXMoc2hhcGVUeXBlcyksIG51bGwsICcgICcpXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZXJyb3IgPSBjaGVja2VyKHByb3BWYWx1ZSwga2V5LCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgJy4nICsga2V5LCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGlzTm9kZShwcm9wVmFsdWUpIHtcbiAgICBzd2l0Y2ggKHR5cGVvZiBwcm9wVmFsdWUpIHtcbiAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgY2FzZSAndW5kZWZpbmVkJzpcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICBjYXNlICdib29sZWFuJzpcbiAgICAgICAgcmV0dXJuICFwcm9wVmFsdWU7XG4gICAgICBjYXNlICdvYmplY3QnOlxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShwcm9wVmFsdWUpKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BWYWx1ZS5ldmVyeShpc05vZGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9wVmFsdWUgPT09IG51bGwgfHwgaXNWYWxpZEVsZW1lbnQocHJvcFZhbHVlKSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGl0ZXJhdG9yRm4gPSBnZXRJdGVyYXRvckZuKHByb3BWYWx1ZSk7XG4gICAgICAgIGlmIChpdGVyYXRvckZuKSB7XG4gICAgICAgICAgdmFyIGl0ZXJhdG9yID0gaXRlcmF0b3JGbi5jYWxsKHByb3BWYWx1ZSk7XG4gICAgICAgICAgdmFyIHN0ZXA7XG4gICAgICAgICAgaWYgKGl0ZXJhdG9yRm4gIT09IHByb3BWYWx1ZS5lbnRyaWVzKSB7XG4gICAgICAgICAgICB3aGlsZSAoIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lKSB7XG4gICAgICAgICAgICAgIGlmICghaXNOb2RlKHN0ZXAudmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIEl0ZXJhdG9yIHdpbGwgcHJvdmlkZSBlbnRyeSBbayx2XSB0dXBsZXMgcmF0aGVyIHRoYW4gdmFsdWVzLlxuICAgICAgICAgICAgd2hpbGUgKCEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZSkge1xuICAgICAgICAgICAgICB2YXIgZW50cnkgPSBzdGVwLnZhbHVlO1xuICAgICAgICAgICAgICBpZiAoZW50cnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWlzTm9kZShlbnRyeVsxXSkpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaXNTeW1ib2wocHJvcFR5cGUsIHByb3BWYWx1ZSkge1xuICAgIC8vIE5hdGl2ZSBTeW1ib2wuXG4gICAgaWYgKHByb3BUeXBlID09PSAnc3ltYm9sJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgLy8gMTkuNC4zLjUgU3ltYm9sLnByb3RvdHlwZVtAQHRvU3RyaW5nVGFnXSA9PT0gJ1N5bWJvbCdcbiAgICBpZiAocHJvcFZhbHVlWydAQHRvU3RyaW5nVGFnJ10gPT09ICdTeW1ib2wnKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLyBGYWxsYmFjayBmb3Igbm9uLXNwZWMgY29tcGxpYW50IFN5bWJvbHMgd2hpY2ggYXJlIHBvbHlmaWxsZWQuXG4gICAgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgcHJvcFZhbHVlIGluc3RhbmNlb2YgU3ltYm9sKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBFcXVpdmFsZW50IG9mIGB0eXBlb2ZgIGJ1dCB3aXRoIHNwZWNpYWwgaGFuZGxpbmcgZm9yIGFycmF5IGFuZCByZWdleHAuXG4gIGZ1bmN0aW9uIGdldFByb3BUeXBlKHByb3BWYWx1ZSkge1xuICAgIHZhciBwcm9wVHlwZSA9IHR5cGVvZiBwcm9wVmFsdWU7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkocHJvcFZhbHVlKSkge1xuICAgICAgcmV0dXJuICdhcnJheSc7XG4gICAgfVxuICAgIGlmIChwcm9wVmFsdWUgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICAgIC8vIE9sZCB3ZWJraXRzIChhdCBsZWFzdCB1bnRpbCBBbmRyb2lkIDQuMCkgcmV0dXJuICdmdW5jdGlvbicgcmF0aGVyIHRoYW5cbiAgICAgIC8vICdvYmplY3QnIGZvciB0eXBlb2YgYSBSZWdFeHAuIFdlJ2xsIG5vcm1hbGl6ZSB0aGlzIGhlcmUgc28gdGhhdCAvYmxhL1xuICAgICAgLy8gcGFzc2VzIFByb3BUeXBlcy5vYmplY3QuXG4gICAgICByZXR1cm4gJ29iamVjdCc7XG4gICAgfVxuICAgIGlmIChpc1N5bWJvbChwcm9wVHlwZSwgcHJvcFZhbHVlKSkge1xuICAgICAgcmV0dXJuICdzeW1ib2wnO1xuICAgIH1cbiAgICByZXR1cm4gcHJvcFR5cGU7XG4gIH1cblxuICAvLyBUaGlzIGhhbmRsZXMgbW9yZSB0eXBlcyB0aGFuIGBnZXRQcm9wVHlwZWAuIE9ubHkgdXNlZCBmb3IgZXJyb3IgbWVzc2FnZXMuXG4gIC8vIFNlZSBgY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXJgLlxuICBmdW5jdGlvbiBnZXRQcmVjaXNlVHlwZShwcm9wVmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHByb3BWYWx1ZSA9PT0gJ3VuZGVmaW5lZCcgfHwgcHJvcFZhbHVlID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gJycgKyBwcm9wVmFsdWU7XG4gICAgfVxuICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG4gICAgaWYgKHByb3BUeXBlID09PSAnb2JqZWN0Jykge1xuICAgICAgaWYgKHByb3BWYWx1ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgcmV0dXJuICdkYXRlJztcbiAgICAgIH0gZWxzZSBpZiAocHJvcFZhbHVlIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgIHJldHVybiAncmVnZXhwJztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHByb3BUeXBlO1xuICB9XG5cbiAgLy8gUmV0dXJucyBhIHN0cmluZyB0aGF0IGlzIHBvc3RmaXhlZCB0byBhIHdhcm5pbmcgYWJvdXQgYW4gaW52YWxpZCB0eXBlLlxuICAvLyBGb3IgZXhhbXBsZSwgXCJ1bmRlZmluZWRcIiBvciBcIm9mIHR5cGUgYXJyYXlcIlxuICBmdW5jdGlvbiBnZXRQb3N0Zml4Rm9yVHlwZVdhcm5pbmcodmFsdWUpIHtcbiAgICB2YXIgdHlwZSA9IGdldFByZWNpc2VUeXBlKHZhbHVlKTtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ2FycmF5JzpcbiAgICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICAgIHJldHVybiAnYW4gJyArIHR5cGU7XG4gICAgICBjYXNlICdib29sZWFuJzpcbiAgICAgIGNhc2UgJ2RhdGUnOlxuICAgICAgY2FzZSAncmVnZXhwJzpcbiAgICAgICAgcmV0dXJuICdhICcgKyB0eXBlO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgfVxuICB9XG5cbiAgLy8gUmV0dXJucyBjbGFzcyBuYW1lIG9mIHRoZSBvYmplY3QsIGlmIGFueS5cbiAgZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lKHByb3BWYWx1ZSkge1xuICAgIGlmICghcHJvcFZhbHVlLmNvbnN0cnVjdG9yIHx8ICFwcm9wVmFsdWUuY29uc3RydWN0b3IubmFtZSkge1xuICAgICAgcmV0dXJuIEFOT05ZTU9VUztcbiAgICB9XG4gICAgcmV0dXJuIHByb3BWYWx1ZS5jb25zdHJ1Y3Rvci5uYW1lO1xuICB9XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBjaGVja1Byb3BUeXBlcztcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cblxuZnVuY3Rpb24gbWFrZUVtcHR5RnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGFyZztcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGFjY2VwdHMgYW5kIGRpc2NhcmRzIGlucHV0czsgaXQgaGFzIG5vIHNpZGUgZWZmZWN0cy4gVGhpcyBpc1xuICogcHJpbWFyaWx5IHVzZWZ1bCBpZGlvbWF0aWNhbGx5IGZvciBvdmVycmlkYWJsZSBmdW5jdGlvbiBlbmRwb2ludHMgd2hpY2hcbiAqIGFsd2F5cyBuZWVkIHRvIGJlIGNhbGxhYmxlLCBzaW5jZSBKUyBsYWNrcyBhIG51bGwtY2FsbCBpZGlvbSBhbGEgQ29jb2EuXG4gKi9cbnZhciBlbXB0eUZ1bmN0aW9uID0gZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9O1xuXG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zID0gbWFrZUVtcHR5RnVuY3Rpb247XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zRmFsc2UgPSBtYWtlRW1wdHlGdW5jdGlvbihmYWxzZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zVHJ1ZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKHRydWUpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc051bGwgPSBtYWtlRW1wdHlGdW5jdGlvbihudWxsKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUaGlzID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcztcbn07XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zQXJndW1lbnQgPSBmdW5jdGlvbiAoYXJnKSB7XG4gIHJldHVybiBhcmc7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcHR5RnVuY3Rpb247IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCk7XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcignTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKCcuL2VtcHR5RnVuY3Rpb24nKTtcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBlbXB0eUZ1bmN0aW9uO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICsgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgIH0pO1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG5cbiAgd2FybmluZyA9IGZ1bmN0aW9uIHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArICdtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5pbmRleE9mKCdGYWlsZWQgQ29tcG9zaXRlIHByb3BUeXBlOiAnKSA9PT0gMCkge1xuICAgICAgcmV0dXJuOyAvLyBJZ25vcmUgQ29tcG9zaXRlQ29tcG9uZW50IHByb3B0eXBlIGNoZWNrLlxuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuMiA+IDIgPyBfbGVuMiAtIDIgOiAwKSwgX2tleTIgPSAyOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTIgLSAyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIHByaW50V2FybmluZy5hcHBseSh1bmRlZmluZWQsIFtmb3JtYXRdLmNvbmNhdChhcmdzKSk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7IiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9jaGFpbkZ1bmN0aW9uID0gcmVxdWlyZSgnY2hhaW4tZnVuY3Rpb24nKTtcblxudmFyIF9jaGFpbkZ1bmN0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NoYWluRnVuY3Rpb24pO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCd3YXJuaW5nJyk7XG5cbnZhciBfd2FybmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93YXJuaW5nKTtcblxudmFyIF9DaGlsZE1hcHBpbmcgPSByZXF1aXJlKCcuL3V0aWxzL0NoaWxkTWFwcGluZycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBwcm9wVHlwZXMgPSB7XG4gIGNvbXBvbmVudDogX3Byb3BUeXBlczIuZGVmYXVsdC5hbnksXG4gIGNoaWxkRmFjdG9yeTogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICBjaGlsZHJlbjogX3Byb3BUeXBlczIuZGVmYXVsdC5ub2RlXG59O1xuXG52YXIgZGVmYXVsdFByb3BzID0ge1xuICBjb21wb25lbnQ6ICdzcGFuJyxcbiAgY2hpbGRGYWN0b3J5OiBmdW5jdGlvbiBjaGlsZEZhY3RvcnkoY2hpbGQpIHtcbiAgICByZXR1cm4gY2hpbGQ7XG4gIH1cbn07XG5cbnZhciBUcmFuc2l0aW9uR3JvdXAgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoVHJhbnNpdGlvbkdyb3VwLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBUcmFuc2l0aW9uR3JvdXAocHJvcHMsIGNvbnRleHQpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJhbnNpdGlvbkdyb3VwKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcywgY29udGV4dCkpO1xuXG4gICAgX3RoaXMucGVyZm9ybUFwcGVhciA9IGZ1bmN0aW9uIChrZXksIGNvbXBvbmVudCkge1xuICAgICAgX3RoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNba2V5XSA9IHRydWU7XG5cbiAgICAgIGlmIChjb21wb25lbnQuY29tcG9uZW50V2lsbEFwcGVhcikge1xuICAgICAgICBjb21wb25lbnQuY29tcG9uZW50V2lsbEFwcGVhcihfdGhpcy5faGFuZGxlRG9uZUFwcGVhcmluZy5iaW5kKF90aGlzLCBrZXksIGNvbXBvbmVudCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuX2hhbmRsZURvbmVBcHBlYXJpbmcoa2V5LCBjb21wb25lbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5faGFuZGxlRG9uZUFwcGVhcmluZyA9IGZ1bmN0aW9uIChrZXksIGNvbXBvbmVudCkge1xuICAgICAgaWYgKGNvbXBvbmVudC5jb21wb25lbnREaWRBcHBlYXIpIHtcbiAgICAgICAgY29tcG9uZW50LmNvbXBvbmVudERpZEFwcGVhcigpO1xuICAgICAgfVxuXG4gICAgICBkZWxldGUgX3RoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNba2V5XTtcblxuICAgICAgdmFyIGN1cnJlbnRDaGlsZE1hcHBpbmcgPSAoMCwgX0NoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcpKF90aGlzLnByb3BzLmNoaWxkcmVuKTtcblxuICAgICAgaWYgKCFjdXJyZW50Q2hpbGRNYXBwaW5nIHx8ICFjdXJyZW50Q2hpbGRNYXBwaW5nLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgLy8gVGhpcyB3YXMgcmVtb3ZlZCBiZWZvcmUgaXQgaGFkIGZ1bGx5IGFwcGVhcmVkLiBSZW1vdmUgaXQuXG4gICAgICAgIF90aGlzLnBlcmZvcm1MZWF2ZShrZXksIGNvbXBvbmVudCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLnBlcmZvcm1FbnRlciA9IGZ1bmN0aW9uIChrZXksIGNvbXBvbmVudCkge1xuICAgICAgX3RoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNba2V5XSA9IHRydWU7XG5cbiAgICAgIGlmIChjb21wb25lbnQuY29tcG9uZW50V2lsbEVudGVyKSB7XG4gICAgICAgIGNvbXBvbmVudC5jb21wb25lbnRXaWxsRW50ZXIoX3RoaXMuX2hhbmRsZURvbmVFbnRlcmluZy5iaW5kKF90aGlzLCBrZXksIGNvbXBvbmVudCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuX2hhbmRsZURvbmVFbnRlcmluZyhrZXksIGNvbXBvbmVudCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLl9oYW5kbGVEb25lRW50ZXJpbmcgPSBmdW5jdGlvbiAoa2V5LCBjb21wb25lbnQpIHtcbiAgICAgIGlmIChjb21wb25lbnQuY29tcG9uZW50RGlkRW50ZXIpIHtcbiAgICAgICAgY29tcG9uZW50LmNvbXBvbmVudERpZEVudGVyKCk7XG4gICAgICB9XG5cbiAgICAgIGRlbGV0ZSBfdGhpcy5jdXJyZW50bHlUcmFuc2l0aW9uaW5nS2V5c1trZXldO1xuXG4gICAgICB2YXIgY3VycmVudENoaWxkTWFwcGluZyA9ICgwLCBfQ2hpbGRNYXBwaW5nLmdldENoaWxkTWFwcGluZykoX3RoaXMucHJvcHMuY2hpbGRyZW4pO1xuXG4gICAgICBpZiAoIWN1cnJlbnRDaGlsZE1hcHBpbmcgfHwgIWN1cnJlbnRDaGlsZE1hcHBpbmcuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAvLyBUaGlzIHdhcyByZW1vdmVkIGJlZm9yZSBpdCBoYWQgZnVsbHkgZW50ZXJlZC4gUmVtb3ZlIGl0LlxuICAgICAgICBfdGhpcy5wZXJmb3JtTGVhdmUoa2V5LCBjb21wb25lbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5wZXJmb3JtTGVhdmUgPSBmdW5jdGlvbiAoa2V5LCBjb21wb25lbnQpIHtcbiAgICAgIF90aGlzLmN1cnJlbnRseVRyYW5zaXRpb25pbmdLZXlzW2tleV0gPSB0cnVlO1xuXG4gICAgICBpZiAoY29tcG9uZW50LmNvbXBvbmVudFdpbGxMZWF2ZSkge1xuICAgICAgICBjb21wb25lbnQuY29tcG9uZW50V2lsbExlYXZlKF90aGlzLl9oYW5kbGVEb25lTGVhdmluZy5iaW5kKF90aGlzLCBrZXksIGNvbXBvbmVudCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTm90ZSB0aGF0IHRoaXMgaXMgc29tZXdoYXQgZGFuZ2Vyb3VzIGIvYyBpdCBjYWxscyBzZXRTdGF0ZSgpXG4gICAgICAgIC8vIGFnYWluLCBlZmZlY3RpdmVseSBtdXRhdGluZyB0aGUgY29tcG9uZW50IGJlZm9yZSBhbGwgdGhlIHdvcmtcbiAgICAgICAgLy8gaXMgZG9uZS5cbiAgICAgICAgX3RoaXMuX2hhbmRsZURvbmVMZWF2aW5nKGtleSwgY29tcG9uZW50KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMuX2hhbmRsZURvbmVMZWF2aW5nID0gZnVuY3Rpb24gKGtleSwgY29tcG9uZW50KSB7XG4gICAgICBpZiAoY29tcG9uZW50LmNvbXBvbmVudERpZExlYXZlKSB7XG4gICAgICAgIGNvbXBvbmVudC5jb21wb25lbnREaWRMZWF2ZSgpO1xuICAgICAgfVxuXG4gICAgICBkZWxldGUgX3RoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNba2V5XTtcblxuICAgICAgdmFyIGN1cnJlbnRDaGlsZE1hcHBpbmcgPSAoMCwgX0NoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcpKF90aGlzLnByb3BzLmNoaWxkcmVuKTtcblxuICAgICAgaWYgKGN1cnJlbnRDaGlsZE1hcHBpbmcgJiYgY3VycmVudENoaWxkTWFwcGluZy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIC8vIFRoaXMgZW50ZXJlZCBhZ2FpbiBiZWZvcmUgaXQgZnVsbHkgbGVmdC4gQWRkIGl0IGFnYWluLlxuICAgICAgICBfdGhpcy5rZXlzVG9FbnRlci5wdXNoKGtleSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfdGhpcy5zZXRTdGF0ZShmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgICAgICB2YXIgbmV3Q2hpbGRyZW4gPSBfZXh0ZW5kcyh7fSwgc3RhdGUuY2hpbGRyZW4pO1xuICAgICAgICAgIGRlbGV0ZSBuZXdDaGlsZHJlbltrZXldO1xuICAgICAgICAgIHJldHVybiB7IGNoaWxkcmVuOiBuZXdDaGlsZHJlbiB9O1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMuY2hpbGRSZWZzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgY2hpbGRyZW46ICgwLCBfQ2hpbGRNYXBwaW5nLmdldENoaWxkTWFwcGluZykocHJvcHMuY2hpbGRyZW4pXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB0aGlzLmN1cnJlbnRseVRyYW5zaXRpb25pbmdLZXlzID0ge307XG4gICAgdGhpcy5rZXlzVG9FbnRlciA9IFtdO1xuICAgIHRoaXMua2V5c1RvTGVhdmUgPSBbXTtcbiAgfTtcblxuICBUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdmFyIGluaXRpYWxDaGlsZE1hcHBpbmcgPSB0aGlzLnN0YXRlLmNoaWxkcmVuO1xuICAgIGZvciAodmFyIGtleSBpbiBpbml0aWFsQ2hpbGRNYXBwaW5nKSB7XG4gICAgICBpZiAoaW5pdGlhbENoaWxkTWFwcGluZ1trZXldKSB7XG4gICAgICAgIHRoaXMucGVyZm9ybUFwcGVhcihrZXksIHRoaXMuY2hpbGRSZWZzW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHZhciBuZXh0Q2hpbGRNYXBwaW5nID0gKDAsIF9DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKShuZXh0UHJvcHMuY2hpbGRyZW4pO1xuICAgIHZhciBwcmV2Q2hpbGRNYXBwaW5nID0gdGhpcy5zdGF0ZS5jaGlsZHJlbjtcblxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgY2hpbGRyZW46ICgwLCBfQ2hpbGRNYXBwaW5nLm1lcmdlQ2hpbGRNYXBwaW5ncykocHJldkNoaWxkTWFwcGluZywgbmV4dENoaWxkTWFwcGluZylcbiAgICB9KTtcblxuICAgIGZvciAodmFyIGtleSBpbiBuZXh0Q2hpbGRNYXBwaW5nKSB7XG4gICAgICB2YXIgaGFzUHJldiA9IHByZXZDaGlsZE1hcHBpbmcgJiYgcHJldkNoaWxkTWFwcGluZy5oYXNPd25Qcm9wZXJ0eShrZXkpO1xuICAgICAgaWYgKG5leHRDaGlsZE1hcHBpbmdba2V5XSAmJiAhaGFzUHJldiAmJiAhdGhpcy5jdXJyZW50bHlUcmFuc2l0aW9uaW5nS2V5c1trZXldKSB7XG4gICAgICAgIHRoaXMua2V5c1RvRW50ZXIucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rZXkgaW4gcHJldkNoaWxkTWFwcGluZykge1xuICAgICAgdmFyIGhhc05leHQgPSBuZXh0Q2hpbGRNYXBwaW5nICYmIG5leHRDaGlsZE1hcHBpbmcuaGFzT3duUHJvcGVydHkoX2tleSk7XG4gICAgICBpZiAocHJldkNoaWxkTWFwcGluZ1tfa2V5XSAmJiAhaGFzTmV4dCAmJiAhdGhpcy5jdXJyZW50bHlUcmFuc2l0aW9uaW5nS2V5c1tfa2V5XSkge1xuICAgICAgICB0aGlzLmtleXNUb0xlYXZlLnB1c2goX2tleSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSWYgd2Ugd2FudCB0byBzb21lZGF5IGNoZWNrIGZvciByZW9yZGVyaW5nLCB3ZSBjb3VsZCBkbyBpdCBoZXJlLlxuICB9O1xuXG4gIFRyYW5zaXRpb25Hcm91cC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIGtleXNUb0VudGVyID0gdGhpcy5rZXlzVG9FbnRlcjtcbiAgICB0aGlzLmtleXNUb0VudGVyID0gW107XG4gICAga2V5c1RvRW50ZXIuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gX3RoaXMyLnBlcmZvcm1FbnRlcihrZXksIF90aGlzMi5jaGlsZFJlZnNba2V5XSk7XG4gICAgfSk7XG5cbiAgICB2YXIga2V5c1RvTGVhdmUgPSB0aGlzLmtleXNUb0xlYXZlO1xuICAgIHRoaXMua2V5c1RvTGVhdmUgPSBbXTtcbiAgICBrZXlzVG9MZWF2ZS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiBfdGhpczIucGVyZm9ybUxlYXZlKGtleSwgX3RoaXMyLmNoaWxkUmVmc1trZXldKTtcbiAgICB9KTtcbiAgfTtcblxuICBUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgIC8vIFRPRE86IHdlIGNvdWxkIGdldCByaWQgb2YgdGhlIG5lZWQgZm9yIHRoZSB3cmFwcGVyIG5vZGVcbiAgICAvLyBieSBjbG9uaW5nIGEgc2luZ2xlIGNoaWxkXG4gICAgdmFyIGNoaWxkcmVuVG9SZW5kZXIgPSBbXTtcblxuICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKGtleSkge1xuICAgICAgdmFyIGNoaWxkID0gX3RoaXMzLnN0YXRlLmNoaWxkcmVuW2tleV07XG4gICAgICBpZiAoY2hpbGQpIHtcbiAgICAgICAgdmFyIGlzQ2FsbGJhY2tSZWYgPSB0eXBlb2YgY2hpbGQucmVmICE9PSAnc3RyaW5nJztcbiAgICAgICAgdmFyIGZhY3RvcnlDaGlsZCA9IF90aGlzMy5wcm9wcy5jaGlsZEZhY3RvcnkoY2hpbGQpO1xuICAgICAgICB2YXIgcmVmID0gZnVuY3Rpb24gcmVmKHIpIHtcbiAgICAgICAgICBfdGhpczMuY2hpbGRSZWZzW2tleV0gPSByO1xuICAgICAgICB9O1xuXG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyAoMCwgX3dhcm5pbmcyLmRlZmF1bHQpKGlzQ2FsbGJhY2tSZWYsICdzdHJpbmcgcmVmcyBhcmUgbm90IHN1cHBvcnRlZCBvbiBjaGlsZHJlbiBvZiBUcmFuc2l0aW9uR3JvdXAgYW5kIHdpbGwgYmUgaWdub3JlZC4gJyArICdQbGVhc2UgdXNlIGEgY2FsbGJhY2sgcmVmIGluc3RlYWQ6IGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvcmVmcy1hbmQtdGhlLWRvbS5odG1sI3RoZS1yZWYtY2FsbGJhY2stYXR0cmlidXRlJykgOiB2b2lkIDA7XG5cbiAgICAgICAgLy8gQWx3YXlzIGNoYWluaW5nIHRoZSByZWZzIGxlYWRzIHRvIHByb2JsZW1zIHdoZW4gdGhlIGNoaWxkRmFjdG9yeVxuICAgICAgICAvLyB3cmFwcyB0aGUgY2hpbGQuIFRoZSBjaGlsZCByZWYgY2FsbGJhY2sgZ2V0cyBjYWxsZWQgdHdpY2Ugd2l0aCB0aGVcbiAgICAgICAgLy8gd3JhcHBlciBhbmQgdGhlIGNoaWxkLiBTbyB3ZSBvbmx5IG5lZWQgdG8gY2hhaW4gdGhlIHJlZiBpZiB0aGVcbiAgICAgICAgLy8gZmFjdG9yeUNoaWxkIGlzIG5vdCBkaWZmZXJlbnQgZnJvbSBjaGlsZC5cbiAgICAgICAgaWYgKGZhY3RvcnlDaGlsZCA9PT0gY2hpbGQgJiYgaXNDYWxsYmFja1JlZikge1xuICAgICAgICAgIHJlZiA9ICgwLCBfY2hhaW5GdW5jdGlvbjIuZGVmYXVsdCkoY2hpbGQucmVmLCByZWYpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gWW91IG1heSBuZWVkIHRvIGFwcGx5IHJlYWN0aXZlIHVwZGF0ZXMgdG8gYSBjaGlsZCBhcyBpdCBpcyBsZWF2aW5nLlxuICAgICAgICAvLyBUaGUgbm9ybWFsIFJlYWN0IHdheSB0byBkbyBpdCB3b24ndCB3b3JrIHNpbmNlIHRoZSBjaGlsZCB3aWxsIGhhdmVcbiAgICAgICAgLy8gYWxyZWFkeSBiZWVuIHJlbW92ZWQuIEluIGNhc2UgeW91IG5lZWQgdGhpcyBiZWhhdmlvciB5b3UgY2FuIHByb3ZpZGVcbiAgICAgICAgLy8gYSBjaGlsZEZhY3RvcnkgZnVuY3Rpb24gdG8gd3JhcCBldmVyeSBjaGlsZCwgZXZlbiB0aGUgb25lcyB0aGF0IGFyZVxuICAgICAgICAvLyBsZWF2aW5nLlxuICAgICAgICBjaGlsZHJlblRvUmVuZGVyLnB1c2goX3JlYWN0Mi5kZWZhdWx0LmNsb25lRWxlbWVudChmYWN0b3J5Q2hpbGQsIHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICByZWY6IHJlZlxuICAgICAgICB9KSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZvciAodmFyIGtleSBpbiB0aGlzLnN0YXRlLmNoaWxkcmVuKSB7XG4gICAgICBfbG9vcChrZXkpO1xuICAgIH1cblxuICAgIC8vIERvIG5vdCBmb3J3YXJkIFRyYW5zaXRpb25Hcm91cCBwcm9wcyB0byBwcmltaXRpdmUgRE9NIG5vZGVzXG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHRoaXMucHJvcHMpO1xuICAgIGRlbGV0ZSBwcm9wcy50cmFuc2l0aW9uTGVhdmU7XG4gICAgZGVsZXRlIHByb3BzLnRyYW5zaXRpb25OYW1lO1xuICAgIGRlbGV0ZSBwcm9wcy50cmFuc2l0aW9uQXBwZWFyO1xuICAgIGRlbGV0ZSBwcm9wcy50cmFuc2l0aW9uRW50ZXI7XG4gICAgZGVsZXRlIHByb3BzLmNoaWxkRmFjdG9yeTtcbiAgICBkZWxldGUgcHJvcHMudHJhbnNpdGlvbkxlYXZlVGltZW91dDtcbiAgICBkZWxldGUgcHJvcHMudHJhbnNpdGlvbkVudGVyVGltZW91dDtcbiAgICBkZWxldGUgcHJvcHMudHJhbnNpdGlvbkFwcGVhclRpbWVvdXQ7XG4gICAgZGVsZXRlIHByb3BzLmNvbXBvbmVudDtcblxuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh0aGlzLnByb3BzLmNvbXBvbmVudCwgcHJvcHMsIGNoaWxkcmVuVG9SZW5kZXIpO1xuICB9O1xuXG4gIHJldHVybiBUcmFuc2l0aW9uR3JvdXA7XG59KF9yZWFjdDIuZGVmYXVsdC5Db21wb25lbnQpO1xuXG5UcmFuc2l0aW9uR3JvdXAuZGlzcGxheU5hbWUgPSAnVHJhbnNpdGlvbkdyb3VwJztcblxuXG5UcmFuc2l0aW9uR3JvdXAucHJvcFR5cGVzID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gcHJvcFR5cGVzIDoge307XG5UcmFuc2l0aW9uR3JvdXAuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBUcmFuc2l0aW9uR3JvdXA7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmb3JtYXQubGVuZ3RoIDwgMTAgfHwgKC9eW3NcXFddKiQvKS50ZXN0KGZvcm1hdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1RoZSB3YXJuaW5nIGZvcm1hdCBzaG91bGQgYmUgYWJsZSB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzICcgK1xuICAgICAgICAnd2FybmluZy4gUGxlYXNlLCB1c2UgYSBtb3JlIGRlc2NyaXB0aXZlIGZvcm1hdCB0aGFuOiAnICsgZm9ybWF0XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgICAgfSk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgIH0gY2F0Y2goeCkge31cbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZ2V0Q2hpbGRNYXBwaW5nID0gZ2V0Q2hpbGRNYXBwaW5nO1xuZXhwb3J0cy5tZXJnZUNoaWxkTWFwcGluZ3MgPSBtZXJnZUNoaWxkTWFwcGluZ3M7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG4vKipcbiAqIEdpdmVuIGB0aGlzLnByb3BzLmNoaWxkcmVuYCwgcmV0dXJuIGFuIG9iamVjdCBtYXBwaW5nIGtleSB0byBjaGlsZC5cbiAqXG4gKiBAcGFyYW0geyp9IGNoaWxkcmVuIGB0aGlzLnByb3BzLmNoaWxkcmVuYFxuICogQHJldHVybiB7b2JqZWN0fSBNYXBwaW5nIG9mIGtleSB0byBjaGlsZFxuICovXG5mdW5jdGlvbiBnZXRDaGlsZE1hcHBpbmcoY2hpbGRyZW4pIHtcbiAgaWYgKCFjaGlsZHJlbikge1xuICAgIHJldHVybiBjaGlsZHJlbjtcbiAgfVxuICB2YXIgcmVzdWx0ID0ge307XG4gIF9yZWFjdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgIHJldHVybiBjaGlsZDtcbiAgfSkuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICByZXN1bHRbY2hpbGQua2V5XSA9IGNoaWxkO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBXaGVuIHlvdSdyZSBhZGRpbmcgb3IgcmVtb3ZpbmcgY2hpbGRyZW4gc29tZSBtYXkgYmUgYWRkZWQgb3IgcmVtb3ZlZCBpbiB0aGVcbiAqIHNhbWUgcmVuZGVyIHBhc3MuIFdlIHdhbnQgdG8gc2hvdyAqYm90aCogc2luY2Ugd2Ugd2FudCB0byBzaW11bHRhbmVvdXNseVxuICogYW5pbWF0ZSBlbGVtZW50cyBpbiBhbmQgb3V0LiBUaGlzIGZ1bmN0aW9uIHRha2VzIGEgcHJldmlvdXMgc2V0IG9mIGtleXNcbiAqIGFuZCBhIG5ldyBzZXQgb2Yga2V5cyBhbmQgbWVyZ2VzIHRoZW0gd2l0aCBpdHMgYmVzdCBndWVzcyBvZiB0aGUgY29ycmVjdFxuICogb3JkZXJpbmcuIEluIHRoZSBmdXR1cmUgd2UgbWF5IGV4cG9zZSBzb21lIG9mIHRoZSB1dGlsaXRpZXMgaW5cbiAqIFJlYWN0TXVsdGlDaGlsZCB0byBtYWtlIHRoaXMgZWFzeSwgYnV0IGZvciBub3cgUmVhY3QgaXRzZWxmIGRvZXMgbm90XG4gKiBkaXJlY3RseSBoYXZlIHRoaXMgY29uY2VwdCBvZiB0aGUgdW5pb24gb2YgcHJldkNoaWxkcmVuIGFuZCBuZXh0Q2hpbGRyZW5cbiAqIHNvIHdlIGltcGxlbWVudCBpdCBoZXJlLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcmV2IHByZXYgY2hpbGRyZW4gYXMgcmV0dXJuZWQgZnJvbVxuICogYFJlYWN0VHJhbnNpdGlvbkNoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcoKWAuXG4gKiBAcGFyYW0ge29iamVjdH0gbmV4dCBuZXh0IGNoaWxkcmVuIGFzIHJldHVybmVkIGZyb21cbiAqIGBSZWFjdFRyYW5zaXRpb25DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKClgLlxuICogQHJldHVybiB7b2JqZWN0fSBhIGtleSBzZXQgdGhhdCBjb250YWlucyBhbGwga2V5cyBpbiBgcHJldmAgYW5kIGFsbCBrZXlzXG4gKiBpbiBgbmV4dGAgaW4gYSByZWFzb25hYmxlIG9yZGVyLlxuICovXG5mdW5jdGlvbiBtZXJnZUNoaWxkTWFwcGluZ3MocHJldiwgbmV4dCkge1xuICBwcmV2ID0gcHJldiB8fCB7fTtcbiAgbmV4dCA9IG5leHQgfHwge307XG5cbiAgZnVuY3Rpb24gZ2V0VmFsdWVGb3JLZXkoa2V5KSB7XG4gICAgaWYgKG5leHQuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgcmV0dXJuIG5leHRba2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJldltrZXldO1xuICB9XG5cbiAgLy8gRm9yIGVhY2gga2V5IG9mIGBuZXh0YCwgdGhlIGxpc3Qgb2Yga2V5cyB0byBpbnNlcnQgYmVmb3JlIHRoYXQga2V5IGluXG4gIC8vIHRoZSBjb21iaW5lZCBsaXN0XG4gIHZhciBuZXh0S2V5c1BlbmRpbmcgPSB7fTtcblxuICB2YXIgcGVuZGluZ0tleXMgPSBbXTtcbiAgZm9yICh2YXIgcHJldktleSBpbiBwcmV2KSB7XG4gICAgaWYgKG5leHQuaGFzT3duUHJvcGVydHkocHJldktleSkpIHtcbiAgICAgIGlmIChwZW5kaW5nS2V5cy5sZW5ndGgpIHtcbiAgICAgICAgbmV4dEtleXNQZW5kaW5nW3ByZXZLZXldID0gcGVuZGluZ0tleXM7XG4gICAgICAgIHBlbmRpbmdLZXlzID0gW107XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHBlbmRpbmdLZXlzLnB1c2gocHJldktleSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGkgPSB2b2lkIDA7XG4gIHZhciBjaGlsZE1hcHBpbmcgPSB7fTtcbiAgZm9yICh2YXIgbmV4dEtleSBpbiBuZXh0KSB7XG4gICAgaWYgKG5leHRLZXlzUGVuZGluZy5oYXNPd25Qcm9wZXJ0eShuZXh0S2V5KSkge1xuICAgICAgZm9yIChpID0gMDsgaSA8IG5leHRLZXlzUGVuZGluZ1tuZXh0S2V5XS5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcGVuZGluZ05leHRLZXkgPSBuZXh0S2V5c1BlbmRpbmdbbmV4dEtleV1baV07XG4gICAgICAgIGNoaWxkTWFwcGluZ1tuZXh0S2V5c1BlbmRpbmdbbmV4dEtleV1baV1dID0gZ2V0VmFsdWVGb3JLZXkocGVuZGluZ05leHRLZXkpO1xuICAgICAgfVxuICAgIH1cbiAgICBjaGlsZE1hcHBpbmdbbmV4dEtleV0gPSBnZXRWYWx1ZUZvcktleShuZXh0S2V5KTtcbiAgfVxuXG4gIC8vIEZpbmFsbHksIGFkZCB0aGUga2V5cyB3aGljaCBkaWRuJ3QgYXBwZWFyIGJlZm9yZSBhbnkga2V5IGluIGBuZXh0YFxuICBmb3IgKGkgPSAwOyBpIDwgcGVuZGluZ0tleXMubGVuZ3RoOyBpKyspIHtcbiAgICBjaGlsZE1hcHBpbmdbcGVuZGluZ0tleXNbaV1dID0gZ2V0VmFsdWVGb3JLZXkocGVuZGluZ0tleXNbaV0pO1xuICB9XG5cbiAgcmV0dXJuIGNoaWxkTWFwcGluZztcbn0iLCIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmb3JtYXQubGVuZ3RoIDwgMTAgfHwgKC9eW3NcXFddKiQvKS50ZXN0KGZvcm1hdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1RoZSB3YXJuaW5nIGZvcm1hdCBzaG91bGQgYmUgYWJsZSB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzICcgK1xuICAgICAgICAnd2FybmluZy4gUGxlYXNlLCB1c2UgYSBtb3JlIGRlc2NyaXB0aXZlIGZvcm1hdCB0aGFuOiAnICsgZm9ybWF0XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgICAgfSk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgIH0gY2F0Y2goeCkge31cbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiJdfQ=="}